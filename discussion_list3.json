{
    "2": [
        {
            "discussion_title": "Is this Algorithm optimal or what?",
            "discussion_vote": "359",
            "discussion_views": "102.5K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers/discuss/1010/Is-this-Algorithm-optimal-or-what"
        },
        {
            "discussion_title": "[c++] Sharing my 11-line c++ solution, can someone make it even more concise?",
            "discussion_vote": "205",
            "discussion_views": "50.3K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers/discuss/997/c%2B%2B-Sharing-my-11-line-c%2B%2B-solution-can-someone-make-it-even-more-concise"
        },
        {
            "discussion_title": "Clear python code, straight forward",
            "discussion_vote": "144",
            "discussion_views": "47.2K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers/discuss/1016/Clear-python-code-straight-forward"
        },
        {
            "discussion_title": "My accepted Java solution",
            "discussion_vote": "106",
            "discussion_views": "54.2K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers/discuss/1059/My-accepted-Java-solution"
        },
        {
            "discussion_title": "Python concise solution.",
            "discussion_vote": "81",
            "discussion_views": "14.8K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers/discuss/1032/Python-concise-solution."
        }
    ],
    "3": [
        {
            "discussion_title": "11-line simple Java solution, O(n) with explanation",
            "discussion_vote": "549",
            "discussion_views": "134.9K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/1729/11-line-simple-Java-solution-O(n)-with-explanation"
        },
        {
            "discussion_title": "C++ code in 9 lines.",
            "discussion_vote": "316",
            "discussion_views": "62.4K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/1737/C%2B%2B-code-in-9-lines."
        },
        {
            "discussion_title": "Share my Java solution using HashSet",
            "discussion_vote": "206",
            "discussion_views": "30.8K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/1812/Share-my-Java-solution-using-HashSet"
        },
        {
            "discussion_title": "A Python solution - 85ms - O(n)",
            "discussion_vote": "148",
            "discussion_views": "44.6K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/1731/A-Python-solution-85ms-O(n)"
        },
        {
            "discussion_title": "Shortest O(n) DP solution with explanations",
            "discussion_vote": "141",
            "discussion_views": "40.8K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/1730/Shortest-O(n)-DP-solution-with-explanations"
        }
    ],
    "4": [
        {
            "discussion_title": "Share my O(log(min(m,n)) solution with explanation",
            "discussion_vote": "1.3K",
            "discussion_views": "264.3K",
            "discussion_link": "https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2481/Share-my-O(log(min(mn))-solution-with-explanation"
        },
        {
            "discussion_title": "Very concise O(log(min(M,N))) iterative solution with detailed explanation",
            "discussion_vote": "583",
            "discussion_views": "124.8K",
            "discussion_link": "https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2471/Very-concise-O(log(min(MN)))-iterative-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Share my simple O(log(m+n)) solution for your reference",
            "discussion_vote": "184",
            "discussion_views": "75.6K",
            "discussion_link": "https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2499/Share-my-simple-O(log(m%2Bn))-solution-for-your-reference"
        },
        {
            "discussion_title": "Concise JAVA solution based on Binary Search",
            "discussion_vote": "173",
            "discussion_views": "60.4K",
            "discussion_link": "https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2496/Concise-JAVA-solution-based-on-Binary-Search"
        },
        {
            "discussion_title": "Share my iterative solution with O(log(min(n, m)))",
            "discussion_vote": "121",
            "discussion_views": "31.1K",
            "discussion_link": "https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2547/Share-my-iterative-solution-with-O(log(min(n-m)))"
        }
    ],
    "5": [
        {
            "discussion_title": "Very simple clean java solution",
            "discussion_vote": "346",
            "discussion_views": "152.4K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-substring/discuss/2928/Very-simple-clean-java-solution"
        },
        {
            "discussion_title": "Simple C++ solution (8ms, 13 lines)",
            "discussion_vote": "209",
            "discussion_views": "77.0K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-substring/discuss/2923/Simple-C%2B%2B-solution-(8ms-13-lines)"
        },
        {
            "discussion_title": "Share my Java solution using dynamic programming",
            "discussion_vote": "175",
            "discussion_views": "54.8K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-substring/discuss/2921/Share-my-Java-solution-using-dynamic-programming"
        },
        {
            "discussion_title": "(AC) relatively short and very clear Java solution",
            "discussion_vote": "150",
            "discussion_views": "47.1K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-substring/discuss/3060/(AC)-relatively-short-and-very-clear-Java-solution"
        },
        {
            "discussion_title": "Python easy to understand solution with comments (from middle to two ends).",
            "discussion_vote": "124",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-substring/discuss/2954/Python-easy-to-understand-solution-with-comments-(from-middle-to-two-ends)."
        }
    ],
    "6": [
        {
            "discussion_title": "Easy to understand Java solution",
            "discussion_vote": "389",
            "discussion_views": "71.3K",
            "discussion_link": "https://leetcode.com/problems/zigzag-conversion/discuss/3403/Easy-to-understand-Java-solution"
        },
        {
            "discussion_title": "If you are confused with zigzag pattern,come and see!",
            "discussion_vote": "341",
            "discussion_views": "43.9K",
            "discussion_link": "https://leetcode.com/problems/zigzag-conversion/discuss/3435/If-you-are-confused-with-zigzag-patterncome-and-see!"
        },
        {
            "discussion_title": "Python O(n) Solution in 96ms (99.43%)",
            "discussion_vote": "125",
            "discussion_views": "17.5K",
            "discussion_link": "https://leetcode.com/problems/zigzag-conversion/discuss/3404/Python-O(n)-Solution-in-96ms-(99.43)"
        },
        {
            "discussion_title": "Share simple C++ solution",
            "discussion_vote": "120",
            "discussion_views": "24.1K",
            "discussion_link": "https://leetcode.com/problems/zigzag-conversion/discuss/3465/Share-simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "JAVA solution--easy and clear ( interesting approach )",
            "discussion_vote": "73",
            "discussion_views": "17.6K",
            "discussion_link": "https://leetcode.com/problems/zigzag-conversion/discuss/3453/JAVA-solution-easy-and-clear-(-interesting-approach-)"
        }
    ],
    "7": [
        {
            "discussion_title": "My accepted 15 lines of code for Java",
            "discussion_vote": "512",
            "discussion_views": "135.0K",
            "discussion_link": "https://leetcode.com/problems/reverse-integer/discuss/4060/My-accepted-15-lines-of-code-for-Java"
        },
        {
            "discussion_title": "Very Short (7 lines) and Elegant Solution",
            "discussion_vote": "109",
            "discussion_views": "61.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-integer/discuss/4056/Very-Short-(7-lines)-and-Elegant-Solution"
        },
        {
            "discussion_title": "Golfing in Python",
            "discussion_vote": "84",
            "discussion_views": "34.8K",
            "discussion_link": "https://leetcode.com/problems/reverse-integer/discuss/4055/Golfing-in-Python"
        },
        {
            "discussion_title": "Shortest code possible in c++",
            "discussion_vote": "76",
            "discussion_views": "40.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-integer/discuss/4057/Shortest-code-possible-in-c%2B%2B"
        },
        {
            "discussion_title": "8 ms simple C++ solution which checks overflow",
            "discussion_vote": "63",
            "discussion_views": "22.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-integer/discuss/4124/8-ms-simple-C%2B%2B-solution-which-checks-overflow"
        }
    ],
    "8": [
        {
            "discussion_title": "Such a shitty problem",
            "discussion_vote": "358",
            "discussion_views": "45.0K",
            "discussion_link": "https://leetcode.com/problems/string-to-integer-atoi/discuss/4640/Such-a-shitty-problem"
        },
        {
            "discussion_title": "My simple solution",
            "discussion_vote": "281",
            "discussion_views": "96.0K",
            "discussion_link": "https://leetcode.com/problems/string-to-integer-atoi/discuss/4654/My-simple-solution"
        },
        {
            "discussion_title": "Java Solution with 4 steps explanations",
            "discussion_vote": "178",
            "discussion_views": "44.6K",
            "discussion_link": "https://leetcode.com/problems/string-to-integer-atoi/discuss/4643/Java-Solution-with-4-steps-explanations"
        },
        {
            "discussion_title": "JAVA-------Easy  Version To Understand!!!!!!!!!!",
            "discussion_vote": "63",
            "discussion_views": "21.6K",
            "discussion_link": "https://leetcode.com/problems/string-to-integer-atoi/discuss/4672/JAVA-Easy-Version-To-Understand!!!!!!!!!!"
        },
        {
            "discussion_title": "8ms C++ solution, easy to understand",
            "discussion_vote": "60",
            "discussion_views": "26.1K",
            "discussion_link": "https://leetcode.com/problems/string-to-integer-atoi/discuss/4642/8ms-C%2B%2B-solution-easy-to-understand"
        }
    ],
    "10": [
        {
            "discussion_title": "Easy DP Java Solution with detailed Explanation",
            "discussion_vote": "377",
            "discussion_views": "95.0K",
            "discussion_link": "https://leetcode.com/problems/regular-expression-matching/discuss/5651/Easy-DP-Java-Solution-with-detailed-Explanation"
        },
        {
            "discussion_title": "My concise recursive and DP solutions with full explanation in C++",
            "discussion_vote": "284",
            "discussion_views": "89.3K",
            "discussion_link": "https://leetcode.com/problems/regular-expression-matching/discuss/5665/My-concise-recursive-and-DP-solutions-with-full-explanation-in-C%2B%2B"
        },
        {
            "discussion_title": "In the given examples, the last one isMatch(\"aab\", \"c*a*b\") \\u2192 true; don't understand why it is true?",
            "discussion_vote": "168",
            "discussion_views": "40.6K",
            "discussion_link": "https://leetcode.com/problems/regular-expression-matching/discuss/5647/In-the-given-examples-the-last-one-isMatch(%22aab%22-%22c*a*b%22)-u2192-true-don't-understand-why-it-is-true"
        },
        {
            "discussion_title": "9-lines 16ms C++ DP Solutions with Explanations",
            "discussion_vote": "126",
            "discussion_views": "30.9K",
            "discussion_link": "https://leetcode.com/problems/regular-expression-matching/discuss/5684/9-lines-16ms-C%2B%2B-DP-Solutions-with-Explanations"
        },
        {
            "discussion_title": "My DP approach in Python with comments and unittest",
            "discussion_vote": "102",
            "discussion_views": "12.4K",
            "discussion_link": "https://leetcode.com/problems/regular-expression-matching/discuss/5723/My-DP-approach-in-Python-with-comments-and-unittest"
        }
    ],
    "11": [
        {
            "discussion_title": "Yet another way to see what happens in the O(n) algorithm",
            "discussion_vote": "594",
            "discussion_views": "84.7K",
            "discussion_link": "https://leetcode.com/problems/container-with-most-water/discuss/6099/Yet-another-way-to-see-what-happens-in-the-O(n)-algorithm"
        },
        {
            "discussion_title": "Simple and fast C++/C with explanation",
            "discussion_vote": "324",
            "discussion_views": "40.0K",
            "discussion_link": "https://leetcode.com/problems/container-with-most-water/discuss/6090/Simple-and-fast-C%2B%2BC-with-explanation"
        },
        {
            "discussion_title": "Simple and clear proof/explanation",
            "discussion_vote": "210",
            "discussion_views": "19.2K",
            "discussion_link": "https://leetcode.com/problems/container-with-most-water/discuss/6100/Simple-and-clear-proofexplanation"
        },
        {
            "discussion_title": "Easy Concise Java O(N) Solution with Proof and Explanation",
            "discussion_vote": "195",
            "discussion_views": "33.4K",
            "discussion_link": "https://leetcode.com/problems/container-with-most-water/discuss/6091/Easy-Concise-Java-O(N)-Solution-with-Proof-and-Explanation"
        },
        {
            "discussion_title": "Very simple O(n) solution",
            "discussion_vote": "84",
            "discussion_views": "20.9K",
            "discussion_link": "https://leetcode.com/problems/container-with-most-water/discuss/6110/Very-simple-O(n)-solution"
        }
    ],
    "12": [
        {
            "discussion_title": "Simple Solution",
            "discussion_vote": "841",
            "discussion_views": "71.2K",
            "discussion_link": "https://leetcode.com/problems/integer-to-roman/discuss/6274/Simple-Solution"
        },
        {
            "discussion_title": "My java solution easy to understand",
            "discussion_vote": "235",
            "discussion_views": "34.4K",
            "discussion_link": "https://leetcode.com/problems/integer-to-roman/discuss/6310/My-java-solution-easy-to-understand"
        },
        {
            "discussion_title": "Two lines can do the job",
            "discussion_vote": "54",
            "discussion_views": "20.6K",
            "discussion_link": "https://leetcode.com/problems/integer-to-roman/discuss/6281/Two-lines-can-do-the-job"
        },
        {
            "discussion_title": "Share My Python Solution 96ms",
            "discussion_vote": "50",
            "discussion_views": "10.9K",
            "discussion_link": "https://leetcode.com/problems/integer-to-roman/discuss/6273/Share-My-Python-Solution-96ms"
        },
        {
            "discussion_title": "Simple JAVA solution",
            "discussion_vote": "33",
            "discussion_views": "10.9K",
            "discussion_link": "https://leetcode.com/problems/integer-to-roman/discuss/6376/Simple-JAVA-solution"
        }
    ],
    "13": [
        {
            "discussion_title": "My solution for this question but I don't know is there any easier way?",
            "discussion_vote": "170",
            "discussion_views": "94.6K",
            "discussion_link": "https://leetcode.com/problems/roman-to-integer/discuss/6529/My-solution-for-this-question-but-I-don't-know-is-there-any-easier-way"
        },
        {
            "discussion_title": "Clean O(n) c++ solution",
            "discussion_vote": "148",
            "discussion_views": "41.9K",
            "discussion_link": "https://leetcode.com/problems/roman-to-integer/discuss/6547/Clean-O(n)-c%2B%2B-solution"
        },
        {
            "discussion_title": "My Straightforward Python Solution",
            "discussion_vote": "118",
            "discussion_views": "25.5K",
            "discussion_link": "https://leetcode.com/problems/roman-to-integer/discuss/6537/My-Straightforward-Python-Solution"
        },
        {
            "discussion_title": "I strongly suggest leetcode explains the conversion rule clearer.",
            "discussion_vote": "103",
            "discussion_views": "17.7K",
            "discussion_link": "https://leetcode.com/problems/roman-to-integer/discuss/6524/I-strongly-suggest-leetcode-explains-the-conversion-rule-clearer."
        },
        {
            "discussion_title": "7ms solution in Java. easy to understand",
            "discussion_vote": "91",
            "discussion_views": "38.1K",
            "discussion_link": "https://leetcode.com/problems/roman-to-integer/discuss/6509/7ms-solution-in-Java.-easy-to-understand"
        }
    ],
    "14": [
        {
            "discussion_title": "Java code with 13 lines",
            "discussion_vote": "144",
            "discussion_views": "76.1K",
            "discussion_link": "https://leetcode.com/problems/longest-common-prefix/discuss/6910/Java-code-with-13-lines"
        },
        {
            "discussion_title": "What does Longest Common Prefix mean ?",
            "discussion_vote": "108",
            "discussion_views": "27.2K",
            "discussion_link": "https://leetcode.com/problems/longest-common-prefix/discuss/6916/What-does-Longest-Common-Prefix-mean"
        },
        {
            "discussion_title": "Sorted the array, Java solution, 2 ms",
            "discussion_vote": "99",
            "discussion_views": "38.1K",
            "discussion_link": "https://leetcode.com/problems/longest-common-prefix/discuss/6924/Sorted-the-array-Java-solution-2-ms"
        },
        {
            "discussion_title": "Simple Python solution",
            "discussion_vote": "79",
            "discussion_views": "23.8K",
            "discussion_link": "https://leetcode.com/problems/longest-common-prefix/discuss/6911/Simple-Python-solution"
        },
        {
            "discussion_title": "Short Python Solution",
            "discussion_vote": "69",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/longest-common-prefix/discuss/6918/Short-Python-Solution"
        }
    ],
    "15": [
        {
            "discussion_title": "Concise O(N^2) Java solution",
            "discussion_vote": "598",
            "discussion_views": "188.1K",
            "discussion_link": "https://leetcode.com/problems/3sum/discuss/7380/Concise-O(N2)-Java-solution"
        },
        {
            "discussion_title": "Share my AC C++ solution, around 50ms, O(N*N), with explanation and comments",
            "discussion_vote": "261",
            "discussion_views": "73.8K",
            "discussion_link": "https://leetcode.com/problems/3sum/discuss/7402/Share-my-AC-C%2B%2B-solution-around-50ms-O(N*N)-with-explanation-and-comments"
        },
        {
            "discussion_title": "Python easy to understand solution (O(n*n) time).",
            "discussion_vote": "156",
            "discussion_views": "63.4K",
            "discussion_link": "https://leetcode.com/problems/3sum/discuss/7392/Python-easy-to-understand-solution-(O(n*n)-time)."
        },
        {
            "discussion_title": "Easiest Java Solution",
            "discussion_vote": "140",
            "discussion_views": "70.9K",
            "discussion_link": "https://leetcode.com/problems/3sum/discuss/7399/Easiest-Java-Solution"
        },
        {
            "discussion_title": "Share my simple java solution",
            "discussion_vote": "55",
            "discussion_views": "30.1K",
            "discussion_link": "https://leetcode.com/problems/3sum/discuss/7373/Share-my-simple-java-solution"
        }
    ],
    "16": [
        {
            "discussion_title": "Java solution with O(n2) for reference",
            "discussion_vote": "134",
            "discussion_views": "37.1K",
            "discussion_link": "https://leetcode.com/problems/3sum-closest/discuss/7872/Java-solution-with-O(n2)-for-reference"
        },
        {
            "discussion_title": "A n^2 Solution, Can we do better ?",
            "discussion_vote": "94",
            "discussion_views": "47.5K",
            "discussion_link": "https://leetcode.com/problems/3sum-closest/discuss/7873/A-n2-Solution-Can-we-do-better"
        },
        {
            "discussion_title": "C++ solution O(n^2) using sort",
            "discussion_vote": "85",
            "discussion_views": "16.3K",
            "discussion_link": "https://leetcode.com/problems/3sum-closest/discuss/7883/C%2B%2B-solution-O(n2)-using-sort"
        },
        {
            "discussion_title": "Python O(N^2) solution",
            "discussion_vote": "51",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/3sum-closest/discuss/7871/Python-O(N2)-solution"
        },
        {
            "discussion_title": "12 lines concise and easy understand c++ solultion",
            "discussion_vote": "22",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/3sum-closest/discuss/7987/12-lines-concise-and-easy-understand-c%2B%2B-solultion"
        }
    ],
    "17": [
        {
            "discussion_title": "My java solution with FIFO queue",
            "discussion_vote": "556",
            "discussion_views": "106.9K",
            "discussion_link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/discuss/8064/My-java-solution-with-FIFO-queue"
        },
        {
            "discussion_title": "My iterative sollution, very simple under 15 lines",
            "discussion_vote": "110",
            "discussion_views": "56.6K",
            "discussion_link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/discuss/8097/My-iterative-sollution-very-simple-under-15-lines"
        },
        {
            "discussion_title": "My recursive solution using Java",
            "discussion_vote": "96",
            "discussion_views": "42.3K",
            "discussion_link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/discuss/8109/My-recursive-solution-using-Java"
        },
        {
            "discussion_title": "Iterative c++ solution in 0ms",
            "discussion_vote": "91",
            "discussion_views": "28.1K",
            "discussion_link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/discuss/8090/Iterative-c%2B%2B-solution-in-0ms"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "67",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/discuss/8063/Python-solution"
        }
    ],
    "18": [
        {
            "discussion_title": "7ms java code win over 100%",
            "discussion_vote": "171",
            "discussion_views": "72.7K",
            "discussion_link": "https://leetcode.com/problems/4sum/discuss/8547/7ms-java-code-win-over-100"
        },
        {
            "discussion_title": "Python 140ms beats 100%, and works for N-sum (N>=2)",
            "discussion_vote": "151",
            "discussion_views": "26.5K",
            "discussion_link": "https://leetcode.com/problems/4sum/discuss/8545/Python-140ms-beats-100-and-works-for-N-sum-(Ngreater2)"
        },
        {
            "discussion_title": "My 16ms c++ code",
            "discussion_vote": "122",
            "discussion_views": "33.2K",
            "discussion_link": "https://leetcode.com/problems/4sum/discuss/8549/My-16ms-c%2B%2B-code"
        },
        {
            "discussion_title": "Clean accepted java O(n^3) solution based on 3sum",
            "discussion_vote": "116",
            "discussion_views": "31.8K",
            "discussion_link": "https://leetcode.com/problems/4sum/discuss/8575/Clean-accepted-java-O(n3)-solution-based-on-3sum"
        },
        {
            "discussion_title": "My solution generalized for kSums in JAVA",
            "discussion_vote": "91",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/4sum/discuss/8609/My-solution-generalized-for-kSums-in-JAVA"
        }
    ],
    "19": [
        {
            "discussion_title": "Simple Java solution in one pass",
            "discussion_vote": "250",
            "discussion_views": "50.8K",
            "discussion_link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/discuss/8804/Simple-Java-solution-in-one-pass"
        },
        {
            "discussion_title": "My short C++ solution",
            "discussion_vote": "98",
            "discussion_views": "26.5K",
            "discussion_link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/discuss/8812/My-short-C%2B%2B-solution"
        },
        {
            "discussion_title": "3 short Python solutions",
            "discussion_vote": "85",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/discuss/8802/3-short-Python-solutions"
        },
        {
            "discussion_title": "My one pass solution",
            "discussion_vote": "46",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/discuss/8806/My-one-pass-solution"
        },
        {
            "discussion_title": "C++ solution, easy to understand with explanations.",
            "discussion_vote": "40",
            "discussion_views": "10.3K",
            "discussion_link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/discuss/8843/C%2B%2B-solution-easy-to-understand-with-explanations."
        }
    ],
    "20": [
        {
            "discussion_title": "Short java solution",
            "discussion_vote": "640",
            "discussion_views": "83.1K",
            "discussion_link": "https://leetcode.com/problems/valid-parentheses/discuss/9178/Short-java-solution"
        },
        {
            "discussion_title": "Simple Python solution with stack",
            "discussion_vote": "129",
            "discussion_views": "33.3K",
            "discussion_link": "https://leetcode.com/problems/valid-parentheses/discuss/9203/Simple-Python-solution-with-stack"
        },
        {
            "discussion_title": "My easy to understand Java Solution with one stack",
            "discussion_vote": "97",
            "discussion_views": "41.0K",
            "discussion_link": "https://leetcode.com/problems/valid-parentheses/discuss/9248/My-easy-to-understand-Java-Solution-with-one-stack"
        },
        {
            "discussion_title": "[Python] is this a cheating method? accepted with 40ms, easy to understand, but",
            "discussion_vote": "69",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/valid-parentheses/discuss/9225/Python-is-this-a-cheating-method-accepted-with-40ms-easy-to-understand-but"
        },
        {
            "discussion_title": "2ms C++ sloution",
            "discussion_vote": "68",
            "discussion_views": "28.6K",
            "discussion_link": "https://leetcode.com/problems/valid-parentheses/discuss/9252/2ms-C%2B%2B-sloution"
        }
    ],
    "22": [
        {
            "discussion_title": "Easy to understand Java backtracking solution",
            "discussion_vote": "426",
            "discussion_views": "80.6K",
            "discussion_link": "https://leetcode.com/problems/generate-parentheses/discuss/10100/Easy-to-understand-Java-backtracking-solution"
        },
        {
            "discussion_title": "Concise recursive C++ solution",
            "discussion_vote": "245",
            "discussion_views": "43.2K",
            "discussion_link": "https://leetcode.com/problems/generate-parentheses/discuss/10105/Concise-recursive-C%2B%2B-solution"
        },
        {
            "discussion_title": "An iterative method.",
            "discussion_vote": "190",
            "discussion_views": "30.7K",
            "discussion_link": "https://leetcode.com/problems/generate-parentheses/discuss/10127/An-iterative-method."
        },
        {
            "discussion_title": "4-7 lines Python",
            "discussion_vote": "117",
            "discussion_views": "26.2K",
            "discussion_link": "https://leetcode.com/problems/generate-parentheses/discuss/10096/4-7-lines-Python"
        },
        {
            "discussion_title": "Simple Python DFS solution with explanation",
            "discussion_vote": "64",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/generate-parentheses/discuss/10110/Simple-Python-DFS-solution-with-explanation"
        }
    ],
    "23": [
        {
            "discussion_title": "A java solution based on Priority Queue",
            "discussion_vote": "262",
            "discussion_views": "110.9K",
            "discussion_link": "https://leetcode.com/problems/merge-k-sorted-lists/discuss/10528/A-java-solution-based-on-Priority-Queue"
        },
        {
            "discussion_title": "My simple java Solution use recursion",
            "discussion_vote": "151",
            "discussion_views": "38.8K",
            "discussion_link": "https://leetcode.com/problems/merge-k-sorted-lists/discuss/10522/My-simple-java-Solution-use-recursion"
        },
        {
            "discussion_title": "Sharing my straightforward C++ solution without data structure other than vector",
            "discussion_vote": "135",
            "discussion_views": "40.4K",
            "discussion_link": "https://leetcode.com/problems/merge-k-sorted-lists/discuss/10531/Sharing-my-straightforward-C%2B%2B-solution-without-data-structure-other-than-vector"
        },
        {
            "discussion_title": "Difference between Priority-Queue and Heap, and C++ implementation",
            "discussion_vote": "89",
            "discussion_views": "23.1K",
            "discussion_link": "https://leetcode.com/problems/merge-k-sorted-lists/discuss/10527/Difference-between-Priority-Queue-and-Heap-and-C%2B%2B-implementation"
        },
        {
            "discussion_title": "10-line python solution with priority queue",
            "discussion_vote": "77",
            "discussion_views": "20.7K",
            "discussion_link": "https://leetcode.com/problems/merge-k-sorted-lists/discuss/10511/10-line-python-solution-with-priority-queue"
        }
    ],
    "24": [
        {
            "discussion_title": "My accepted java code. used recursion.",
            "discussion_vote": "206",
            "discussion_views": "37.6K",
            "discussion_link": "https://leetcode.com/problems/swap-nodes-in-pairs/discuss/11030/My-accepted-java-code.-used-recursion."
        },
        {
            "discussion_title": "My simple JAVA solution for share",
            "discussion_vote": "161",
            "discussion_views": "32.4K",
            "discussion_link": "https://leetcode.com/problems/swap-nodes-in-pairs/discuss/11046/My-simple-JAVA-solution-for-share"
        },
        {
            "discussion_title": "7-8 lines C++ / Python / Ruby",
            "discussion_vote": "128",
            "discussion_views": "27.7K",
            "discussion_link": "https://leetcode.com/problems/swap-nodes-in-pairs/discuss/11019/7-8-lines-C%2B%2B-Python-Ruby"
        },
        {
            "discussion_title": "Java simple recursive solution",
            "discussion_vote": "32",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/swap-nodes-in-pairs/discuss/11111/Java-simple-recursive-solution"
        },
        {
            "discussion_title": "Simple implementation with C++",
            "discussion_vote": "27",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/swap-nodes-in-pairs/discuss/11271/Simple-implementation-with-C%2B%2B"
        }
    ],
    "25": [
        {
            "discussion_title": "Short but recursive Java code with comments",
            "discussion_vote": "220",
            "discussion_views": "44.0K",
            "discussion_link": "https://leetcode.com/problems/reverse-nodes-in-k-group/discuss/11423/Short-but-recursive-Java-code-with-comments"
        },
        {
            "discussion_title": "Share my Java Solution with comments in line",
            "discussion_vote": "79",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/reverse-nodes-in-k-group/discuss/11413/Share-my-Java-Solution-with-comments-in-line"
        },
        {
            "discussion_title": "Non-recursive Java solution and idea",
            "discussion_vote": "60",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/reverse-nodes-in-k-group/discuss/11440/Non-recursive-Java-solution-and-idea"
        },
        {
            "discussion_title": "20-line iterative C++ solution",
            "discussion_vote": "57",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-nodes-in-k-group/discuss/11457/20-line-iterative-C%2B%2B-solution"
        },
        {
            "discussion_title": "Succinct iterative Python, O(n) time O(1) space",
            "discussion_vote": "45",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/reverse-nodes-in-k-group/discuss/11491/Succinct-iterative-Python-O(n)-time-O(1)-space"
        }
    ],
    "26": [
        {
            "discussion_title": "My Solution : Time O(n), Space O(1)",
            "discussion_vote": "190",
            "discussion_views": "75.8K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/discuss/11757/My-Solution-%3A-Time-O(n)-Space-O(1)"
        },
        {
            "discussion_title": "Share my clean C++ code",
            "discussion_vote": "161",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/discuss/11782/Share-my-clean-C%2B%2B-code"
        },
        {
            "discussion_title": "5 lines C++/Java, nicer loops",
            "discussion_vote": "104",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/discuss/11780/5-lines-C%2B%2BJava-nicer-loops"
        },
        {
            "discussion_title": "Simple Python solution - O(n)",
            "discussion_vote": "40",
            "discussion_views": "26.2K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/discuss/11751/Simple-Python-solution-O(n)"
        },
        {
            "discussion_title": "5 lines Java solution",
            "discussion_vote": "35",
            "discussion_views": "21.9K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/discuss/11769/5-lines-Java-solution"
        }
    ],
    "28": [
        {
            "discussion_title": "Elegant Java solution",
            "discussion_vote": "253",
            "discussion_views": "82.6K",
            "discussion_link": "https://leetcode.com/problems/implement-strstr/discuss/12807/Elegant-Java-solution"
        },
        {
            "discussion_title": "Share my accepted java solution",
            "discussion_vote": "89",
            "discussion_views": "33.1K",
            "discussion_link": "https://leetcode.com/problems/implement-strstr/discuss/12811/Share-my-accepted-java-solution"
        },
        {
            "discussion_title": "C++ Brute-Force and KMP",
            "discussion_vote": "81",
            "discussion_views": "35.4K",
            "discussion_link": "https://leetcode.com/problems/implement-strstr/discuss/12956/C%2B%2B-Brute-Force-and-KMP"
        },
        {
            "discussion_title": "My answer by Python",
            "discussion_vote": "74",
            "discussion_views": "17.5K",
            "discussion_link": "https://leetcode.com/problems/implement-strstr/discuss/12814/My-answer-by-Python"
        },
        {
            "discussion_title": "A very clean solution, brute-force",
            "discussion_vote": "65",
            "discussion_views": "29.0K",
            "discussion_link": "https://leetcode.com/problems/implement-strstr/discuss/12931/A-very-clean-solution-brute-force"
        }
    ],
    "29": [
        {
            "discussion_title": "Detailed Explained 8ms C++ solution",
            "discussion_vote": "448",
            "discussion_views": "81.6K",
            "discussion_link": "https://leetcode.com/problems/divide-two-integers/discuss/13407/Detailed-Explained-8ms-C%2B%2B-solution"
        },
        {
            "discussion_title": "Clean Java solution with some comment.",
            "discussion_vote": "104",
            "discussion_views": "58.4K",
            "discussion_link": "https://leetcode.com/problems/divide-two-integers/discuss/13397/Clean-Java-solution-with-some-comment."
        },
        {
            "discussion_title": "Clear python code",
            "discussion_vote": "79",
            "discussion_views": "24.0K",
            "discussion_link": "https://leetcode.com/problems/divide-two-integers/discuss/13403/Clear-python-code"
        },
        {
            "discussion_title": "Simple O((log N) ^ 2) C++ solution",
            "discussion_vote": "54",
            "discussion_views": "23.6K",
            "discussion_link": "https://leetcode.com/problems/divide-two-integers/discuss/13426/Simple-O((log-N)-2)-C%2B%2B-solution"
        },
        {
            "discussion_title": "No Use of Long Java Solution",
            "discussion_vote": "49",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/divide-two-integers/discuss/13417/No-Use-of-Long-Java-Solution"
        }
    ],
    "30": [
        {
            "discussion_title": "Easy Two-Map Solution (C++/Java)",
            "discussion_vote": "126",
            "discussion_views": "27.9K",
            "discussion_link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/discuss/13658/Easy-Two-Map-Solution-(C%2B%2BJava)"
        },
        {
            "discussion_title": "An O(N) solution with detailed explanation",
            "discussion_vote": "121",
            "discussion_views": "67.8K",
            "discussion_link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/discuss/13656/An-O(N)-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Accepted Java solution 12ms with explanation",
            "discussion_vote": "77",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/discuss/13673/Accepted-Java-solution-12ms-with-explanation"
        },
        {
            "discussion_title": "Simple Java Solution with Two Pointers and Map",
            "discussion_vote": "60",
            "discussion_views": "20.1K",
            "discussion_link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/discuss/13664/Simple-Java-Solution-with-Two-Pointers-and-Map"
        },
        {
            "discussion_title": "Why does the second example have words with different length?",
            "discussion_vote": "59",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/discuss/136825/Why-does-the-second-example-have-words-with-different-length"
        }
    ],
    "31": [
        {
            "discussion_title": "Share my O(n) time solution",
            "discussion_vote": "185",
            "discussion_views": "63.2K",
            "discussion_link": "https://leetcode.com/problems/next-permutation/discuss/13866/Share-my-O(n)-time-solution"
        },
        {
            "discussion_title": "C++ from Wikipedia",
            "discussion_vote": "177",
            "discussion_views": "23.1K",
            "discussion_link": "https://leetcode.com/problems/next-permutation/discuss/13867/C%2B%2B-from-Wikipedia"
        },
        {
            "discussion_title": "Sharing my clean and easy-understand java code with explanation",
            "discussion_vote": "157",
            "discussion_views": "20.3K",
            "discussion_link": "https://leetcode.com/problems/next-permutation/discuss/13865/Sharing-my-clean-and-easy-understand-java-code-with-explanation"
        },
        {
            "discussion_title": "Easiest JAVA Solution",
            "discussion_vote": "71",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/next-permutation/discuss/13872/Easiest-JAVA-Solution"
        },
        {
            "discussion_title": "1, 4, 11 lines C++",
            "discussion_vote": "70",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/next-permutation/discuss/13921/1-4-11-lines-C%2B%2B"
        }
    ],
    "32": [
        {
            "discussion_title": "My O(n) solution using a stack",
            "discussion_vote": "378",
            "discussion_views": "53.5K",
            "discussion_link": "https://leetcode.com/problems/longest-valid-parentheses/discuss/14126/My-O(n)-solution-using-a-stack"
        },
        {
            "discussion_title": "My DP, O(n) solution without using stack",
            "discussion_vote": "256",
            "discussion_views": "39.9K",
            "discussion_link": "https://leetcode.com/problems/longest-valid-parentheses/discuss/14133/My-DP-O(n)-solution-without-using-stack"
        },
        {
            "discussion_title": "Simple JAVA solution, O(n) time, one stack",
            "discussion_vote": "124",
            "discussion_views": "20.2K",
            "discussion_link": "https://leetcode.com/problems/longest-valid-parentheses/discuss/14167/Simple-JAVA-solution-O(n)-time-one-stack"
        },
        {
            "discussion_title": "My simple 8ms C++ code",
            "discussion_vote": "87",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/longest-valid-parentheses/discuss/14147/My-simple-8ms-C%2B%2B-code"
        },
        {
            "discussion_title": "My solution using one stack in one pass",
            "discussion_vote": "45",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/longest-valid-parentheses/discuss/14355/My-solution-using-one-stack-in-one-pass"
        }
    ],
    "33": [
        {
            "discussion_title": "Concise O(log N) Binary search solution",
            "discussion_vote": "397",
            "discussion_views": "116.1K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array/discuss/14425/Concise-O(log-N)-Binary-search-solution"
        },
        {
            "discussion_title": "Clever idea making it simple",
            "discussion_vote": "273",
            "discussion_views": "40.8K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array/discuss/14435/Clever-idea-making-it-simple"
        },
        {
            "discussion_title": "Revised Binary Search",
            "discussion_vote": "253",
            "discussion_views": "49.7K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array/discuss/14436/Revised-Binary-Search"
        },
        {
            "discussion_title": "Java AC Solution using once binary search",
            "discussion_vote": "134",
            "discussion_views": "28.8K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array/discuss/14472/Java-AC-Solution-using-once-binary-search"
        },
        {
            "discussion_title": "Python binary search solution - O(logn) - 48ms",
            "discussion_vote": "81",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array/discuss/14437/Python-binary-search-solution-O(logn)-48ms"
        }
    ],
    "34": [
        {
            "discussion_title": "Clean iterative solution with two binary searches (with explanation)",
            "discussion_vote": "394",
            "discussion_views": "66.6K",
            "discussion_link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/14699/Clean-iterative-solution-with-two-binary-searches-(with-explanation)"
        },
        {
            "discussion_title": "A very simple Java solution, with only one binary search algorithm",
            "discussion_vote": "182",
            "discussion_views": "36.1K",
            "discussion_link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/14701/A-very-simple-Java-solution-with-only-one-binary-search-algorithm"
        },
        {
            "discussion_title": "9-11 lines O(log n)",
            "discussion_vote": "82",
            "discussion_views": "22.8K",
            "discussion_link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/14707/9-11-lines-O(log-n)"
        },
        {
            "discussion_title": "Easy java O(logn) solution",
            "discussion_vote": "62",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/14734/Easy-java-O(logn)-solution"
        },
        {
            "discussion_title": "Simple and strict O(logn) solution in Java using recursion",
            "discussion_vote": "50",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/14999/Simple-and-strict-O(logn)-solution-in-Java-using-recursion"
        }
    ],
    "36": [
        {
            "discussion_title": "Short+Simple Java using Strings",
            "discussion_vote": "338",
            "discussion_views": "26.0K",
            "discussion_link": "https://leetcode.com/problems/valid-sudoku/discuss/15472/Short%2BSimple-Java-using-Strings"
        },
        {
            "discussion_title": "Shared my concise Java code",
            "discussion_vote": "305",
            "discussion_views": "49.4K",
            "discussion_link": "https://leetcode.com/problems/valid-sudoku/discuss/15450/Shared-my-concise-Java-code"
        },
        {
            "discussion_title": "My short solution by C++. O(n2)",
            "discussion_vote": "292",
            "discussion_views": "44.9K",
            "discussion_link": "https://leetcode.com/problems/valid-sudoku/discuss/15464/My-short-solution-by-C%2B%2B.-O(n2)"
        },
        {
            "discussion_title": "Sharing my easy-understand java solution using set",
            "discussion_vote": "100",
            "discussion_views": "20.5K",
            "discussion_link": "https://leetcode.com/problems/valid-sudoku/discuss/15634/Sharing-my-easy-understand-java-solution-using-set"
        },
        {
            "discussion_title": "A readable Python solution",
            "discussion_vote": "97",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/valid-sudoku/discuss/15451/A-readable-Python-solution"
        }
    ],
    "38": [
        {
            "discussion_title": "Please change the misleading description",
            "discussion_vote": "620",
            "discussion_views": "74.1K",
            "discussion_link": "https://leetcode.com/problems/count-and-say/discuss/16015/Please-change-the-misleading-description"
        },
        {
            "discussion_title": "Examples of nth sequence",
            "discussion_vote": "202",
            "discussion_views": "45.2K",
            "discussion_link": "https://leetcode.com/problems/count-and-say/discuss/15995/Examples-of-nth-sequence"
        },
        {
            "discussion_title": "Show an Answer in Java",
            "discussion_vote": "72",
            "discussion_views": "52.6K",
            "discussion_link": "https://leetcode.com/problems/count-and-say/discuss/16000/Show-an-Answer-in-Java"
        },
        {
            "discussion_title": "4-5 lines Python solutions",
            "discussion_vote": "68",
            "discussion_views": "19.8K",
            "discussion_link": "https://leetcode.com/problems/count-and-say/discuss/15999/4-5-lines-Python-solutions"
        },
        {
            "discussion_title": "C++ solution easy-understand",
            "discussion_vote": "58",
            "discussion_views": "24.6K",
            "discussion_link": "https://leetcode.com/problems/count-and-say/discuss/16043/C%2B%2B-solution-easy-understand"
        }
    ],
    "39": [
        {
            "discussion_title": "A general approach to backtracking questions in Java (Subsets, Permutations, Combination Sum, Palindrome Partitioning)",
            "discussion_vote": "695",
            "discussion_views": "87.6K",
            "discussion_link": "https://leetcode.com/problems/combination-sum/discuss/16502/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partitioning)"
        },
        {
            "discussion_title": "Accepted 16ms c++ solution use backtracking, easy understand.",
            "discussion_vote": "167",
            "discussion_views": "46.0K",
            "discussion_link": "https://leetcode.com/problems/combination-sum/discuss/16496/Accepted-16ms-c%2B%2B-solution-use-backtracking-easy-understand."
        },
        {
            "discussion_title": "Python dfs solution.",
            "discussion_vote": "95",
            "discussion_views": "21.3K",
            "discussion_link": "https://leetcode.com/problems/combination-sum/discuss/16510/Python-dfs-solution."
        },
        {
            "discussion_title": "Java solution using recursive",
            "discussion_vote": "73",
            "discussion_views": "31.0K",
            "discussion_link": "https://leetcode.com/problems/combination-sum/discuss/16521/Java-solution-using-recursive"
        },
        {
            "discussion_title": "Iterative Java DP solution",
            "discussion_vote": "67",
            "discussion_views": "21.8K",
            "discussion_link": "https://leetcode.com/problems/combination-sum/discuss/16509/Iterative-Java-DP-solution"
        }
    ],
    "40": [
        {
            "discussion_title": "Java solution using dfs, easy understand",
            "discussion_vote": "82",
            "discussion_views": "33.5K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-ii/discuss/16861/Java-solution-using-dfs-easy-understand"
        },
        {
            "discussion_title": "Combination Sum I, II and III Java solution (see the similarities yourself)",
            "discussion_vote": "61",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-ii/discuss/16878/Combination-Sum-I-II-and-III-Java-solution-(see-the-similarities-yourself)"
        },
        {
            "discussion_title": "C++ backtracking solution with detailed explanation",
            "discussion_vote": "34",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-ii/discuss/16862/C%2B%2B-backtracking-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Beating 98%  Python solution using recursion with comments",
            "discussion_vote": "27",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-ii/discuss/16944/Beating-98-Python-solution-using-recursion-with-comments"
        },
        {
            "discussion_title": "DP solution in Python",
            "discussion_vote": "18",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-ii/discuss/16870/DP-solution-in-Python"
        }
    ],
    "41": [
        {
            "discussion_title": "My short c++ solution, O(1) space, and O(n) time",
            "discussion_vote": "536",
            "discussion_views": "71.7K",
            "discussion_link": "https://leetcode.com/problems/first-missing-positive/discuss/17071/My-short-c%2B%2B-solution-O(1)-space-and-O(n)-time"
        },
        {
            "discussion_title": "Share my O(n) time, O(1) space solution",
            "discussion_vote": "146",
            "discussion_views": "44.7K",
            "discussion_link": "https://leetcode.com/problems/first-missing-positive/discuss/17073/Share-my-O(n)-time-O(1)-space-solution"
        },
        {
            "discussion_title": "O(1) space Java Solution",
            "discussion_vote": "108",
            "discussion_views": "35.5K",
            "discussion_link": "https://leetcode.com/problems/first-missing-positive/discuss/17083/O(1)-space-Java-Solution"
        },
        {
            "discussion_title": "Python O(1) space,  O(n) time solution with explanation",
            "discussion_vote": "55",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/first-missing-positive/discuss/17080/Python-O(1)-space-O(n)-time-solution-with-explanation"
        },
        {
            "discussion_title": "A very nice solution (from Ants Aasma @stackoverflow)",
            "discussion_vote": "35",
            "discussion_views": "21.6K",
            "discussion_link": "https://leetcode.com/problems/first-missing-positive/discuss/17168/A-very-nice-solution-(from-Ants-Aasma-%40stackoverflow)"
        }
    ],
    "42": [
        {
            "discussion_title": "Sharing my simple c++ code: O(n) time, O(1) space",
            "discussion_vote": "482",
            "discussion_views": "62.4K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water/discuss/17357/Sharing-my-simple-c%2B%2B-code%3A-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Share my short solution.",
            "discussion_vote": "294",
            "discussion_views": "36.2K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water/discuss/17391/Share-my-short-solution."
        },
        {
            "discussion_title": "7 lines C / C++",
            "discussion_vote": "138",
            "discussion_views": "21.8K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water/discuss/17364/7-lines-C-C%2B%2B"
        },
        {
            "discussion_title": "A stack based solution for reference, inspired by Histogram",
            "discussion_vote": "112",
            "discussion_views": "19.3K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water/discuss/17414/A-stack-based-solution-for-reference-inspired-by-Histogram"
        },
        {
            "discussion_title": "Sharing my Java code: O(n) time, O(1) space",
            "discussion_vote": "84",
            "discussion_views": "20.1K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water/discuss/17386/Sharing-my-Java-code%3A-O(n)-time-O(1)-space"
        }
    ],
    "43": [
        {
            "discussion_title": "Easiest JAVA Solution with Graph Explanation",
            "discussion_vote": "1.1K",
            "discussion_views": "85.8K",
            "discussion_link": "https://leetcode.com/problems/multiply-strings/discuss/17605/Easiest-JAVA-Solution-with-Graph-Explanation"
        },
        {
            "discussion_title": "Brief C++ solution using only strings and without reversal",
            "discussion_vote": "213",
            "discussion_views": "26.6K",
            "discussion_link": "https://leetcode.com/problems/multiply-strings/discuss/17646/Brief-C%2B%2B-solution-using-only-strings-and-without-reversal"
        },
        {
            "discussion_title": "AC solution in Java with explanation",
            "discussion_vote": "109",
            "discussion_views": "20.7K",
            "discussion_link": "https://leetcode.com/problems/multiply-strings/discuss/17608/AC-solution-in-Java-with-explanation"
        },
        {
            "discussion_title": "One Easy solution with C++",
            "discussion_vote": "34",
            "discussion_views": "13.8K",
            "discussion_link": "https://leetcode.com/problems/multiply-strings/discuss/17769/One-Easy-solution-with-C%2B%2B"
        },
        {
            "discussion_title": "Clear JAVA solution without reversal",
            "discussion_vote": "26",
            "discussion_views": "8.7K",
            "discussion_link": "https://leetcode.com/problems/multiply-strings/discuss/17759/Clear-JAVA-solution-without-reversal"
        }
    ],
    "44": [
        {
            "discussion_title": "Linear runtime and constant space solution",
            "discussion_vote": "295",
            "discussion_views": "81.2K",
            "discussion_link": "https://leetcode.com/problems/wildcard-matching/discuss/17810/Linear-runtime-and-constant-space-solution"
        },
        {
            "discussion_title": "My java DP solution using 2D table",
            "discussion_vote": "70",
            "discussion_views": "34.2K",
            "discussion_link": "https://leetcode.com/problems/wildcard-matching/discuss/17812/My-java-DP-solution-using-2D-table"
        },
        {
            "discussion_title": "Accepted C++ DP Solution with a Trick",
            "discussion_vote": "54",
            "discussion_views": "21.9K",
            "discussion_link": "https://leetcode.com/problems/wildcard-matching/discuss/17833/Accepted-C%2B%2B-DP-Solution-with-a-Trick"
        },
        {
            "discussion_title": "Python DP solution",
            "discussion_vote": "35",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/wildcard-matching/discuss/17845/Python-DP-solution"
        },
        {
            "discussion_title": "My three C++ solutions (iterative (16ms) & DP (180ms) & modified recursion (88ms))",
            "discussion_vote": "33",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/wildcard-matching/discuss/17811/My-three-C%2B%2B-solutions-(iterative-(16ms)-and-DP-(180ms)-and-modified-recursion-(88ms))"
        }
    ],
    "45": [
        {
            "discussion_title": "O(n), BFS solution",
            "discussion_vote": "193",
            "discussion_views": "45.2K",
            "discussion_link": "https://leetcode.com/problems/jump-game-ii/discuss/18028/O(n)-BFS-solution"
        },
        {
            "discussion_title": "Concise O(n) one loop JAVA solution based on Greedy",
            "discussion_vote": "125",
            "discussion_views": "17.7K",
            "discussion_link": "https://leetcode.com/problems/jump-game-ii/discuss/18014/Concise-O(n)-one-loop-JAVA-solution-based-on-Greedy"
        },
        {
            "discussion_title": "Single loop simple java solution",
            "discussion_vote": "123",
            "discussion_views": "32.4K",
            "discussion_link": "https://leetcode.com/problems/jump-game-ii/discuss/18023/Single-loop-simple-java-solution"
        },
        {
            "discussion_title": "10-lines C++ (16ms) / Python BFS Solutions with Explanations",
            "discussion_vote": "60",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/jump-game-ii/discuss/18019/10-lines-C%2B%2B-(16ms)-Python-BFS-Solutions-with-Explanations"
        },
        {
            "discussion_title": "Sharing My AC Java Solution",
            "discussion_vote": "39",
            "discussion_views": "11.6K",
            "discussion_link": "https://leetcode.com/problems/jump-game-ii/discuss/18093/Sharing-My-AC-Java-Solution"
        }
    ],
    "46": [
        {
            "discussion_title": "A general approach to backtracking questions in Java (Subsets, Permutations, Combination Sum, Palindrome Partioning)",
            "discussion_vote": "963",
            "discussion_views": "127.2K",
            "discussion_link": "https://leetcode.com/problems/permutations/discuss/18239/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partioning)"
        },
        {
            "discussion_title": "My elegant recursive C++ solution with inline explanation",
            "discussion_vote": "242",
            "discussion_views": "50.5K",
            "discussion_link": "https://leetcode.com/problems/permutations/discuss/18247/My-elegant-recursive-C%2B%2B-solution-with-inline-explanation"
        },
        {
            "discussion_title": "My AC simple iterative java/python solution",
            "discussion_vote": "195",
            "discussion_views": "40.7K",
            "discussion_link": "https://leetcode.com/problems/permutations/discuss/18237/My-AC-simple-iterative-javapython-solution"
        },
        {
            "discussion_title": "One-Liners in Python",
            "discussion_vote": "84",
            "discussion_views": "17.4K",
            "discussion_link": "https://leetcode.com/problems/permutations/discuss/18241/One-Liners-in-Python"
        },
        {
            "discussion_title": "Simple Python solution (DFS).",
            "discussion_vote": "77",
            "discussion_views": "12.4K",
            "discussion_link": "https://leetcode.com/problems/permutations/discuss/18296/Simple-Python-solution-(DFS)."
        }
    ],
    "47": [
        {
            "discussion_title": "Really easy Java solution, much easier than the solutions with very high vote",
            "discussion_vote": "194",
            "discussion_views": "57.8K",
            "discussion_link": "https://leetcode.com/problems/permutations-ii/discuss/18594/Really-easy-Java-solution-much-easier-than-the-solutions-with-very-high-vote"
        },
        {
            "discussion_title": "A simple C++ solution in only 20 lines",
            "discussion_vote": "147",
            "discussion_views": "50.9K",
            "discussion_link": "https://leetcode.com/problems/permutations-ii/discuss/18596/A-simple-C%2B%2B-solution-in-only-20-lines"
        },
        {
            "discussion_title": "Share my Java code with detailed explanantion",
            "discussion_vote": "67",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/permutations-ii/discuss/18648/Share-my-Java-code-with-detailed-explanantion"
        },
        {
            "discussion_title": "9-line python solution with 1 line to handle duplication, beat 99% of others :-)",
            "discussion_vote": "65",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/permutations-ii/discuss/18602/9-line-python-solution-with-1-line-to-handle-duplication-beat-99-of-others-%3A-)"
        },
        {
            "discussion_title": "A non-recursive C++ implementation with O(1) space cost",
            "discussion_vote": "48",
            "discussion_views": "15.9K",
            "discussion_link": "https://leetcode.com/problems/permutations-ii/discuss/18604/A-non-recursive-C%2B%2B-implementation-with-O(1)-space-cost"
        }
    ],
    "48": [
        {
            "discussion_title": "A common method to rotate the image",
            "discussion_vote": "844",
            "discussion_views": "79.8K",
            "discussion_link": "https://leetcode.com/problems/rotate-image/discuss/18872/A-common-method-to-rotate-the-image"
        },
        {
            "discussion_title": "AC Java in place solution with explanation Easy to understand.",
            "discussion_vote": "214",
            "discussion_views": "41.1K",
            "discussion_link": "https://leetcode.com/problems/rotate-image/discuss/18879/AC-Java-in-place-solution-with-explanation-Easy-to-understand."
        },
        {
            "discussion_title": "Seven Short Solutions (1 to 7 lines)",
            "discussion_vote": "178",
            "discussion_views": "25.2K",
            "discussion_link": "https://leetcode.com/problems/rotate-image/discuss/18884/Seven-Short-Solutions-(1-to-7-lines)"
        },
        {
            "discussion_title": "4ms few lines C++ code Rotate Image 90 degree for O(1) space",
            "discussion_vote": "56",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/rotate-image/discuss/19002/4ms-few-lines-C%2B%2B-code-Rotate-Image-90-degree-for-O(1)-space"
        },
        {
            "discussion_title": "Clear Java solution",
            "discussion_vote": "52",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/rotate-image/discuss/18895/Clear-Java-solution"
        }
    ],
    "49": [
        {
            "discussion_title": "Share my short JAVA solution",
            "discussion_vote": "255",
            "discussion_views": "76.0K",
            "discussion_link": "https://leetcode.com/problems/group-anagrams/discuss/19176/Share-my-short-JAVA-solution"
        },
        {
            "discussion_title": "Java beat 100%!!! use prime number",
            "discussion_vote": "160",
            "discussion_views": "34.6K",
            "discussion_link": "https://leetcode.com/problems/group-anagrams/discuss/19183/Java-beat-100!!!-use-prime-number"
        },
        {
            "discussion_title": "10-lines 76ms Easy C++ Solution (Updated Function Signature)",
            "discussion_vote": "99",
            "discussion_views": "26.7K",
            "discussion_link": "https://leetcode.com/problems/group-anagrams/discuss/19200/10-lines-76ms-Easy-C%2B%2B-Solution-(Updated-Function-Signature)"
        },
        {
            "discussion_title": "What does it mean \"return all groups\"? But the return result is vector<string>? How can we return all groups?",
            "discussion_vote": "91",
            "discussion_views": "19.9K",
            "discussion_link": "https://leetcode.com/problems/group-anagrams/discuss/19484/What-does-it-mean-%22return-all-groups%22-But-the-return-result-is-vectorlessstringgreater-How-can-we-return-all-groups"
        },
        {
            "discussion_title": "O(M * N) algorithm using hash, without sort()",
            "discussion_vote": "47",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/group-anagrams/discuss/19233/O(M-*-N)-algorithm-using-hash-without-sort()"
        }
    ],
    "50": [
        {
            "discussion_title": "Short and easy to understand solution",
            "discussion_vote": "235",
            "discussion_views": "104.0K",
            "discussion_link": "https://leetcode.com/problems/powx-n/discuss/19546/Short-and-easy-to-understand-solution"
        },
        {
            "discussion_title": "5 different choices when talk with interviewers",
            "discussion_vote": "209",
            "discussion_views": "50.9K",
            "discussion_link": "https://leetcode.com/problems/powx-n/discuss/19544/5-different-choices-when-talk-with-interviewers"
        },
        {
            "discussion_title": "Iterative Log(N) solution with Clear Explanation",
            "discussion_vote": "140",
            "discussion_views": "22.1K",
            "discussion_link": "https://leetcode.com/problems/powx-n/discuss/19563/Iterative-Log(N)-solution-with-Clear-Explanation"
        },
        {
            "discussion_title": "Shortest Python - Guaranteed",
            "discussion_vote": "90",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/powx-n/discuss/19560/Shortest-Python-Guaranteed"
        },
        {
            "discussion_title": "O (logn) solution in Java",
            "discussion_vote": "52",
            "discussion_views": "28.2K",
            "discussion_link": "https://leetcode.com/problems/powx-n/discuss/19593/O-(logn)-solution-in-Java"
        }
    ],
    "51": [
        {
            "discussion_title": "Accepted 4ms c++ solution use backtracking and bitmask, easy understand.",
            "discussion_vote": "152",
            "discussion_views": "35.5K",
            "discussion_link": "https://leetcode.com/problems/n-queens/discuss/19808/Accepted-4ms-c%2B%2B-solution-use-backtracking-and-bitmask-easy-understand."
        },
        {
            "discussion_title": "My easy understanding Java Solution",
            "discussion_vote": "81",
            "discussion_views": "24.3K",
            "discussion_link": "https://leetcode.com/problems/n-queens/discuss/19805/My-easy-understanding-Java-Solution"
        },
        {
            "discussion_title": "Fast, short, and easy-to-understand python solution, 11 lines, 76ms",
            "discussion_vote": "75",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/n-queens/discuss/19810/Fast-short-and-easy-to-understand-python-solution-11-lines-76ms"
        },
        {
            "discussion_title": "The description should give a clear explanation of the problem of \"n-queens\"",
            "discussion_vote": "50",
            "discussion_views": "11.8K",
            "discussion_link": "https://leetcode.com/problems/n-queens/discuss/19812/The-description-should-give-a-clear-explanation-of-the-problem-of-%22n-queens%22"
        },
        {
            "discussion_title": "Comparably concise Java code",
            "discussion_vote": "36",
            "discussion_views": "15.5K",
            "discussion_link": "https://leetcode.com/problems/n-queens/discuss/19828/Comparably-concise-Java-code"
        }
    ],
    "52": [
        {
            "discussion_title": "Accepted Java Solution",
            "discussion_vote": "114",
            "discussion_views": "18.8K",
            "discussion_link": "https://leetcode.com/problems/n-queens-ii/discuss/20058/Accepted-Java-Solution"
        },
        {
            "discussion_title": "Easiest Java Solution (1ms, 98.22%)",
            "discussion_vote": "55",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/n-queens-ii/discuss/20048/Easiest-Java-Solution-(1ms-98.22)"
        },
        {
            "discussion_title": "Share my Java code (beats 97.83% run times)",
            "discussion_vote": "16",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/n-queens-ii/discuss/20046/Share-my-Java-code-(beats-97.83-run-times)"
        },
        {
            "discussion_title": "C++ solution - DFS - easy understanding",
            "discussion_vote": "15",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/n-queens-ii/discuss/20077/C%2B%2B-solution-DFS-easy-understanding"
        },
        {
            "discussion_title": "Python recursive dfs solution.",
            "discussion_vote": "10",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/n-queens-ii/discuss/20147/Python-recursive-dfs-solution."
        }
    ],
    "53": [
        {
            "discussion_title": "DP solution & some thoughts",
            "discussion_vote": "636",
            "discussion_views": "117.2K",
            "discussion_link": "https://leetcode.com/problems/maximum-subarray/discuss/20193/DP-solution-and-some-thoughts"
        },
        {
            "discussion_title": "Accepted O(n) solution in java",
            "discussion_vote": "425",
            "discussion_views": "78.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-subarray/discuss/20211/Accepted-O(n)-solution-in-java"
        },
        {
            "discussion_title": "A Python solution",
            "discussion_vote": "121",
            "discussion_views": "25.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-subarray/discuss/20194/A-Python-solution"
        },
        {
            "discussion_title": "Easy Python Way",
            "discussion_vote": "115",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-subarray/discuss/20396/Easy-Python-Way"
        },
        {
            "discussion_title": "Simplest and fastest O(n) C++ solution",
            "discussion_vote": "97",
            "discussion_views": "37.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-subarray/discuss/20189/Simplest-and-fastest-O(n)-C%2B%2B-solution"
        }
    ],
    "54": [
        {
            "discussion_title": "Super Simple and Easy to Understand Solution",
            "discussion_vote": "477",
            "discussion_views": "75.5K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix/discuss/20599/Super-Simple-and-Easy-to-Understand-Solution"
        },
        {
            "discussion_title": "1-liner in Python + Ruby",
            "discussion_vote": "135",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix/discuss/20571/1-liner-in-Python-%2B-Ruby"
        },
        {
            "discussion_title": "A concise C++ implementation based on Directions",
            "discussion_vote": "124",
            "discussion_views": "18.7K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix/discuss/20573/A-concise-C%2B%2B-implementation-based-on-Directions"
        },
        {
            "discussion_title": "0ms Clear C++ Solution",
            "discussion_vote": "106",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix/discuss/20719/0ms-Clear-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Clean Java, readable, human friendly code",
            "discussion_vote": "76",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix/discuss/20570/Clean-Java-readable-human-friendly-code"
        }
    ],
    "55": [
        {
            "discussion_title": "Linear and simple solution in C++",
            "discussion_vote": "279",
            "discussion_views": "34.0K",
            "discussion_link": "https://leetcode.com/problems/jump-game/discuss/20917/Linear-and-simple-solution-in-C%2B%2B"
        },
        {
            "discussion_title": "Simplest O(N) solution with constant space",
            "discussion_vote": "143",
            "discussion_views": "27.7K",
            "discussion_link": "https://leetcode.com/problems/jump-game/discuss/20900/Simplest-O(N)-solution-with-constant-space"
        },
        {
            "discussion_title": "Java Solution easy to understand",
            "discussion_vote": "119",
            "discussion_views": "20.0K",
            "discussion_link": "https://leetcode.com/problems/jump-game/discuss/20923/Java-Solution-easy-to-understand"
        },
        {
            "discussion_title": "6 line java solution in O(n)",
            "discussion_vote": "66",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/jump-game/discuss/20932/6-line-java-solution-in-O(n)"
        },
        {
            "discussion_title": "1-6 lines, O(n) time, O(1) space",
            "discussion_vote": "48",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/jump-game/discuss/20907/1-6-lines-O(n)-time-O(1)-space"
        }
    ],
    "56": [
        {
            "discussion_title": "A simple Java solution",
            "discussion_vote": "208",
            "discussion_views": "75.1K",
            "discussion_link": "https://leetcode.com/problems/merge-intervals/discuss/21222/A-simple-Java-solution"
        },
        {
            "discussion_title": "7 lines, easy, Python",
            "discussion_vote": "124",
            "discussion_views": "22.8K",
            "discussion_link": "https://leetcode.com/problems/merge-intervals/discuss/21227/7-lines-easy-Python"
        },
        {
            "discussion_title": "C++ 10 line solution. easing understanding",
            "discussion_vote": "122",
            "discussion_views": "24.9K",
            "discussion_link": "https://leetcode.com/problems/merge-intervals/discuss/21242/C%2B%2B-10-line-solution.-easing-understanding"
        },
        {
            "discussion_title": "Beat 98% Java. Sort start & end respectively.",
            "discussion_vote": "111",
            "discussion_views": "19.5K",
            "discussion_link": "https://leetcode.com/problems/merge-intervals/discuss/21223/Beat-98-Java.-Sort-start-and-end-respectively."
        },
        {
            "discussion_title": "A clean java solution",
            "discussion_vote": "49",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/merge-intervals/discuss/21276/A-clean-java-solution"
        }
    ],
    "57": [
        {
            "discussion_title": "Short and straight-forward Java solution",
            "discussion_vote": "325",
            "discussion_views": "48.1K",
            "discussion_link": "https://leetcode.com/problems/insert-interval/discuss/21602/Short-and-straight-forward-Java-solution"
        },
        {
            "discussion_title": "7+ lines, 3 easy solutions",
            "discussion_vote": "123",
            "discussion_views": "21.1K",
            "discussion_link": "https://leetcode.com/problems/insert-interval/discuss/21622/7%2B-lines-3-easy-solutions"
        },
        {
            "discussion_title": "Short java code",
            "discussion_vote": "65",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/insert-interval/discuss/21600/Short-java-code"
        },
        {
            "discussion_title": "Elegant C++ STL solution, using \"equal_range\" to find overlapped intervals.",
            "discussion_vote": "45",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/insert-interval/discuss/21599/Elegant-C%2B%2B-STL-solution-using-%22equal_range%22-to-find-overlapped-intervals."
        },
        {
            "discussion_title": "Easy and clean O(n) C++ solution",
            "discussion_vote": "35",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/insert-interval/discuss/21669/Easy-and-clean-O(n)-C%2B%2B-solution"
        }
    ],
    "58": [
        {
            "discussion_title": "7-lines 4ms C++ Solution",
            "discussion_vote": "102",
            "discussion_views": "14.1K",
            "discussion_link": "https://leetcode.com/problems/length-of-last-word/discuss/21892/7-lines-4ms-C%2B%2B-Solution"
        },
        {
            "discussion_title": "My simple solution in C++",
            "discussion_vote": "68",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/length-of-last-word/discuss/21955/My-simple-solution-in-C%2B%2B"
        },
        {
            "discussion_title": "A single line of Code in Java",
            "discussion_vote": "65",
            "discussion_views": "25.1K",
            "discussion_link": "https://leetcode.com/problems/length-of-last-word/discuss/21878/A-single-line-of-Code-in-Java"
        },
        {
            "discussion_title": "This problem is not fun at all.",
            "discussion_vote": "55",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/length-of-last-word/discuss/21944/This-problem-is-not-fun-at-all."
        },
        {
            "discussion_title": "One line Python solution",
            "discussion_vote": "19",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/length-of-last-word/discuss/21901/One-line-Python-solution"
        }
    ],
    "59": [
        {
            "discussion_title": "4-9 lines Python solutions",
            "discussion_vote": "156",
            "discussion_views": "16.0K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-ii/discuss/22282/4-9-lines-Python-solutions"
        },
        {
            "discussion_title": "My Super Simple Solution. Can be used for both Spiral Matrix I and II",
            "discussion_vote": "107",
            "discussion_views": "18.4K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-ii/discuss/22289/My-Super-Simple-Solution.-Can-be-used-for-both-Spiral-Matrix-I-and-II"
        },
        {
            "discussion_title": "Simple C++ solution(with explaination)",
            "discussion_vote": "55",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-ii/discuss/22309/Simple-C%2B%2B-solution(with-explaination)"
        },
        {
            "discussion_title": "Share my java solution",
            "discussion_vote": "39",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-ii/discuss/22292/Share-my-java-solution"
        },
        {
            "discussion_title": "My AC solution with using direction variable",
            "discussion_vote": "18",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-ii/discuss/22466/My-AC-solution-with-using-direction-variable"
        }
    ],
    "60": [
        {
            "discussion_title": "\"Explain-like-I'm-five\" Java Solution in O(n)",
            "discussion_vote": "448",
            "discussion_views": "58.8K",
            "discussion_link": "https://leetcode.com/problems/permutation-sequence/discuss/22507/%22Explain-like-I'm-five%22-Java-Solution-in-O(n)"
        },
        {
            "discussion_title": "An iterative solution for reference",
            "discussion_vote": "82",
            "discussion_views": "20.0K",
            "discussion_link": "https://leetcode.com/problems/permutation-sequence/discuss/22508/An-iterative-solution-for-reference"
        },
        {
            "discussion_title": "Most concise C++ solution, minimal memory required",
            "discussion_vote": "52",
            "discussion_views": "18.1K",
            "discussion_link": "https://leetcode.com/problems/permutation-sequence/discuss/22544/Most-concise-C%2B%2B-solution-minimal-memory-required"
        },
        {
            "discussion_title": "Share my Python solution with detailed explanation",
            "discussion_vote": "51",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/permutation-sequence/discuss/22512/Share-my-Python-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Sharing my straightforward C++ solution with explanation",
            "discussion_vote": "36",
            "discussion_views": "10.3K",
            "discussion_link": "https://leetcode.com/problems/permutation-sequence/discuss/22524/Sharing-my-straightforward-C%2B%2B-solution-with-explanation"
        }
    ],
    "61": [
        {
            "discussion_title": "My clean C++ code, quite standard (find tail and reconnect the list)",
            "discussion_vote": "150",
            "discussion_views": "23.5K",
            "discussion_link": "https://leetcode.com/problems/rotate-list/discuss/22735/My-clean-C%2B%2B-code-quite-standard-(find-tail-and-reconnect-the-list)"
        },
        {
            "discussion_title": "Share my java solution with explanation",
            "discussion_vote": "93",
            "discussion_views": "26.2K",
            "discussion_link": "https://leetcode.com/problems/rotate-list/discuss/22715/Share-my-java-solution-with-explanation"
        },
        {
            "discussion_title": "Anyone solve the problem without counting the length of List?",
            "discussion_vote": "39",
            "discussion_views": "10.9K",
            "discussion_link": "https://leetcode.com/problems/rotate-list/discuss/22726/Anyone-solve-the-problem-without-counting-the-length-of-List"
        },
        {
            "discussion_title": "Clean Java Solution with Brief Explanation",
            "discussion_vote": "30",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/rotate-list/discuss/22751/Clean-Java-Solution-with-Brief-Explanation"
        },
        {
            "discussion_title": "I think the description of this problem is misleading.",
            "discussion_vote": "29",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/rotate-list/discuss/22917/I-think-the-description-of-this-problem-is-misleading."
        }
    ],
    "62": [
        {
            "discussion_title": "0ms, 5-lines DP Solution in C++ with Explanations",
            "discussion_vote": "350",
            "discussion_views": "49.9K",
            "discussion_link": "https://leetcode.com/problems/unique-paths/discuss/22954/0ms-5-lines-DP-Solution-in-C%2B%2B-with-Explanations"
        },
        {
            "discussion_title": "My AC solution using formula",
            "discussion_vote": "154",
            "discussion_views": "30.5K",
            "discussion_link": "https://leetcode.com/problems/unique-paths/discuss/22981/My-AC-solution-using-formula"
        },
        {
            "discussion_title": "Math solution, O(1) space",
            "discussion_vote": "94",
            "discussion_views": "21.4K",
            "discussion_link": "https://leetcode.com/problems/unique-paths/discuss/22958/Math-solution-O(1)-space"
        },
        {
            "discussion_title": "Java DP solution with complexity O(n*m)",
            "discussion_vote": "90",
            "discussion_views": "28.6K",
            "discussion_link": "https://leetcode.com/problems/unique-paths/discuss/22953/Java-DP-solution-with-complexity-O(n*m)"
        },
        {
            "discussion_title": "Accpeted simple Python DP solution.",
            "discussion_vote": "46",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/unique-paths/discuss/23234/Accpeted-simple-Python-DP-solution."
        }
    ],
    "63": [
        {
            "discussion_title": "Short JAVA solution",
            "discussion_vote": "182",
            "discussion_views": "31.4K",
            "discussion_link": "https://leetcode.com/problems/unique-paths-ii/discuss/23250/Short-JAVA-solution"
        },
        {
            "discussion_title": "My C++ Dp solution , very simple!",
            "discussion_vote": "80",
            "discussion_views": "18.7K",
            "discussion_link": "https://leetcode.com/problems/unique-paths-ii/discuss/23248/My-C%2B%2B-Dp-solution-very-simple!"
        },
        {
            "discussion_title": "4ms O(n) DP Solution in C++ with Explanations",
            "discussion_vote": "56",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/unique-paths-ii/discuss/23252/4ms-O(n)-DP-Solution-in-C%2B%2B-with-Explanations"
        },
        {
            "discussion_title": "Java Solution using Dynamic Programming, O(1) space",
            "discussion_vote": "44",
            "discussion_views": "12.4K",
            "discussion_link": "https://leetcode.com/problems/unique-paths-ii/discuss/23291/Java-Solution-using-Dynamic-Programming-O(1)-space"
        },
        {
            "discussion_title": "Easy Java solution, in-place, DP",
            "discussion_vote": "14",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/unique-paths-ii/discuss/23436/Easy-Java-solution-in-place-DP"
        }
    ],
    "64": [
        {
            "discussion_title": "10-lines 28ms O(n)-space DP solution in C++ with Explanations",
            "discussion_vote": "189",
            "discussion_views": "28.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-path-sum/discuss/23457/10-lines-28ms-O(n)-space-DP-solution-in-C%2B%2B-with-Explanations"
        },
        {
            "discussion_title": "My java solution using DP and no extra space",
            "discussion_vote": "91",
            "discussion_views": "26.7K",
            "discussion_link": "https://leetcode.com/problems/minimum-path-sum/discuss/23471/My-java-solution-using-DP-and-no-extra-space"
        },
        {
            "discussion_title": "Simple python dp 70ms",
            "discussion_vote": "37",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/minimum-path-sum/discuss/23466/Simple-python-dp-70ms"
        },
        {
            "discussion_title": "DP Solution, Linear space",
            "discussion_vote": "34",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-path-sum/discuss/23477/DP-Solution-Linear-space"
        },
        {
            "discussion_title": "My 8 lines simple solution",
            "discussion_vote": "23",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-path-sum/discuss/23647/My-8-lines-simple-solution"
        }
    ],
    "65": [
        {
            "discussion_title": "The worst problem i have ever met in this oj",
            "discussion_vote": "444",
            "discussion_views": "49.4K",
            "discussion_link": "https://leetcode.com/problems/valid-number/discuss/23741/The-worst-problem-i-have-ever-met-in-this-oj"
        },
        {
            "discussion_title": "Clear Java solution with ifs",
            "discussion_vote": "240",
            "discussion_views": "37.4K",
            "discussion_link": "https://leetcode.com/problems/valid-number/discuss/23738/Clear-Java-solution-with-ifs"
        },
        {
            "discussion_title": "A simple solution in Python based on DFA",
            "discussion_vote": "152",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/valid-number/discuss/23728/A-simple-solution-in-Python-based-on-DFA"
        },
        {
            "discussion_title": "A simple solution in cpp",
            "discussion_vote": "91",
            "discussion_views": "17.0K",
            "discussion_link": "https://leetcode.com/problems/valid-number/discuss/23762/A-simple-solution-in-cpp"
        },
        {
            "discussion_title": "A clean design solution By using design pattern",
            "discussion_vote": "61",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/valid-number/discuss/23977/A-clean-design-solution-By-using-design-pattern"
        }
    ],
    "66": [
        {
            "discussion_title": "My Simple Java Solution",
            "discussion_vote": "670",
            "discussion_views": "65.1K",
            "discussion_link": "https://leetcode.com/problems/plus-one/discuss/24082/My-Simple-Java-Solution"
        },
        {
            "discussion_title": "Is it a simple code(C++)?",
            "discussion_vote": "234",
            "discussion_views": "27.1K",
            "discussion_link": "https://leetcode.com/problems/plus-one/discuss/24084/Is-it-a-simple-code(C%2B%2B)"
        },
        {
            "discussion_title": "I cannot fully understand the meaning of question 'Plus One'",
            "discussion_vote": "63",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/plus-one/discuss/24094/I-cannot-fully-understand-the-meaning-of-question-'Plus-One'"
        },
        {
            "discussion_title": "Simple java solution",
            "discussion_vote": "45",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/plus-one/discuss/24139/Simple-java-solution"
        },
        {
            "discussion_title": "Simple Python solution with explanation (Plus One)",
            "discussion_vote": "41",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/plus-one/discuss/24085/Simple-Python-solution-with-explanation-(Plus-One)"
        }
    ],
    "67": [
        {
            "discussion_title": "Short code by c++",
            "discussion_vote": "284",
            "discussion_views": "41.9K",
            "discussion_link": "https://leetcode.com/problems/add-binary/discuss/24475/Short-code-by-c%2B%2B"
        },
        {
            "discussion_title": "Short AC solution in Java with explanation",
            "discussion_vote": "273",
            "discussion_views": "47.9K",
            "discussion_link": "https://leetcode.com/problems/add-binary/discuss/24488/Short-AC-solution-in-Java-with-explanation"
        },
        {
            "discussion_title": "Simple accepted java solution",
            "discussion_vote": "72",
            "discussion_views": "30.0K",
            "discussion_link": "https://leetcode.com/problems/add-binary/discuss/24524/Simple-accepted-java-solution"
        },
        {
            "discussion_title": "An accepted concise Python recursive solution 10 lines",
            "discussion_vote": "63",
            "discussion_views": "16.0K",
            "discussion_link": "https://leetcode.com/problems/add-binary/discuss/24500/An-accepted-concise-Python-recursive-solution-10-lines"
        },
        {
            "discussion_title": "Very concise C++ solution without calculating longest string",
            "discussion_vote": "37",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/add-binary/discuss/24756/Very-concise-C%2B%2B-solution-without-calculating-longest-string"
        }
    ],
    "68": [
        {
            "discussion_title": "Share my concise c++ solution - less than 20 lines",
            "discussion_vote": "120",
            "discussion_views": "30.4K",
            "discussion_link": "https://leetcode.com/problems/text-justification/discuss/24873/Share-my-concise-c%2B%2B-solution-less-than-20-lines"
        },
        {
            "discussion_title": "Concise python solution, 10 lines.",
            "discussion_vote": "82",
            "discussion_views": "12.4K",
            "discussion_link": "https://leetcode.com/problems/text-justification/discuss/24891/Concise-python-solution-10-lines."
        },
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "43",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/text-justification/discuss/24876/Simple-Java-Solution"
        },
        {
            "discussion_title": "What does this question aim to teach?",
            "discussion_vote": "31",
            "discussion_views": "14.7K",
            "discussion_link": "https://leetcode.com/problems/text-justification/discuss/24871/What-does-this-question-aim-to-teach"
        },
        {
            "discussion_title": "Easy understanding solution",
            "discussion_vote": "17",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/text-justification/discuss/24965/Easy-understanding-solution"
        }
    ],
    "69": [
        {
            "discussion_title": "A Binary Search Solution",
            "discussion_vote": "277",
            "discussion_views": "97.6K",
            "discussion_link": "https://leetcode.com/problems/sqrtx/discuss/25047/A-Binary-Search-Solution"
        },
        {
            "discussion_title": "3-4 short lines, Integer Newton, Every Language",
            "discussion_vote": "192",
            "discussion_views": "55.9K",
            "discussion_link": "https://leetcode.com/problems/sqrtx/discuss/25057/3-4-short-lines-Integer-Newton-Every-Language"
        },
        {
            "discussion_title": "Share my O(log n) Solution using bit manipulation",
            "discussion_vote": "89",
            "discussion_views": "28.3K",
            "discussion_link": "https://leetcode.com/problems/sqrtx/discuss/25048/Share-my-O(log-n)-Solution-using-bit-manipulation"
        },
        {
            "discussion_title": "Solve this problem with  Binary Search",
            "discussion_vote": "63",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/sqrtx/discuss/25066/Solve-this-problem-with-Binary-Search"
        },
        {
            "discussion_title": "Newton's Iterative Method in C++",
            "discussion_vote": "39",
            "discussion_views": "13.7K",
            "discussion_link": "https://leetcode.com/problems/sqrtx/discuss/25255/Newton's-Iterative-Method-in-C%2B%2B"
        }
    ],
    "70": [
        {
            "discussion_title": "Basically it's a fibonacci.",
            "discussion_vote": "315",
            "discussion_views": "65.3K",
            "discussion_link": "https://leetcode.com/problems/climbing-stairs/discuss/25299/Basically-it's-a-fibonacci."
        },
        {
            "discussion_title": "3-4 short lines in every language",
            "discussion_vote": "103",
            "discussion_views": "33.9K",
            "discussion_link": "https://leetcode.com/problems/climbing-stairs/discuss/25296/3-4-short-lines-in-every-language"
        },
        {
            "discussion_title": "Easy solutions for suggestions.",
            "discussion_vote": "53",
            "discussion_views": "24.9K",
            "discussion_link": "https://leetcode.com/problems/climbing-stairs/discuss/25345/Easy-solutions-for-suggestions."
        },
        {
            "discussion_title": "Python different solutions (bottom up, top down).",
            "discussion_vote": "36",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/climbing-stairs/discuss/25313/Python-different-solutions-(bottom-up-top-down)."
        },
        {
            "discussion_title": "Using the Fibonacci formular to get the answer directly",
            "discussion_vote": "23",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/climbing-stairs/discuss/25436/Using-the-Fibonacci-formular-to-get-the-answer-directly"
        }
    ],
    "71": [
        {
            "discussion_title": "C++ 10-lines solution",
            "discussion_vote": "156",
            "discussion_views": "22.7K",
            "discussion_link": "https://leetcode.com/problems/simplify-path/discuss/25680/C%2B%2B-10-lines-solution"
        },
        {
            "discussion_title": "Java 10-lines solution with stack",
            "discussion_vote": "137",
            "discussion_views": "32.3K",
            "discussion_link": "https://leetcode.com/problems/simplify-path/discuss/25686/Java-10-lines-solution-with-stack"
        },
        {
            "discussion_title": "Can someone please explain what does simplify means in this context?",
            "discussion_vote": "67",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/simplify-path/discuss/25678/Can-someone-please-explain-what-does-simplify-means-in-this-context"
        },
        {
            "discussion_title": "9 lines of Python code",
            "discussion_vote": "41",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/simplify-path/discuss/25691/9-lines-of-Python-code"
        },
        {
            "discussion_title": "My O(n) AC code . just need to handle two special cases.",
            "discussion_vote": "20",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/simplify-path/discuss/25773/My-O(n)-AC-code-.-just-need-to-handle-two-special-cases."
        }
    ],
    "72": [
        {
            "discussion_title": "20ms Detailed Explained C++ Solutions (O(n) Space)",
            "discussion_vote": "414",
            "discussion_views": "42.5K",
            "discussion_link": "https://leetcode.com/problems/edit-distance/discuss/25846/20ms-Detailed-Explained-C%2B%2B-Solutions-(O(n)-Space)"
        },
        {
            "discussion_title": "Java DP solution - O(nm)",
            "discussion_vote": "137",
            "discussion_views": "24.2K",
            "discussion_link": "https://leetcode.com/problems/edit-distance/discuss/25849/Java-DP-solution-O(nm)"
        },
        {
            "discussion_title": "My O(mn) time and O(n) space solution using DP with explanation",
            "discussion_vote": "87",
            "discussion_views": "22.0K",
            "discussion_link": "https://leetcode.com/problems/edit-distance/discuss/25911/My-O(mn)-time-and-O(n)-space-solution-using-DP-with-explanation"
        },
        {
            "discussion_title": "Good pdf on edit distance problem. May be helpful.",
            "discussion_vote": "58",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/edit-distance/discuss/25913/Good-pdf-on-edit-distance-problem.-May-be-helpful."
        },
        {
            "discussion_title": "Python solutions and intuition",
            "discussion_vote": "46",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/edit-distance/discuss/159295/Python-solutions-and-intuition"
        }
    ],
    "73": [
        {
            "discussion_title": "Any shorter O(1) space solution?",
            "discussion_vote": "676",
            "discussion_views": "68.6K",
            "discussion_link": "https://leetcode.com/problems/set-matrix-zeroes/discuss/26014/Any-shorter-O(1)-space-solution"
        },
        {
            "discussion_title": "My AC java O(1) solution (easy to read)",
            "discussion_vote": "205",
            "discussion_views": "34.5K",
            "discussion_link": "https://leetcode.com/problems/set-matrix-zeroes/discuss/26008/My-AC-java-O(1)-solution-(easy-to-read)"
        },
        {
            "discussion_title": "My C++ O(1) yoooooo",
            "discussion_vote": "41",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/set-matrix-zeroes/discuss/26038/My-C%2B%2B-O(1)-yoooooo"
        },
        {
            "discussion_title": "My java O(1) solution (easy to understand)",
            "discussion_vote": "33",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/set-matrix-zeroes/discuss/26166/My-java-O(1)-solution-(easy-to-understand)"
        },
        {
            "discussion_title": "21 lines concise and easy understand C++ solution, O(1) space, three steps",
            "discussion_vote": "31",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/set-matrix-zeroes/discuss/26113/21-lines-concise-and-easy-understand-C%2B%2B-solution-O(1)-space-three-steps"
        }
    ],
    "74": [
        {
            "discussion_title": "Don't treat it as a 2D matrix, just treat it as a sorted list",
            "discussion_vote": "282",
            "discussion_views": "45.8K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix/discuss/26220/Don't-treat-it-as-a-2D-matrix-just-treat-it-as-a-sorted-list"
        },
        {
            "discussion_title": "Binary search on an ordered matrix",
            "discussion_vote": "66",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix/discuss/26219/Binary-search-on-an-ordered-matrix"
        },
        {
            "discussion_title": "Java clear solution",
            "discussion_vote": "26",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix/discuss/26292/Java-clear-solution"
        },
        {
            "discussion_title": "A Python binary search solution - O(logn)",
            "discussion_vote": "25",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix/discuss/26201/A-Python-binary-search-solution-O(logn)"
        },
        {
            "discussion_title": "C++ 12ms, O(log(mn)), no library functions, treat matrix as an array",
            "discussion_vote": "15",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix/discuss/26226/C%2B%2B-12ms-O(log(mn))-no-library-functions-treat-matrix-as-an-array"
        }
    ],
    "75": [
        {
            "discussion_title": "Share my at most two-pass constant space 10-line solution",
            "discussion_vote": "525",
            "discussion_views": "74.1K",
            "discussion_link": "https://leetcode.com/problems/sort-colors/discuss/26472/Share-my-at-most-two-pass-constant-space-10-line-solution"
        },
        {
            "discussion_title": "Four different solutions",
            "discussion_vote": "192",
            "discussion_views": "40.6K",
            "discussion_link": "https://leetcode.com/problems/sort-colors/discuss/26500/Four-different-solutions"
        },
        {
            "discussion_title": "AC Python in place one pass solution O(n) time O(1) space, no swap no count",
            "discussion_vote": "142",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/sort-colors/discuss/26479/AC-Python-in-place-one-pass-solution-O(n)-time-O(1)-space-no-swap-no-count"
        },
        {
            "discussion_title": "Sharing C++ solution with Good Explanation",
            "discussion_vote": "107",
            "discussion_views": "13.7K",
            "discussion_link": "https://leetcode.com/problems/sort-colors/discuss/26474/Sharing-C%2B%2B-solution-with-Good-Explanation"
        },
        {
            "discussion_title": "Java solution, both 2-pass and 1-pass",
            "discussion_vote": "63",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/sort-colors/discuss/26549/Java-solution-both-2-pass-and-1-pass"
        }
    ],
    "76": [
        {
            "discussion_title": "Here is a 10-line template that can solve most 'substring' problems",
            "discussion_vote": "1.9K",
            "discussion_views": "168.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-window-substring/discuss/26808/Here-is-a-10-line-template-that-can-solve-most-'substring'-problems"
        },
        {
            "discussion_title": "12 lines Python",
            "discussion_vote": "122",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-window-substring/discuss/26804/12-lines-Python"
        },
        {
            "discussion_title": "Accepted O(n) solution",
            "discussion_vote": "77",
            "discussion_views": "57.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-window-substring/discuss/26805/Accepted-O(n)-solution"
        },
        {
            "discussion_title": "Java solution. using two pointers + HashMap",
            "discussion_vote": "75",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-window-substring/discuss/26810/Java-solution.-using-two-pointers-%2B-HashMap"
        },
        {
            "discussion_title": "Can T have characters repeating ?",
            "discussion_vote": "61",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/minimum-window-substring/discuss/26825/Can-T-have-characters-repeating"
        }
    ],
    "77": [
        {
            "discussion_title": "Short Iterative C++ Answer 8ms",
            "discussion_vote": "107",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/combinations/discuss/26992/Short-Iterative-C%2B%2B-Answer-8ms"
        },
        {
            "discussion_title": "Backtracking Solution Java",
            "discussion_vote": "105",
            "discussion_views": "33.5K",
            "discussion_link": "https://leetcode.com/problems/combinations/discuss/27002/Backtracking-Solution-Java"
        },
        {
            "discussion_title": "A short recursive Java solution based on C(n,k)=C(n-1,k-1)+C(n-1,k)",
            "discussion_vote": "87",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/combinations/discuss/27019/A-short-recursive-Java-solution-based-on-C(nk)C(n-1k-1)%2BC(n-1k)"
        },
        {
            "discussion_title": "1-liner, 3-liner, 4-liner",
            "discussion_vote": "45",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/combinations/discuss/27024/1-liner-3-liner-4-liner"
        },
        {
            "discussion_title": "My shortest c++ solution,using dfs",
            "discussion_vote": "44",
            "discussion_views": "11.6K",
            "discussion_link": "https://leetcode.com/problems/combinations/discuss/27111/My-shortest-c%2B%2B-solutionusing-dfs"
        }
    ],
    "78": [
        {
            "discussion_title": "A general approach to backtracking questions in Java (Subsets, Permutations, Combination Sum, Palindrome Partitioning)",
            "discussion_vote": "669",
            "discussion_views": "88.7K",
            "discussion_link": "https://leetcode.com/problems/subsets/discuss/27281/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partitioning)"
        },
        {
            "discussion_title": "My solution using bit manipulation",
            "discussion_vote": "241",
            "discussion_views": "43.9K",
            "discussion_link": "https://leetcode.com/problems/subsets/discuss/27288/My-solution-using-bit-manipulation"
        },
        {
            "discussion_title": "C++ Recursive/Iterative/Bit-Manipulation",
            "discussion_vote": "236",
            "discussion_views": "26.2K",
            "discussion_link": "https://leetcode.com/problems/subsets/discuss/27278/C%2B%2B-RecursiveIterativeBit-Manipulation"
        },
        {
            "discussion_title": "Python easy to understand solutions (DFS recursively, Bit Manipulation, Iteratively).",
            "discussion_vote": "133",
            "discussion_views": "22.1K",
            "discussion_link": "https://leetcode.com/problems/subsets/discuss/27301/Python-easy-to-understand-solutions-(DFS-recursively-Bit-Manipulation-Iteratively)."
        },
        {
            "discussion_title": "3ms, easiest solution, no backtracking, no bit manipulation, no dfs, no bullshit",
            "discussion_vote": "105",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/subsets/discuss/122645/3ms-easiest-solution-no-backtracking-no-bit-manipulation-no-dfs-no-bullshit"
        }
    ],
    "79": [
        {
            "discussion_title": "Accepted very short Java solution. No additional space.",
            "discussion_vote": "284",
            "discussion_views": "92.3K",
            "discussion_link": "https://leetcode.com/problems/word-search/discuss/27658/Accepted-very-short-Java-solution.-No-additional-space."
        },
        {
            "discussion_title": "My Java solution",
            "discussion_vote": "90",
            "discussion_views": "30.0K",
            "discussion_link": "https://leetcode.com/problems/word-search/discuss/27811/My-Java-solution"
        },
        {
            "discussion_title": "Python dfs solution with comments.",
            "discussion_vote": "85",
            "discussion_views": "18.2K",
            "discussion_link": "https://leetcode.com/problems/word-search/discuss/27660/Python-dfs-solution-with-comments."
        },
        {
            "discussion_title": "My 19ms accepted C++ code",
            "discussion_vote": "48",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/word-search/discuss/27675/My-19ms-accepted-C%2B%2B-code"
        },
        {
            "discussion_title": "Simple solution",
            "discussion_vote": "42",
            "discussion_views": "13.8K",
            "discussion_link": "https://leetcode.com/problems/word-search/discuss/27834/Simple-solution"
        }
    ],
    "80": [
        {
            "discussion_title": "3-6 easy lines, C++, Java, Python, Ruby",
            "discussion_vote": "588",
            "discussion_views": "40.1K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/27976/3-6-easy-lines-C%2B%2B-Java-Python-Ruby"
        },
        {
            "discussion_title": "Share my O(N) time and O(1) solution when duplicates are allowed at most K times",
            "discussion_vote": "125",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/27970/Share-my-O(N)-time-and-O(1)-solution-when-duplicates-are-allowed-at-most-K-times"
        },
        {
            "discussion_title": "Short and Simple Java solution (easy to understand)",
            "discussion_vote": "87",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/27987/Short-and-Simple-Java-solution-(easy-to-understand)"
        },
        {
            "discussion_title": "My C++ solution. 16ms, 5 lines",
            "discussion_vote": "22",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/28004/My-C%2B%2B-solution.-16ms-5-lines"
        },
        {
            "discussion_title": "O(N) Time and O(1) Java Solution When Allowed at Most K times of Duplicates",
            "discussion_vote": "12",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/28067/O(N)-Time-and-O(1)-Java-Solution-When-Allowed-at-Most-K-times-of-Duplicates"
        }
    ],
    "81": [
        {
            "discussion_title": "My 8ms C++ solution (o(logn) on average, o(n) worst case)",
            "discussion_vote": "125",
            "discussion_views": "16.4K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/discuss/28218/My-8ms-C%2B%2B-solution-(o(logn)-on-average-o(n)-worst-case)"
        },
        {
            "discussion_title": "C++ concise log(n) solution",
            "discussion_vote": "69",
            "discussion_views": "29.5K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/discuss/28194/C%2B%2B-concise-log(n)-solution"
        },
        {
            "discussion_title": "Neat JAVA solution using binary search",
            "discussion_vote": "56",
            "discussion_views": "22.6K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/discuss/28202/Neat-JAVA-solution-using-binary-search"
        },
        {
            "discussion_title": "Python easy to understand solution (with comments).",
            "discussion_vote": "46",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/discuss/28195/Python-easy-to-understand-solution-(with-comments)."
        },
        {
            "discussion_title": "When there are duplicates, the worst case is O(n). Could we do better?",
            "discussion_vote": "31",
            "discussion_views": "28.8K",
            "discussion_link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/discuss/28212/When-there-are-duplicates-the-worst-case-is-O(n).-Could-we-do-better"
        }
    ],
    "82": [
        {
            "discussion_title": "My accepted Java code",
            "discussion_vote": "217",
            "discussion_views": "31.6K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/discuss/28335/My-accepted-Java-code"
        },
        {
            "discussion_title": "My Recursive Java Solution",
            "discussion_vote": "59",
            "discussion_views": "9.3K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/discuss/28339/My-Recursive-Java-Solution"
        },
        {
            "discussion_title": "Java simple and clean code with comment",
            "discussion_vote": "46",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/discuss/28364/Java-simple-and-clean-code-with-comment"
        },
        {
            "discussion_title": "Simple and clear c++ recursive solution",
            "discussion_vote": "44",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/discuss/28355/Simple-and-clear-c%2B%2B-recursive-solution"
        },
        {
            "discussion_title": "Python in-place solution with dummy head node.",
            "discussion_vote": "35",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/discuss/28336/Python-in-place-solution-with-dummy-head-node."
        }
    ],
    "83": [
        {
            "discussion_title": "3 Line JAVA recursive solution",
            "discussion_vote": "167",
            "discussion_views": "25.6K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/discuss/28625/3-Line-JAVA-recursive-solution"
        },
        {
            "discussion_title": "My pretty solution. Java.",
            "discussion_vote": "83",
            "discussion_views": "21.9K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/discuss/28614/My-pretty-solution.-Java."
        },
        {
            "discussion_title": "Concise solution and memory freeing",
            "discussion_vote": "31",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/discuss/28730/Concise-solution-and-memory-freeing"
        },
        {
            "discussion_title": "Simple iterative Python 6 lines, 60 ms",
            "discussion_vote": "25",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/discuss/28621/Simple-iterative-Python-6-lines-60-ms"
        },
        {
            "discussion_title": "Clean Java solution",
            "discussion_vote": "13",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/discuss/28636/Clean-Java-solution"
        }
    ],
    "84": [
        {
            "discussion_title": "My concise C++ solution, AC 90 ms",
            "discussion_vote": "138",
            "discussion_views": "43.3K",
            "discussion_link": "https://leetcode.com/problems/largest-rectangle-in-histogram/discuss/28905/My-concise-C%2B%2B-solution-AC-90-ms"
        },
        {
            "discussion_title": "O(n) stack based JAVA solution",
            "discussion_vote": "131",
            "discussion_views": "53.3K",
            "discussion_link": "https://leetcode.com/problems/largest-rectangle-in-histogram/discuss/28900/O(n)-stack-based-JAVA-solution"
        },
        {
            "discussion_title": "5ms O(n) Java solution explained (beats 96%)",
            "discussion_vote": "120",
            "discussion_views": "19.3K",
            "discussion_link": "https://leetcode.com/problems/largest-rectangle-in-histogram/discuss/28902/5ms-O(n)-Java-solution-explained-(beats-96)"
        },
        {
            "discussion_title": "AC Python clean solution using stack 76ms",
            "discussion_vote": "89",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/largest-rectangle-in-histogram/discuss/28917/AC-Python-clean-solution-using-stack-76ms"
        },
        {
            "discussion_title": "Simple Divide and Conquer AC solution without Segment Tree",
            "discussion_vote": "73",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/largest-rectangle-in-histogram/discuss/28910/Simple-Divide-and-Conquer-AC-solution-without-Segment-Tree"
        }
    ],
    "85": [
        {
            "discussion_title": "Share my DP solution",
            "discussion_vote": "687",
            "discussion_views": "102.8K",
            "discussion_link": "https://leetcode.com/problems/maximal-rectangle/discuss/29054/Share-my-DP-solution"
        },
        {
            "discussion_title": "A O(n^2) solution based on Largest Rectangle in Histogram",
            "discussion_vote": "240",
            "discussion_views": "49.2K",
            "discussion_link": "https://leetcode.com/problems/maximal-rectangle/discuss/29064/A-O(n2)-solution-based-on-Largest-Rectangle-in-Histogram"
        },
        {
            "discussion_title": "My java solution based on Maximum Rectangle in Histogram with explanation",
            "discussion_vote": "100",
            "discussion_views": "20.2K",
            "discussion_link": "https://leetcode.com/problems/maximal-rectangle/discuss/29055/My-java-solution-based-on-Maximum-Rectangle-in-Histogram-with-explanation"
        },
        {
            "discussion_title": "AC Python DP solutioin 120ms based on largest rectangle in histogram",
            "discussion_vote": "78",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/maximal-rectangle/discuss/29065/AC-Python-DP-solutioin-120ms-based-on-largest-rectangle-in-histogram"
        },
        {
            "discussion_title": "Sharing my straightforward C++ solution with O(n^2) time with explanation",
            "discussion_vote": "27",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/maximal-rectangle/discuss/29059/Sharing-my-straightforward-C%2B%2B-solution-with-O(n2)-time-with-explanation"
        }
    ],
    "86": [
        {
            "discussion_title": "Very concise one pass solution",
            "discussion_vote": "224",
            "discussion_views": "31.7K",
            "discussion_link": "https://leetcode.com/problems/partition-list/discuss/29185/Very-concise-one-pass-solution"
        },
        {
            "discussion_title": "Concise java code with explanation, one pass",
            "discussion_vote": "119",
            "discussion_views": "17.4K",
            "discussion_link": "https://leetcode.com/problems/partition-list/discuss/29183/Concise-java-code-with-explanation-one-pass"
        },
        {
            "discussion_title": "Python concise solution with dummy nodes.",
            "discussion_vote": "40",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/partition-list/discuss/29174/Python-concise-solution-with-dummy-nodes."
        },
        {
            "discussion_title": "10 lines concise C++ Solution",
            "discussion_vote": "24",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/partition-list/discuss/29181/10-lines-concise-C%2B%2B-Solution"
        },
        {
            "discussion_title": "My accepted solution. Any improvement?",
            "discussion_vote": "11",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/partition-list/discuss/29335/My-accepted-solution.-Any-improvement"
        }
    ],
    "87": [
        {
            "discussion_title": "Share my 4ms c++ recursive solution",
            "discussion_vote": "116",
            "discussion_views": "25.6K",
            "discussion_link": "https://leetcode.com/problems/scramble-string/discuss/29392/Share-my-4ms-c%2B%2B-recursive-solution"
        },
        {
            "discussion_title": "Accepted Java solution",
            "discussion_vote": "90",
            "discussion_views": "21.3K",
            "discussion_link": "https://leetcode.com/problems/scramble-string/discuss/29387/Accepted-Java-solution"
        },
        {
            "discussion_title": "My C++ solutions (recursion with cache , DP, recursion with cache and pruning) with explanation (4ms)",
            "discussion_vote": "77",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/scramble-string/discuss/29394/My-C%2B%2B-solutions-(recursion-with-cache-DP-recursion-with-cache-and-pruning)-with-explanation-(4ms)"
        },
        {
            "discussion_title": "Simple iterative DP Java solution with explanation",
            "discussion_vote": "46",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/scramble-string/discuss/29396/Simple-iterative-DP-Java-solution-with-explanation"
        },
        {
            "discussion_title": "Can you partition a string at ANY index at ANY time in producing a scramble?",
            "discussion_vote": "43",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/scramble-string/discuss/29455/Can-you-partition-a-string-at-ANY-index-at-ANY-time-in-producing-a-scramble"
        }
    ],
    "88": [
        {
            "discussion_title": "This is my AC code, may help you",
            "discussion_vote": "364",
            "discussion_views": "72.5K",
            "discussion_link": "https://leetcode.com/problems/merge-sorted-array/discuss/29522/This-is-my-AC-code-may-help-you"
        },
        {
            "discussion_title": "Beautiful Python Solution",
            "discussion_vote": "172",
            "discussion_views": "29.8K",
            "discussion_link": "https://leetcode.com/problems/merge-sorted-array/discuss/29503/Beautiful-Python-Solution"
        },
        {
            "discussion_title": "4ms C++ solution with single loop",
            "discussion_vote": "132",
            "discussion_views": "27.0K",
            "discussion_link": "https://leetcode.com/problems/merge-sorted-array/discuss/29515/4ms-C%2B%2B-solution-with-single-loop"
        },
        {
            "discussion_title": "3 line Java Solution",
            "discussion_vote": "97",
            "discussion_views": "43.1K",
            "discussion_link": "https://leetcode.com/problems/merge-sorted-array/discuss/29498/3-line-Java-Solution"
        },
        {
            "discussion_title": "1 Line Solution",
            "discussion_vote": "46",
            "discussion_views": "15.9K",
            "discussion_link": "https://leetcode.com/problems/merge-sorted-array/discuss/29505/1-Line-Solution"
        }
    ],
    "89": [
        {
            "discussion_title": "An accepted three line solution in JAVA",
            "discussion_vote": "187",
            "discussion_views": "44.6K",
            "discussion_link": "https://leetcode.com/problems/gray-code/discuss/29881/An-accepted-three-line-solution-in-JAVA"
        },
        {
            "discussion_title": "Share my solution",
            "discussion_vote": "180",
            "discussion_views": "20.4K",
            "discussion_link": "https://leetcode.com/problems/gray-code/discuss/29891/Share-my-solution"
        },
        {
            "discussion_title": "One-liner Python solution (with demo in comments)",
            "discussion_vote": "78",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/gray-code/discuss/29893/One-liner-Python-solution-(with-demo-in-comments)"
        },
        {
            "discussion_title": "What is the best solution for Gray Code problem? No extra space used and no recursion?",
            "discussion_vote": "64",
            "discussion_views": "32.2K",
            "discussion_link": "https://leetcode.com/problems/gray-code/discuss/29884/What-is-the-best-solution-for-Gray-Code-problem-No-extra-space-used-and-no-recursion"
        },
        {
            "discussion_title": "Backtracking C++ solution",
            "discussion_vote": "40",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/gray-code/discuss/29880/Backtracking-C%2B%2B-solution"
        }
    ],
    "90": [
        {
            "discussion_title": "C++ solution and explanation",
            "discussion_vote": "214",
            "discussion_views": "35.3K",
            "discussion_link": "https://leetcode.com/problems/subsets-ii/discuss/30168/C%2B%2B-solution-and-explanation"
        },
        {
            "discussion_title": "Simple iterative solution",
            "discussion_vote": "121",
            "discussion_views": "25.4K",
            "discussion_link": "https://leetcode.com/problems/subsets-ii/discuss/30137/Simple-iterative-solution"
        },
        {
            "discussion_title": "Simple python solution without extra space.",
            "discussion_vote": "100",
            "discussion_views": "10.3K",
            "discussion_link": "https://leetcode.com/problems/subsets-ii/discuss/30166/Simple-python-solution-without-extra-space."
        },
        {
            "discussion_title": "Accepted 10ms c++ solution use backtracking, only 10 lines, easy understand.",
            "discussion_vote": "84",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/subsets-ii/discuss/30164/Accepted-10ms-c%2B%2B-solution-use-backtracking-only-10-lines-easy-understand."
        },
        {
            "discussion_title": "Very simple and fast java solution",
            "discussion_vote": "51",
            "discussion_views": "21.8K",
            "discussion_link": "https://leetcode.com/problems/subsets-ii/discuss/30150/Very-simple-and-fast-java-solution"
        }
    ],
    "91": [
        {
            "discussion_title": "DP Solution (Java) for reference",
            "discussion_vote": "281",
            "discussion_views": "85.3K",
            "discussion_link": "https://leetcode.com/problems/decode-ways/discuss/30357/DP-Solution-(Java)-for-reference"
        },
        {
            "discussion_title": "Java clean DP solution with explanation",
            "discussion_vote": "234",
            "discussion_views": "48.8K",
            "discussion_link": "https://leetcode.com/problems/decode-ways/discuss/30358/Java-clean-DP-solution-with-explanation"
        },
        {
            "discussion_title": "A concise dp solution",
            "discussion_vote": "122",
            "discussion_views": "31.5K",
            "discussion_link": "https://leetcode.com/problems/decode-ways/discuss/30384/A-concise-dp-solution"
        },
        {
            "discussion_title": "Evolve from recursion to dp",
            "discussion_vote": "97",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/decode-ways/discuss/30451/Evolve-from-recursion-to-dp"
        },
        {
            "discussion_title": "Java 2ms DP solution with detailed explanation and inline comments",
            "discussion_vote": "64",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/decode-ways/discuss/30522/Java-2ms-DP-solution-with-detailed-explanation-and-inline-comments"
        }
    ],
    "92": [
        {
            "discussion_title": "Simple Java solution with clear explanation",
            "discussion_vote": "317",
            "discussion_views": "46.8K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list-ii/discuss/30666/Simple-Java-solution-with-clear-explanation"
        },
        {
            "discussion_title": "12-lines 4ms C++",
            "discussion_vote": "51",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list-ii/discuss/30668/12-lines-4ms-C%2B%2B"
        },
        {
            "discussion_title": "Share my 14 lines C++ solution",
            "discussion_vote": "51",
            "discussion_views": "13.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list-ii/discuss/30744/Share-my-14-lines-C%2B%2B-solution"
        },
        {
            "discussion_title": "Talk is cheap, show me the code (and DRAWING)",
            "discussion_vote": "48",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list-ii/discuss/30709/Talk-is-cheap-show-me-the-code-(and-DRAWING)"
        },
        {
            "discussion_title": "Python one pass iterative solution",
            "discussion_vote": "44",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list-ii/discuss/30672/Python-one-pass-iterative-solution"
        }
    ],
    "93": [
        {
            "discussion_title": "My code in Java",
            "discussion_vote": "211",
            "discussion_views": "34.6K",
            "discussion_link": "https://leetcode.com/problems/restore-ip-addresses/discuss/30949/My-code-in-Java"
        },
        {
            "discussion_title": "WHO CAN BEAT THIS CODE ?",
            "discussion_vote": "117",
            "discussion_views": "18.0K",
            "discussion_link": "https://leetcode.com/problems/restore-ip-addresses/discuss/30972/WHO-CAN-BEAT-THIS-CODE"
        },
        {
            "discussion_title": "Very simple DFS solution",
            "discussion_vote": "103",
            "discussion_views": "25.6K",
            "discussion_link": "https://leetcode.com/problems/restore-ip-addresses/discuss/30944/Very-simple-DFS-solution"
        },
        {
            "discussion_title": "What is the definition of a valid IP address?",
            "discussion_vote": "51",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/restore-ip-addresses/discuss/31165/What-is-the-definition-of-a-valid-IP-address"
        },
        {
            "discussion_title": "My concise AC java code",
            "discussion_vote": "37",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/restore-ip-addresses/discuss/30998/My-concise-AC-java-code"
        }
    ],
    "94": [
        {
            "discussion_title": "Iterative solution in Java - simple and readable",
            "discussion_vote": "412",
            "discussion_views": "55.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-inorder-traversal/discuss/31213/Iterative-solution-in-Java-simple-and-readable"
        },
        {
            "discussion_title": "Three Methods to Solve (C++)",
            "discussion_vote": "90",
            "discussion_views": "20.0K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-inorder-traversal/discuss/31232/Three-Methods-to-Solve-(C%2B%2B)"
        },
        {
            "discussion_title": "Python recursive and iterative solutions.",
            "discussion_vote": "78",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-inorder-traversal/discuss/31381/Python-recursive-and-iterative-solutions."
        },
        {
            "discussion_title": "C++ Ierative, Recursive and Morris Traversal",
            "discussion_vote": "77",
            "discussion_views": "13.1K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-inorder-traversal/discuss/31231/C%2B%2B-Ierative-Recursive-and-Morris-Traversal"
        },
        {
            "discussion_title": "Concise JAVA solution based on Stack",
            "discussion_vote": "40",
            "discussion_views": "8.7K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-inorder-traversal/discuss/31404/Concise-JAVA-solution-based-on-Stack"
        }
    ],
    "95": [
        {
            "discussion_title": "A simple recursive solution",
            "discussion_vote": "216",
            "discussion_views": "60.7K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees-ii/discuss/31494/A-simple-recursive-solution"
        },
        {
            "discussion_title": "Java Solution with DP",
            "discussion_vote": "140",
            "discussion_views": "36.2K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees-ii/discuss/31493/Java-Solution-with-DP"
        },
        {
            "discussion_title": "Divide-and-conquer.  F(i) = G(i-1) * G(n-i)",
            "discussion_vote": "120",
            "discussion_views": "15.9K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees-ii/discuss/31508/Divide-and-conquer.-F(i)-G(i-1)-*-G(n-i)"
        },
        {
            "discussion_title": "Should-be-6-Liner",
            "discussion_vote": "69",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees-ii/discuss/31495/Should-be-6-Liner"
        },
        {
            "discussion_title": "Share a C++ DP solution with O(1) space",
            "discussion_vote": "61",
            "discussion_views": "16.9K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees-ii/discuss/31516/Share-a-C%2B%2B-DP-solution-with-O(1)-space"
        }
    ],
    "96": [
        {
            "discussion_title": "DP Solution in 6 lines with explanation. F(i, n) = G(i-1) * G(n-i)",
            "discussion_vote": "1.5K",
            "discussion_views": "85.7K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees/discuss/31666/DP-Solution-in-6-lines-with-explanation.-F(i-n)-G(i-1)-*-G(n-i)"
        },
        {
            "discussion_title": "Fantastic Clean Java DP Solution with Detail Explaination",
            "discussion_vote": "134",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees/discuss/31707/Fantastic-Clean-Java-DP-Solution-with-Detail-Explaination"
        },
        {
            "discussion_title": "Dp problem. 10+ lines with comments",
            "discussion_vote": "74",
            "discussion_views": "17.6K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees/discuss/31706/Dp-problem.-10%2B-lines-with-comments"
        },
        {
            "discussion_title": "A very simple and straight ans based on Math,Catalan Number ,O(N) times,O(1)space",
            "discussion_vote": "40",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees/discuss/31671/A-very-simple-and-straight-ans-based-on-MathCatalan-Number-O(N)-timesO(1)space"
        },
        {
            "discussion_title": "Simple solution with easy explaination",
            "discussion_vote": "28",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/unique-binary-search-trees/discuss/31714/Simple-solution-with-easy-explaination"
        }
    ],
    "97": [
        {
            "discussion_title": "My DP solution in C++",
            "discussion_vote": "186",
            "discussion_views": "24.2K",
            "discussion_link": "https://leetcode.com/problems/interleaving-string/discuss/31879/My-DP-solution-in-C%2B%2B"
        },
        {
            "discussion_title": "8ms C++ solution using BFS, with explanation",
            "discussion_vote": "135",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/interleaving-string/discuss/31948/8ms-C%2B%2B-solution-using-BFS-with-explanation"
        },
        {
            "discussion_title": "DP Solution in Java",
            "discussion_vote": "74",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/interleaving-string/discuss/32078/DP-Solution-in-Java"
        },
        {
            "discussion_title": "1ms tiny DFS beats 94.57%",
            "discussion_vote": "55",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/interleaving-string/discuss/31888/1ms-tiny-DFS-beats-94.57"
        },
        {
            "discussion_title": "Python DP solutions (O(m*n), O(n) space), BFS, DFS.",
            "discussion_vote": "37",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/interleaving-string/discuss/31885/Python-DP-solutions-(O(m*n)-O(n)-space)-BFS-DFS."
        }
    ],
    "98": [
        {
            "discussion_title": "Learn one iterative inorder traversal, apply it to multiple tree questions (Java Solution)",
            "discussion_vote": "690",
            "discussion_views": "58.5K",
            "discussion_link": "https://leetcode.com/problems/validate-binary-search-tree/discuss/32112/Learn-one-iterative-inorder-traversal-apply-it-to-multiple-tree-questions-(Java-Solution)"
        },
        {
            "discussion_title": "My simple Java solution in 3 lines",
            "discussion_vote": "328",
            "discussion_views": "76.1K",
            "discussion_link": "https://leetcode.com/problems/validate-binary-search-tree/discuss/32109/My-simple-Java-solution-in-3-lines"
        },
        {
            "discussion_title": "C++ in-order traversal, and please do not rely on buggy INT_MAX, INT_MIN solutions any more",
            "discussion_vote": "239",
            "discussion_views": "51.7K",
            "discussion_link": "https://leetcode.com/problems/validate-binary-search-tree/discuss/32104/C%2B%2B-in-order-traversal-and-please-do-not-rely-on-buggy-INT_MAX-INT_MIN-solutions-any-more"
        },
        {
            "discussion_title": "C++ simple recursive solution",
            "discussion_vote": "154",
            "discussion_views": "23.4K",
            "discussion_link": "https://leetcode.com/problems/validate-binary-search-tree/discuss/32141/C%2B%2B-simple-recursive-solution"
        },
        {
            "discussion_title": "My java inorder iteration solution",
            "discussion_vote": "75",
            "discussion_views": "21.1K",
            "discussion_link": "https://leetcode.com/problems/validate-binary-search-tree/discuss/32101/My-java-inorder-iteration-solution"
        }
    ],
    "99": [
        {
            "discussion_title": "No Fancy Algorithm, just Simple and Powerful In-Order Traversal",
            "discussion_vote": "542",
            "discussion_views": "67.2K",
            "discussion_link": "https://leetcode.com/problems/recover-binary-search-tree/discuss/32535/No-Fancy-Algorithm-just-Simple-and-Powerful-In-Order-Traversal"
        },
        {
            "discussion_title": "Detail Explain about How Morris Traversal Finds two Incorrect Pointer",
            "discussion_vote": "136",
            "discussion_views": "21.2K",
            "discussion_link": "https://leetcode.com/problems/recover-binary-search-tree/discuss/32559/Detail-Explain-about-How-Morris-Traversal-Finds-two-Incorrect-Pointer"
        },
        {
            "discussion_title": "Tree Deserializer and Visualizer for Python",
            "discussion_vote": "91",
            "discussion_views": "23.9K",
            "discussion_link": "https://leetcode.com/problems/recover-binary-search-tree/discuss/32539/Tree-Deserializer-and-Visualizer-for-Python"
        },
        {
            "discussion_title": "Share my solutions and detailed explanation with recursive/iterative in-order-traversal and Morris-traversal",
            "discussion_vote": "70",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/recover-binary-search-tree/discuss/32562/Share-my-solutions-and-detailed-explanation-with-recursiveiterative-in-order-traversal-and-Morris-traversal"
        },
        {
            "discussion_title": "[recommend for beginners]clean C++ implementation with detailed explaination",
            "discussion_vote": "18",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/recover-binary-search-tree/discuss/32580/recommend-for-beginnersclean-C%2B%2B-implementation-with-detailed-explaination"
        }
    ],
    "100": [
        {
            "discussion_title": "Five line Java solution with recursion",
            "discussion_vote": "138",
            "discussion_views": "40.6K",
            "discussion_link": "https://leetcode.com/problems/same-tree/discuss/32687/Five-line-Java-solution-with-recursion"
        },
        {
            "discussion_title": "Here's a C++ recursion solution in minimal lines of code",
            "discussion_vote": "70",
            "discussion_views": "13.9K",
            "discussion_link": "https://leetcode.com/problems/same-tree/discuss/32685/Here's-a-C%2B%2B-recursion-solution-in-minimal-lines-of-code"
        },
        {
            "discussion_title": "My non-recursive method",
            "discussion_vote": "65",
            "discussion_views": "17.4K",
            "discussion_link": "https://leetcode.com/problems/same-tree/discuss/32684/My-non-recursive-method"
        },
        {
            "discussion_title": "Shortest+simplest Python",
            "discussion_vote": "62",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/same-tree/discuss/32729/Shortest%2Bsimplest-Python"
        },
        {
            "discussion_title": "Python Recursive solution and DFS Iterative solution with stack and BFS Iterative solution with queue",
            "discussion_vote": "28",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/same-tree/discuss/32894/Python-Recursive-solution-and-DFS-Iterative-solution-with-stack-and-BFS-Iterative-solution-with-queue"
        }
    ],
    "101": [
        {
            "discussion_title": "Recursive and non-recursive solutions in Java",
            "discussion_vote": "270",
            "discussion_views": "65.5K",
            "discussion_link": "https://leetcode.com/problems/symmetric-tree/discuss/33054/Recursive-and-non-recursive-solutions-in-Java"
        },
        {
            "discussion_title": "1ms recursive Java Solution, easy to understand",
            "discussion_vote": "95",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/symmetric-tree/discuss/33104/1ms-recursive-Java-Solution-easy-to-understand"
        },
        {
            "discussion_title": "My C++ Accepted code in 16ms with iteration solution",
            "discussion_vote": "89",
            "discussion_views": "17.8K",
            "discussion_link": "https://leetcode.com/problems/symmetric-tree/discuss/33089/My-C%2B%2B-Accepted-code-in-16ms-with-iteration-solution"
        },
        {
            "discussion_title": "Recursively and iteratively solution in Python",
            "discussion_vote": "74",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/symmetric-tree/discuss/33050/Recursively-and-iteratively-solution-in-Python"
        },
        {
            "discussion_title": "Short and clean java iterative solution",
            "discussion_vote": "67",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/symmetric-tree/discuss/33152/Short-and-clean-java-iterative-solution"
        }
    ],
    "102": [
        {
            "discussion_title": "Java solution with a queue used",
            "discussion_vote": "225",
            "discussion_views": "57.9K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/33450/Java-solution-with-a-queue-used"
        },
        {
            "discussion_title": "Java Solution using DFS",
            "discussion_vote": "141",
            "discussion_views": "25.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/33445/Java-Solution-using-DFS"
        },
        {
            "discussion_title": "One of C++ solutions (preorder)",
            "discussion_vote": "128",
            "discussion_views": "22.7K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/33468/One-of-C%2B%2B-solutions-(preorder)"
        },
        {
            "discussion_title": "C++ solution using only one queue / use a marker NULL",
            "discussion_vote": "105",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/33443/C%2B%2B-solution-using-only-one-queue-use-a-marker-NULL"
        },
        {
            "discussion_title": "5-6 lines fast python solution (48 ms)",
            "discussion_vote": "82",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/33464/5-6-lines-fast-python-solution-(48-ms)"
        }
    ],
    "103": [
        {
            "discussion_title": "My accepted JAVA solution",
            "discussion_vote": "160",
            "discussion_views": "50.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/discuss/33815/My-accepted-JAVA-solution"
        },
        {
            "discussion_title": "[c++] 5ms version: one queue and without reverse operation by using size of each level",
            "discussion_vote": "102",
            "discussion_views": "19.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/discuss/33825/c%2B%2B-5ms-version%3A-one-queue-and-without-reverse-operation-by-using-size-of-each-level"
        },
        {
            "discussion_title": "A concise and easy understanding Java solution",
            "discussion_vote": "61",
            "discussion_views": "17.0K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/discuss/33814/A-concise-and-easy-understanding-Java-solution"
        },
        {
            "discussion_title": "JAVA Double Stack Solution",
            "discussion_vote": "35",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/discuss/33904/JAVA-Double-Stack-Solution"
        },
        {
            "discussion_title": "Python simple BFS",
            "discussion_vote": "34",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/discuss/33834/Python-simple-BFS"
        }
    ],
    "104": [
        {
            "discussion_title": "Can leetcode share top performing solution(s) of problems for each supported language ?",
            "discussion_vote": "207",
            "discussion_views": "37.6K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/discuss/34189/Can-leetcode-share-top-performing-solution(s)-of-problems-for-each-supported-language"
        },
        {
            "discussion_title": "Simple solution using Java",
            "discussion_vote": "202",
            "discussion_views": "52.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/discuss/34216/Simple-solution-using-Java"
        },
        {
            "discussion_title": "My code of C++, Depth-first-search and Breadth-first-search",
            "discussion_vote": "116",
            "discussion_views": "26.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/discuss/34207/My-code-of-C%2B%2B-Depth-first-search-and-Breadth-first-search"
        },
        {
            "discussion_title": "Two Java Iterative solution DFS and BFS",
            "discussion_vote": "83",
            "discussion_views": "19.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/discuss/34195/Two-Java-Iterative-solution-DFS-and-BFS"
        },
        {
            "discussion_title": "1 line Ruby and Python",
            "discussion_vote": "47",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/discuss/34212/1-line-Ruby-and-Python"
        }
    ],
    "105": [
        {
            "discussion_title": "My Accepted Java Solution",
            "discussion_vote": "259",
            "discussion_views": "62.1K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/discuss/34538/My-Accepted-Java-Solution"
        },
        {
            "discussion_title": "Python short recursive solution.",
            "discussion_vote": "126",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/discuss/34579/Python-short-recursive-solution."
        },
        {
            "discussion_title": "The iterative solution is easier than you think!",
            "discussion_vote": "105",
            "discussion_views": "37.7K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/discuss/34555/The-iterative-solution-is-easier-than-you-think!"
        },
        {
            "discussion_title": "Sharing my straightforward recursive solution",
            "discussion_vote": "64",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/discuss/34562/Sharing-my-straightforward-recursive-solution"
        },
        {
            "discussion_title": "5ms Java Clean Solution with Caching",
            "discussion_vote": "51",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/discuss/34541/5ms-Java-Clean-Solution-with-Caching"
        }
    ],
    "106": [
        {
            "discussion_title": "My recursive Java code with O(n) time and O(n) space",
            "discussion_vote": "111",
            "discussion_views": "37.0K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/discuss/34782/My-recursive-Java-code-with-O(n)-time-and-O(n)-space"
        },
        {
            "discussion_title": "A Python recursive solution",
            "discussion_vote": "49",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/discuss/34814/A-Python-recursive-solution"
        },
        {
            "discussion_title": "Sharing my straightforward recursive solution",
            "discussion_vote": "44",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/discuss/34803/Sharing-my-straightforward-recursive-solution"
        },
        {
            "discussion_title": "Java iterative solution with explanation",
            "discussion_vote": "38",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/discuss/34807/Java-iterative-solution-with-explanation"
        },
        {
            "discussion_title": "My comprehension of O(n) solution from @hongzhi",
            "discussion_vote": "33",
            "discussion_views": "16.4K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/discuss/34849/My-comprehension-of-O(n)-solution-from-%40hongzhi"
        }
    ],
    "107": [
        {
            "discussion_title": "My DFS and BFS java solution",
            "discussion_vote": "155",
            "discussion_views": "50.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/discuss/34981/My-DFS-and-BFS-java-solution"
        },
        {
            "discussion_title": "Is there any better idea than doing regular level order traversal and reverse the result?",
            "discussion_vote": "96",
            "discussion_views": "37.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/discuss/34970/Is-there-any-better-idea-than-doing-regular-level-order-traversal-and-reverse-the-result"
        },
        {
            "discussion_title": "Python solutions (dfs recursively, dfs+stack, bfs+queue).",
            "discussion_vote": "62",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/discuss/34978/Python-solutions-(dfs-recursively-dfs%2Bstack-bfs%2Bqueue)."
        },
        {
            "discussion_title": "Java Solution. Using Queue",
            "discussion_vote": "45",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/discuss/35089/Java-Solution.-Using-Queue"
        },
        {
            "discussion_title": "My Neat Solution in C++",
            "discussion_vote": "30",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/discuss/34976/My-Neat-Solution-in-C%2B%2B"
        }
    ],
    "108": [
        {
            "discussion_title": "My Accepted Java Solution",
            "discussion_vote": "172",
            "discussion_views": "51.6K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/discuss/35220/My-Accepted-Java-Solution"
        },
        {
            "discussion_title": "Java Iterative Solution",
            "discussion_vote": "58",
            "discussion_views": "18.3K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/discuss/35218/Java-Iterative-Solution"
        },
        {
            "discussion_title": "An easy Python solution",
            "discussion_vote": "49",
            "discussion_views": "13.6K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/discuss/35223/An-easy-Python-solution"
        },
        {
            "discussion_title": "Accepted C++ recursive solution within a single method",
            "discussion_vote": "39",
            "discussion_views": "16.3K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/discuss/35246/Accepted-C%2B%2B-recursive-solution-within-a-single-method"
        },
        {
            "discussion_title": "Python optimal solution",
            "discussion_vote": "27",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/discuss/35224/Python-optimal-solution"
        }
    ],
    "109": [
        {
            "discussion_title": "Share my JAVA solution, 1ms, very short and concise.",
            "discussion_vote": "258",
            "discussion_views": "44.7K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/discuss/35476/Share-my-JAVA-solution-1ms-very-short-and-concise."
        },
        {
            "discussion_title": "Share my O(1) space and O(n) time Java code",
            "discussion_vote": "172",
            "discussion_views": "36.0K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/discuss/35472/Share-my-O(1)-space-and-O(n)-time-Java-code"
        },
        {
            "discussion_title": "Share my code with O(n) time and O(1) space",
            "discussion_vote": "84",
            "discussion_views": "24.3K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/discuss/35525/Share-my-code-with-O(n)-time-and-O(1)-space"
        },
        {
            "discussion_title": "My Accepted C++ solution",
            "discussion_vote": "70",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/discuss/35483/My-Accepted-C%2B%2B-solution"
        },
        {
            "discussion_title": "Recursive BST construction using slow-fast traversal on linked list",
            "discussion_vote": "47",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/discuss/35470/Recursive-BST-construction-using-slow-fast-traversal-on-linked-list"
        }
    ],
    "110": [
        {
            "discussion_title": "The bottom up O(N) solution would be better",
            "discussion_vote": "412",
            "discussion_views": "74.2K",
            "discussion_link": "https://leetcode.com/problems/balanced-binary-tree/discuss/35691/The-bottom-up-O(N)-solution-would-be-better"
        },
        {
            "discussion_title": "Java solution based on height, check left and right node in every recursion to avoid further useless search",
            "discussion_vote": "93",
            "discussion_views": "30.2K",
            "discussion_link": "https://leetcode.com/problems/balanced-binary-tree/discuss/35686/Java-solution-based-on-height-check-left-and-right-node-in-every-recursion-to-avoid-further-useless-search"
        },
        {
            "discussion_title": "VERY SIMPLE Python solutions (iterative and recursive), both beat 90%",
            "discussion_vote": "59",
            "discussion_views": "13.1K",
            "discussion_link": "https://leetcode.com/problems/balanced-binary-tree/discuss/35708/VERY-SIMPLE-Python-solutions-(iterative-and-recursive)-both-beat-90"
        },
        {
            "discussion_title": "Two different definitions of balanced binary tree result in two different judgments",
            "discussion_vote": "55",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/balanced-binary-tree/discuss/36042/Two-different-definitions-of-balanced-binary-tree-result-in-two-different-judgments"
        },
        {
            "discussion_title": "JAVA O(n) solution based on Maximum Depth of Binary Tree",
            "discussion_vote": "37",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/balanced-binary-tree/discuss/35943/JAVA-O(n)-solution-based-on-Maximum-Depth-of-Binary-Tree"
        }
    ],
    "111": [
        {
            "discussion_title": "My 4 Line java solution",
            "discussion_vote": "225",
            "discussion_views": "50.3K",
            "discussion_link": "https://leetcode.com/problems/minimum-depth-of-binary-tree/discuss/36045/My-4-Line-java-solution"
        },
        {
            "discussion_title": "My concise c++ solution",
            "discussion_vote": "77",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/minimum-depth-of-binary-tree/discuss/36153/My-concise-c%2B%2B-solution"
        },
        {
            "discussion_title": "3 lines in Every Language",
            "discussion_vote": "71",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-depth-of-binary-tree/discuss/36060/3-lines-in-Every-Language"
        },
        {
            "discussion_title": "Why expected result for input of {1,2}  is 2? Shouldn't it be 1?",
            "discussion_vote": "69",
            "discussion_views": "12.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-depth-of-binary-tree/discuss/36055/Why-expected-result-for-input-of-12-is-2-Shouldn't-it-be-1"
        },
        {
            "discussion_title": "BFS, C++, 8ms, Beats 99.94% submissions",
            "discussion_vote": "49",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/minimum-depth-of-binary-tree/discuss/36071/BFS-C%2B%2B-8ms-Beats-99.94-submissions"
        }
    ],
    "112": [
        {
            "discussion_title": "[Accepted]My recursive solution in Java",
            "discussion_vote": "223",
            "discussion_views": "41.2K",
            "discussion_link": "https://leetcode.com/problems/path-sum/discuss/36378/AcceptedMy-recursive-solution-in-Java"
        },
        {
            "discussion_title": "3 lines of  c++ solution",
            "discussion_vote": "109",
            "discussion_views": "17.5K",
            "discussion_link": "https://leetcode.com/problems/path-sum/discuss/36367/3-lines-of-c%2B%2B-solution"
        },
        {
            "discussion_title": "Short Python recursive solution - O(n)",
            "discussion_vote": "84",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/path-sum/discuss/36360/Short-Python-recursive-solution-O(n)"
        },
        {
            "discussion_title": "[Accepted] By using postorder traversal",
            "discussion_vote": "51",
            "discussion_views": "13.3K",
            "discussion_link": "https://leetcode.com/problems/path-sum/discuss/36382/Accepted-By-using-postorder-traversal"
        },
        {
            "discussion_title": "My java no-recursive method",
            "discussion_vote": "28",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/path-sum/discuss/36534/My-java-no-recursive-method"
        }
    ],
    "113": [
        {
            "discussion_title": "DFS with one LinkedList , accepted java solution",
            "discussion_vote": "79",
            "discussion_views": "39.0K",
            "discussion_link": "https://leetcode.com/problems/path-sum-ii/discuss/36683/DFS-with-one-LinkedList-accepted-java-solution"
        },
        {
            "discussion_title": "12ms 11-lines C++ Solution",
            "discussion_vote": "64",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/path-sum-ii/discuss/36685/12ms-11-lines-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Python solutions (Recursively, BFS+queue, DFS+stack)",
            "discussion_vote": "35",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/path-sum-ii/discuss/36829/Python-solutions-(Recursively-BFS%2Bqueue-DFS%2Bstack)"
        },
        {
            "discussion_title": "Simple DFS Java Solution",
            "discussion_vote": "30",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/path-sum-ii/discuss/36673/Simple-DFS-Java-Solution"
        },
        {
            "discussion_title": "Java Solution: iterative and recursive",
            "discussion_vote": "25",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/path-sum-ii/discuss/36695/Java-Solution%3A-iterative-and-recursive"
        }
    ],
    "114": [
        {
            "discussion_title": "My short post order traversal Java solution for share",
            "discussion_vote": "685",
            "discussion_views": "66.2K",
            "discussion_link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/discuss/36977/My-short-post-order-traversal-Java-solution-for-share"
        },
        {
            "discussion_title": "Share my simple NON-recursive solution, O(1) space complexity!",
            "discussion_vote": "241",
            "discussion_views": "38.6K",
            "discussion_link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/discuss/37010/Share-my-simple-NON-recursive-solution-O(1)-space-complexity!"
        },
        {
            "discussion_title": "Straightforward Java Solution",
            "discussion_vote": "146",
            "discussion_views": "27.8K",
            "discussion_link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/discuss/36987/Straightforward-Java-Solution"
        },
        {
            "discussion_title": "Accepted simple Java solution , iterative",
            "discussion_vote": "86",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/discuss/36991/Accepted-simple-Java-solution-iterative"
        },
        {
            "discussion_title": "8ms, Non-recursive, No stack, C++ solution",
            "discussion_vote": "57",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/discuss/37000/8ms-Non-recursive-No-stack-C%2B%2B-solution"
        }
    ],
    "115": [
        {
            "discussion_title": "Easy to understand DP in Java",
            "discussion_vote": "290",
            "discussion_views": "34.3K",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences/discuss/37327/Easy-to-understand-DP-in-Java"
        },
        {
            "discussion_title": "Any better solution that takes less than O(n^2) space while in O(n^2) time?",
            "discussion_vote": "95",
            "discussion_views": "17.6K",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences/discuss/37412/Any-better-solution-that-takes-less-than-O(n2)-space-while-in-O(n2)-time"
        },
        {
            "discussion_title": "Task clarification",
            "discussion_vote": "75",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences/discuss/37354/Task-clarification"
        },
        {
            "discussion_title": "7-10 lines C++ Solutions with Detailed Explanations (O(m*n) time and O(m) space)",
            "discussion_vote": "68",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences/discuss/37316/7-10-lines-C%2B%2B-Solutions-with-Detailed-Explanations-(O(m*n)-time-and-O(m)-space)"
        },
        {
            "discussion_title": "The question should be reworded.",
            "discussion_vote": "65",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences/discuss/37332/The-question-should-be-reworded."
        }
    ],
    "116": [
        {
            "discussion_title": "A simple accepted solution",
            "discussion_vote": "435",
            "discussion_views": "57.0K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/discuss/37472/A-simple-accepted-solution"
        },
        {
            "discussion_title": "Java solution with O(1) memory+ O(n) time",
            "discussion_vote": "144",
            "discussion_views": "27.2K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/discuss/37461/Java-solution-with-O(1)-memory%2B-O(n)-time"
        },
        {
            "discussion_title": "My recursive solution(Java)",
            "discussion_vote": "98",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/discuss/37473/My-recursive-solution(Java)"
        },
        {
            "discussion_title": "My simple non-iterative C++ code with O(1) memory",
            "discussion_vote": "68",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/discuss/37578/My-simple-non-iterative-C%2B%2B-code-with-O(1)-memory"
        },
        {
            "discussion_title": "7 lines, iterative, real O(1) space",
            "discussion_vote": "64",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/discuss/37484/7-lines-iterative-real-O(1)-space"
        }
    ],
    "117": [
        {
            "discussion_title": "O(1) space O(n) complexity Iterative Solution",
            "discussion_vote": "341",
            "discussion_views": "58.1K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/37828/O(1)-space-O(n)-complexity-Iterative-Solution"
        },
        {
            "discussion_title": "Simple solution using constant space",
            "discussion_vote": "233",
            "discussion_views": "27.8K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/37811/Simple-solution-using-constant-space"
        },
        {
            "discussion_title": "Java solution with constant space",
            "discussion_vote": "156",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/37813/Java-solution-with-constant-space"
        },
        {
            "discussion_title": "AC Python O(1) space solution 12 lines and easy to understand",
            "discussion_vote": "58",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/37824/AC-Python-O(1)-space-solution-12-lines-and-easy-to-understand"
        },
        {
            "discussion_title": "Simple 40ms c++ o(n) ,o(1) solution with only one while loop",
            "discussion_vote": "52",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/38015/Simple-40ms-c%2B%2B-o(n)-o(1)-solution-with-only-one-while-loop"
        }
    ],
    "118": [
        {
            "discussion_title": "My concise solution in Java",
            "discussion_vote": "171",
            "discussion_views": "42.8K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle/discuss/38141/My-concise-solution-in-Java"
        },
        {
            "discussion_title": "Python 4 lines short solution using map.",
            "discussion_vote": "124",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle/discuss/38128/Python-4-lines-short-solution-using-map."
        },
        {
            "discussion_title": "Solution in Java",
            "discussion_vote": "109",
            "discussion_views": "18.3K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle/discuss/38125/Solution-in-Java"
        },
        {
            "discussion_title": "Maybe shortest c++ solution",
            "discussion_vote": "78",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle/discuss/38171/Maybe-shortest-c%2B%2B-solution"
        },
        {
            "discussion_title": "Simple Python 4 lines",
            "discussion_vote": "26",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle/discuss/38277/Simple-Python-4-lines"
        }
    ],
    "119": [
        {
            "discussion_title": "Here is my brief O(k) solution",
            "discussion_vote": "157",
            "discussion_views": "39.7K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle-ii/discuss/38420/Here-is-my-brief-O(k)-solution"
        },
        {
            "discussion_title": "Very simple Python solution",
            "discussion_vote": "71",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle-ii/discuss/38467/Very-simple-Python-solution"
        },
        {
            "discussion_title": "My accepted java solution, any better code?",
            "discussion_vote": "71",
            "discussion_views": "26.3K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle-ii/discuss/38478/My-accepted-java-solution-any-better-code"
        },
        {
            "discussion_title": "My 8 lines java solution use ArrayList",
            "discussion_vote": "44",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle-ii/discuss/38437/My-8-lines-java-solution-use-ArrayList"
        },
        {
            "discussion_title": "Sharing my c++ code, very simple",
            "discussion_vote": "36",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/pascals-triangle-ii/discuss/38454/Sharing-my-c%2B%2B-code-very-simple"
        }
    ],
    "120": [
        {
            "discussion_title": "DP Solution for Triangle",
            "discussion_vote": "476",
            "discussion_views": "59.5K",
            "discussion_link": "https://leetcode.com/problems/triangle/discuss/38730/DP-Solution-for-Triangle"
        },
        {
            "discussion_title": "7 lines neat Java Solution",
            "discussion_vote": "112",
            "discussion_views": "18.4K",
            "discussion_link": "https://leetcode.com/problems/triangle/discuss/38724/7-lines-neat-Java-Solution"
        },
        {
            "discussion_title": "My 8 line DP Java code(4 meaningful lines) with O(1) space",
            "discussion_vote": "68",
            "discussion_views": "14.8K",
            "discussion_link": "https://leetcode.com/problems/triangle/discuss/38732/My-8-line-DP-Java-code(4-meaningful-lines)-with-O(1)-space"
        },
        {
            "discussion_title": "Python easy to understand solutions (top-down, bottom-up).",
            "discussion_vote": "36",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up)."
        },
        {
            "discussion_title": "Bottom Up 5 line C++ Solution",
            "discussion_vote": "35",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/triangle/discuss/38737/Bottom-Up-5-line-C%2B%2B-Solution"
        }
    ],
    "121": [
        {
            "discussion_title": "Kadane's Algorithm - Since no one has mentioned about this so far :) (In case if interviewer twists the input)",
            "discussion_vote": "527",
            "discussion_views": "78.1K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/discuss/39038/Kadane's-Algorithm-Since-no-one-has-mentioned-about-this-so-far-%3A)-(In-case-if-interviewer-twists-the-input)"
        },
        {
            "discussion_title": "Sharing my simple and clear C++ solution",
            "discussion_vote": "252",
            "discussion_views": "36.6K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/discuss/39039/Sharing-my-simple-and-clear-C%2B%2B-solution"
        },
        {
            "discussion_title": "Please explain the problem more clearly!!!",
            "discussion_vote": "122",
            "discussion_views": "16.0K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/discuss/39036/Please-explain-the-problem-more-clearly!!!"
        },
        {
            "discussion_title": "My jave accepted solution with O(N) time and O(1) space",
            "discussion_vote": "76",
            "discussion_views": "23.6K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/discuss/39062/My-jave-accepted-solution-with-O(N)-time-and-O(1)-space"
        },
        {
            "discussion_title": "Easy O(n) Python solution",
            "discussion_vote": "70",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/discuss/39049/Easy-O(n)-Python-solution"
        }
    ],
    "122": [
        {
            "discussion_title": "Is this question a joke?",
            "discussion_vote": "382",
            "discussion_views": "98.4K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/discuss/39402/Is-this-question-a-joke"
        },
        {
            "discussion_title": "Three lines in C++, with explanation",
            "discussion_vote": "86",
            "discussion_views": "23.0K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/discuss/39420/Three-lines-in-C%2B%2B-with-explanation"
        },
        {
            "discussion_title": "Java O(n) solution if we're not greedy",
            "discussion_vote": "65",
            "discussion_views": "20.3K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/discuss/39531/Java-O(n)-solution-if-we're-not-greedy"
        },
        {
            "discussion_title": "Clear 1-line Python Solution",
            "discussion_vote": "46",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/discuss/39406/Clear-1-line-Python-Solution"
        },
        {
            "discussion_title": "Shortest and fastest solution with explanation. You can never beat this.",
            "discussion_vote": "25",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/discuss/39404/Shortest-and-fastest-solution-with-explanation.-You-can-never-beat-this."
        }
    ],
    "123": [
        {
            "discussion_title": "Is it Best Solution with O(n), O(1).",
            "discussion_vote": "371",
            "discussion_views": "83.4K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/discuss/39611/Is-it-Best-Solution-with-O(n)-O(1)."
        },
        {
            "discussion_title": "A clean DP solution which generalizes to k transactions",
            "discussion_vote": "326",
            "discussion_views": "62.4K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/discuss/39608/A-clean-DP-solution-which-generalizes-to-k-transactions"
        },
        {
            "discussion_title": "Detail explanation of DP solution",
            "discussion_vote": "185",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/discuss/135704/Detail-explanation-of-DP-solution"
        },
        {
            "discussion_title": "My explanation for O(N) solution!",
            "discussion_vote": "154",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/discuss/39615/My-explanation-for-O(N)-solution!"
        },
        {
            "discussion_title": "My C++ solution (O(N) time, O(1) space, 8ms)",
            "discussion_vote": "103",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/discuss/39613/My-C%2B%2B-solution-(O(N)-time-O(1)-space-8ms)"
        }
    ],
    "124": [
        {
            "discussion_title": "Accepted short solution in Java",
            "discussion_vote": "342",
            "discussion_views": "62.8K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/discuss/39775/Accepted-short-solution-in-Java"
        },
        {
            "discussion_title": "Simple O(n) algorithm with one traversal through the tree",
            "discussion_vote": "96",
            "discussion_views": "28.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/discuss/39869/Simple-O(n)-algorithm-with-one-traversal-through-the-tree"
        },
        {
            "discussion_title": "Elegant Java solution",
            "discussion_vote": "86",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/discuss/39875/Elegant-Java-solution"
        },
        {
            "discussion_title": "A very concise recursive solution",
            "discussion_vote": "31",
            "discussion_views": "10.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/discuss/39807/A-very-concise-recursive-solution"
        },
        {
            "discussion_title": "What is the meaning of path in this problem?",
            "discussion_vote": "31",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/discuss/39811/What-is-the-meaning-of-path-in-this-problem"
        }
    ],
    "125": [
        {
            "discussion_title": "Accepted pretty Java solution(271ms)",
            "discussion_vote": "103",
            "discussion_views": "52.7K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome/discuss/40029/Accepted-pretty-Java-solution(271ms)"
        },
        {
            "discussion_title": "My three line java solution",
            "discussion_vote": "85",
            "discussion_views": "22.9K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome/discuss/39981/My-three-line-java-solution"
        },
        {
            "discussion_title": "Here's a clean C++ solution",
            "discussion_vote": "76",
            "discussion_views": "20.2K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome/discuss/40048/Here's-a-clean-C%2B%2B-solution"
        },
        {
            "discussion_title": "Python in-place two-pointer solution.",
            "discussion_vote": "59",
            "discussion_views": "15.3K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome/discuss/39982/Python-in-place-two-pointer-solution."
        },
        {
            "discussion_title": "Passed clean c++ code",
            "discussion_vote": "35",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome/discuss/40261/Passed-clean-c%2B%2B-code"
        }
    ],
    "126": [
        {
            "discussion_title": "My concise JAVA solution based on BFS and DFS",
            "discussion_vote": "129",
            "discussion_views": "42.5K",
            "discussion_link": "https://leetcode.com/problems/word-ladder-ii/discuss/40475/My-concise-JAVA-solution-based-on-BFS-and-DFS"
        },
        {
            "discussion_title": "Share two similar Java solution that Accpted by OJ.",
            "discussion_vote": "100",
            "discussion_views": "53.9K",
            "discussion_link": "https://leetcode.com/problems/word-ladder-ii/discuss/40447/Share-two-similar-Java-solution-that-Accpted-by-OJ."
        },
        {
            "discussion_title": "C++ solution using standard BFS method, no DFS or backtracking",
            "discussion_vote": "71",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/word-ladder-ii/discuss/40434/C%2B%2B-solution-using-standard-BFS-method-no-DFS-or-backtracking"
        },
        {
            "discussion_title": "Super fast Java solution (two-end BFS)",
            "discussion_vote": "56",
            "discussion_views": "21.6K",
            "discussion_link": "https://leetcode.com/problems/word-ladder-ii/discuss/40477/Super-fast-Java-solution-(two-end-BFS)"
        },
        {
            "discussion_title": "Use defaultdict for traceback and easy writing, 20 lines python code",
            "discussion_vote": "47",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/word-ladder-ii/discuss/40458/Use-defaultdict-for-traceback-and-easy-writing-20-lines-python-code"
        }
    ],
    "127": [
        {
            "discussion_title": "Easy 76ms C++ Solution using BFS",
            "discussion_vote": "160",
            "discussion_views": "69.0K",
            "discussion_link": "https://leetcode.com/problems/word-ladder/discuss/40707/Easy-76ms-C%2B%2B-Solution-using-BFS"
        },
        {
            "discussion_title": "Two-end BFS in Java 31ms.",
            "discussion_vote": "143",
            "discussion_views": "79.6K",
            "discussion_link": "https://leetcode.com/problems/word-ladder/discuss/40711/Two-end-BFS-in-Java-31ms."
        },
        {
            "discussion_title": "Java Solution using BFS, with explanation",
            "discussion_vote": "78",
            "discussion_views": "45.8K",
            "discussion_link": "https://leetcode.com/problems/word-ladder/discuss/40704/Java-Solution-using-BFS-with-explanation"
        },
        {
            "discussion_title": "Share my two Python solutions: a very concise one (12 lines, ~160ms) and an optimized solution(~100ms)",
            "discussion_vote": "70",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/word-ladder/discuss/40710/Share-my-two-Python-solutions%3A-a-very-concise-one-(12-lines-~160ms)-and-an-optimized-solution(~100ms)"
        },
        {
            "discussion_title": "Another accepted Java solution (BFS)",
            "discussion_vote": "70",
            "discussion_views": "33.8K",
            "discussion_link": "https://leetcode.com/problems/word-ladder/discuss/40717/Another-accepted-Java-solution-(BFS)"
        }
    ],
    "128": [
        {
            "discussion_title": "My really simple Java O(n) solution - Accepted",
            "discussion_vote": "566",
            "discussion_views": "74.1K",
            "discussion_link": "https://leetcode.com/problems/longest-consecutive-sequence/discuss/41055/My-really-simple-Java-O(n)-solution-Accepted"
        },
        {
            "discussion_title": "Simple O(n) with Explanation - Just walk each streak",
            "discussion_vote": "436",
            "discussion_views": "46.7K",
            "discussion_link": "https://leetcode.com/problems/longest-consecutive-sequence/discuss/41057/Simple-O(n)-with-Explanation-Just-walk-each-streak"
        },
        {
            "discussion_title": "Possibly shortest cpp solution, only 6 lines.",
            "discussion_vote": "124",
            "discussion_views": "18.2K",
            "discussion_link": "https://leetcode.com/problems/longest-consecutive-sequence/discuss/41088/Possibly-shortest-cpp-solution-only-6-lines."
        },
        {
            "discussion_title": "Simple fast Java solution using Set",
            "discussion_vote": "84",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/longest-consecutive-sequence/discuss/41067/Simple-fast-Java-solution-using-Set"
        },
        {
            "discussion_title": "A simple C++,solution using unordered_set.And simple consideration about this problem",
            "discussion_vote": "67",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/longest-consecutive-sequence/discuss/41060/A-simple-C%2B%2Bsolution-using-unordered_set.And-simple-consideration-about-this-problem"
        }
    ],
    "129": [
        {
            "discussion_title": "Short Java solution. Recursion.",
            "discussion_vote": "182",
            "discussion_views": "24.5K",
            "discussion_link": "https://leetcode.com/problems/sum-root-to-leaf-numbers/discuss/41363/Short-Java-solution.-Recursion."
        },
        {
            "discussion_title": "Can you improve this algorithm?",
            "discussion_vote": "56",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/sum-root-to-leaf-numbers/discuss/41400/Can-you-improve-this-algorithm"
        },
        {
            "discussion_title": "Python solutions (dfs+stack, bfs+queue, dfs recursively).",
            "discussion_vote": "31",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/sum-root-to-leaf-numbers/discuss/41383/Python-solutions-(dfs%2Bstack-bfs%2Bqueue-dfs-recursively)."
        },
        {
            "discussion_title": "Clean Java DFS solution (preorder traversal)",
            "discussion_vote": "26",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/sum-root-to-leaf-numbers/discuss/41531/Clean-Java-DFS-solution-(preorder-traversal)"
        },
        {
            "discussion_title": "One of the easier solution using preorder traversal (recursion)",
            "discussion_vote": "26",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/sum-root-to-leaf-numbers/discuss/41603/One-of-the-easier-solution-using-preorder-traversal-(recursion)"
        }
    ],
    "130": [
        {
            "discussion_title": "A really simple and readable C++ solution\\uff0conly cost 12ms",
            "discussion_vote": "207",
            "discussion_views": "45.5K",
            "discussion_link": "https://leetcode.com/problems/surrounded-regions/discuss/41612/A-really-simple-and-readable-C%2B%2B-solutionuff0conly-cost-12ms"
        },
        {
            "discussion_title": "Solve it using Union Find",
            "discussion_vote": "110",
            "discussion_views": "30.2K",
            "discussion_link": "https://leetcode.com/problems/surrounded-regions/discuss/41617/Solve-it-using-Union-Find"
        },
        {
            "discussion_title": "9 lines, Python 148 ms",
            "discussion_vote": "105",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/surrounded-regions/discuss/41630/9-lines-Python-148-ms"
        },
        {
            "discussion_title": "Java DFS + boundary cell turning solution, simple and clean code, commented.",
            "discussion_vote": "76",
            "discussion_views": "25.4K",
            "discussion_link": "https://leetcode.com/problems/surrounded-regions/discuss/41633/Java-DFS-%2B-boundary-cell-turning-solution-simple-and-clean-code-commented."
        },
        {
            "discussion_title": "My BFS solution (C++ 28ms)",
            "discussion_vote": "70",
            "discussion_views": "24.7K",
            "discussion_link": "https://leetcode.com/problems/surrounded-regions/discuss/41649/My-BFS-solution-(C%2B%2B-28ms)"
        }
    ],
    "131": [
        {
            "discussion_title": "Java: Backtracking solution.",
            "discussion_vote": "176",
            "discussion_views": "44.9K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning/discuss/41963/Java%3A-Backtracking-solution."
        },
        {
            "discussion_title": "My Java DP only solution without recursion. O(n^2)",
            "discussion_vote": "86",
            "discussion_views": "29.4K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning/discuss/41974/My-Java-DP-only-solution-without-recursion.-O(n2)"
        },
        {
            "discussion_title": "Clean C++ backtracking solution",
            "discussion_vote": "76",
            "discussion_views": "14.7K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning/discuss/41964/Clean-C%2B%2B-backtracking-solution"
        },
        {
            "discussion_title": "Java DP + DFS solution",
            "discussion_vote": "73",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning/discuss/41982/Java-DP-%2B-DFS-solution"
        },
        {
            "discussion_title": "Python recursive/iterative backtracking solution",
            "discussion_vote": "48",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning/discuss/41973/Python-recursiveiterative-backtracking-solution"
        }
    ],
    "132": [
        {
            "discussion_title": "My solution does not need a table for palindrome, is it right ? It uses only O(n) space.",
            "discussion_vote": "604",
            "discussion_views": "48.2K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning-ii/discuss/42198/My-solution-does-not-need-a-table-for-palindrome-is-it-right-It-uses-only-O(n)-space."
        },
        {
            "discussion_title": "Easiest Java DP Solution (97.36%)",
            "discussion_vote": "145",
            "discussion_views": "17.0K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning-ii/discuss/42213/Easiest-Java-DP-Solution-(97.36)"
        },
        {
            "discussion_title": "My DP Solution ( explanation and code)",
            "discussion_vote": "112",
            "discussion_views": "27.0K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning-ii/discuss/42199/My-DP-Solution-(-explanation-and-code)"
        },
        {
            "discussion_title": "Two C++ versions given (one DP 28ms, one Manancher-like algorithm 10 ms)",
            "discussion_vote": "65",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning-ii/discuss/42212/Two-C%2B%2B-versions-given-(one-DP-28ms-one-Manancher-like-algorithm-10-ms)"
        },
        {
            "discussion_title": "DP solution & some thoughts",
            "discussion_vote": "23",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/palindrome-partitioning-ii/discuss/42277/DP-solution-and-some-thoughts"
        }
    ],
    "133": [
        {
            "discussion_title": "Depth First Simple Java Solution",
            "discussion_vote": "160",
            "discussion_views": "50.5K",
            "discussion_link": "https://leetcode.com/problems/clone-graph/discuss/42309/Depth-First-Simple-Java-Solution"
        },
        {
            "discussion_title": "7-17 lines C++ BFS/DFS Solutions",
            "discussion_vote": "86",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/clone-graph/discuss/42313/7-17-lines-C%2B%2B-BFSDFS-Solutions"
        },
        {
            "discussion_title": "Simple Java iterative BFS solution with HashMap and queue",
            "discussion_vote": "81",
            "discussion_views": "24.9K",
            "discussion_link": "https://leetcode.com/problems/clone-graph/discuss/42319/Simple-Java-iterative-BFS-solution-with-HashMap-and-queue"
        },
        {
            "discussion_title": "9 line c++ DFS Solution",
            "discussion_vote": "54",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/clone-graph/discuss/42362/9-line-c%2B%2B-DFS-Solution"
        },
        {
            "discussion_title": "Java BFS solution",
            "discussion_vote": "47",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/clone-graph/discuss/42482/Java-BFS-solution"
        }
    ],
    "134": [
        {
            "discussion_title": "Share some of my ideas.",
            "discussion_vote": "331",
            "discussion_views": "50.0K",
            "discussion_link": "https://leetcode.com/problems/gas-station/discuss/42568/Share-some-of-my-ideas."
        },
        {
            "discussion_title": "My AC is O(1) space O(n) running time solution. Does anybody have posted this solution?",
            "discussion_vote": "160",
            "discussion_views": "26.0K",
            "discussion_link": "https://leetcode.com/problems/gas-station/discuss/42565/My-AC-is-O(1)-space-O(n)-running-time-solution.-Does-anybody-have-posted-this-solution"
        },
        {
            "discussion_title": "Proof of \"if total gas is greater than total cost, there is a solution\". C++",
            "discussion_vote": "86",
            "discussion_views": "12.2K",
            "discussion_link": "https://leetcode.com/problems/gas-station/discuss/42572/Proof-of-%22if-total-gas-is-greater-than-total-cost-there-is-a-solution%22.-C%2B%2B"
        },
        {
            "discussion_title": "My one pass solution.",
            "discussion_vote": "51",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/gas-station/discuss/42648/My-one-pass-solution."
        },
        {
            "discussion_title": "Fully-commented O(n) C++ solution enabled by a single observation of mine",
            "discussion_vote": "48",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/gas-station/discuss/42594/Fully-commented-O(n)-C%2B%2B-solution-enabled-by-a-single-observation-of-mine"
        }
    ],
    "135": [
        {
            "discussion_title": "A simple solution",
            "discussion_vote": "251",
            "discussion_views": "32.6K",
            "discussion_link": "https://leetcode.com/problems/candy/discuss/42769/A-simple-solution"
        },
        {
            "discussion_title": "One-pass constant space Java solution",
            "discussion_vote": "93",
            "discussion_views": "13.5K",
            "discussion_link": "https://leetcode.com/problems/candy/discuss/42770/One-pass-constant-space-Java-solution"
        },
        {
            "discussion_title": "Simple O(n) Java solution with comments",
            "discussion_vote": "79",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/candy/discuss/42794/Simple-O(n)-Java-solution-with-comments"
        },
        {
            "discussion_title": "Very Simple Java Solution with detail explanation",
            "discussion_vote": "48",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/candy/discuss/42774/Very-Simple-Java-Solution-with-detail-explanation"
        },
        {
            "discussion_title": "Two C++ solutions given with explanation (both with O(N) time, one with O(1) space, the other with O(N) space)",
            "discussion_vote": "29",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/candy/discuss/42795/Two-C%2B%2B-solutions-given-with-explanation-(both-with-O(N)-time-one-with-O(1)-space-the-other-with-O(N)-space)"
        }
    ],
    "136": [
        {
            "discussion_title": "My O(n) solution using XOR",
            "discussion_vote": "652",
            "discussion_views": "86.6K",
            "discussion_link": "https://leetcode.com/problems/single-number/discuss/42997/My-O(n)-solution-using-XOR"
        },
        {
            "discussion_title": "Easiest way to solve by using bit manipulation.",
            "discussion_vote": "183",
            "discussion_views": "26.7K",
            "discussion_link": "https://leetcode.com/problems/single-number/discuss/43228/Easiest-way-to-solve-by-using-bit-manipulation."
        },
        {
            "discussion_title": "Easy Java solution (tell you why using bitwise XOR)",
            "discussion_vote": "163",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/single-number/discuss/43201/Easy-Java-solution-(tell-you-why-using-bitwise-XOR)"
        },
        {
            "discussion_title": "Python different solutions.",
            "discussion_vote": "126",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/single-number/discuss/43000/Python-different-solutions."
        },
        {
            "discussion_title": "My very simple solution (linear time, no extra memory)",
            "discussion_vote": "69",
            "discussion_views": "22.6K",
            "discussion_link": "https://leetcode.com/problems/single-number/discuss/43216/My-very-simple-solution-(linear-time-no-extra-memory)"
        }
    ],
    "137": [
        {
            "discussion_title": "Challenge me , thx",
            "discussion_vote": "678",
            "discussion_views": "117.3K",
            "discussion_link": "https://leetcode.com/problems/single-number-ii/discuss/43294/Challenge-me-thx"
        },
        {
            "discussion_title": "Detailed explanation and generalization of the bitwise operation method for single numbers",
            "discussion_vote": "618",
            "discussion_views": "55.5K",
            "discussion_link": "https://leetcode.com/problems/single-number-ii/discuss/43295/Detailed-explanation-and-generalization-of-the-bitwise-operation-method-for-single-numbers"
        },
        {
            "discussion_title": "An General Way to Handle All this sort of questions.",
            "discussion_vote": "323",
            "discussion_views": "46.3K",
            "discussion_link": "https://leetcode.com/problems/single-number-ii/discuss/43296/An-General-Way-to-Handle-All-this-sort-of-questions."
        },
        {
            "discussion_title": "Java O(n) easy to understand solution, easily extended to any times of occurance",
            "discussion_vote": "312",
            "discussion_views": "27.9K",
            "discussion_link": "https://leetcode.com/problems/single-number-ii/discuss/43297/Java-O(n)-easy-to-understand-solution-easily-extended-to-any-times-of-occurance"
        },
        {
            "discussion_title": "Accepted code with proper Explaination. Does anyone have a better idea?",
            "discussion_vote": "130",
            "discussion_views": "16.4K",
            "discussion_link": "https://leetcode.com/problems/single-number-ii/discuss/43302/Accepted-code-with-proper-Explaination.-Does-anyone-have-a-better-idea"
        }
    ],
    "138": [
        {
            "discussion_title": "A solution with constant space complexity O(1) and linear time complexity O(N)",
            "discussion_vote": "511",
            "discussion_views": "82.6K",
            "discussion_link": "https://leetcode.com/problems/copy-list-with-random-pointer/discuss/43491/A-solution-with-constant-space-complexity-O(1)-and-linear-time-complexity-O(N)"
        },
        {
            "discussion_title": "Java O(n) solution",
            "discussion_vote": "313",
            "discussion_views": "36.0K",
            "discussion_link": "https://leetcode.com/problems/copy-list-with-random-pointer/discuss/43488/Java-O(n)-solution"
        },
        {
            "discussion_title": "2 clean C++ algorithms without using extra array/hash table.  Algorithms are explained step by step.",
            "discussion_vote": "100",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/copy-list-with-random-pointer/discuss/43497/2-clean-C%2B%2B-algorithms-without-using-extra-arrayhash-table.-Algorithms-are-explained-step-by-step."
        },
        {
            "discussion_title": "Clear and short python O(2n) and O(n) solution",
            "discussion_vote": "62",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/copy-list-with-random-pointer/discuss/43485/Clear-and-short-python-O(2n)-and-O(n)-solution"
        },
        {
            "discussion_title": "My accepted Java code. O(n) but need to iterate the list 3 times",
            "discussion_vote": "48",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/copy-list-with-random-pointer/discuss/43515/My-accepted-Java-code.-O(n)-but-need-to-iterate-the-list-3-times"
        }
    ],
    "139": [
        {
            "discussion_title": "Java implementation using DP in two ways",
            "discussion_vote": "256",
            "discussion_views": "96.5K",
            "discussion_link": "https://leetcode.com/problems/word-break/discuss/43790/Java-implementation-using-DP-in-two-ways"
        },
        {
            "discussion_title": "C++ Dynamic Programming simple and fast solution (4ms) with optimization",
            "discussion_vote": "121",
            "discussion_views": "37.3K",
            "discussion_link": "https://leetcode.com/problems/word-break/discuss/43814/C%2B%2B-Dynamic-Programming-simple-and-fast-solution-(4ms)-with-optimization"
        },
        {
            "discussion_title": "A solution using BFS",
            "discussion_vote": "111",
            "discussion_views": "36.4K",
            "discussion_link": "https://leetcode.com/problems/word-break/discuss/43797/A-solution-using-BFS"
        },
        {
            "discussion_title": "Simple DP solution in Python with description",
            "discussion_vote": "84",
            "discussion_views": "20.4K",
            "discussion_link": "https://leetcode.com/problems/word-break/discuss/43808/Simple-DP-solution-in-Python-with-description"
        },
        {
            "discussion_title": "4 lines in Python",
            "discussion_vote": "75",
            "discussion_views": "17.6K",
            "discussion_link": "https://leetcode.com/problems/word-break/discuss/43788/4-lines-in-Python"
        }
    ],
    "140": [
        {
            "discussion_title": "My concise JAVA solution based on memorized DFS",
            "discussion_vote": "181",
            "discussion_views": "61.7K",
            "discussion_link": "https://leetcode.com/problems/word-break-ii/discuss/44167/My-concise-JAVA-solution-based-on-memorized-DFS"
        },
        {
            "discussion_title": "11ms C++ solution (concise)",
            "discussion_vote": "104",
            "discussion_views": "29.9K",
            "discussion_link": "https://leetcode.com/problems/word-break-ii/discuss/44178/11ms-C%2B%2B-solution-(concise)"
        },
        {
            "discussion_title": "Getting rid of TLE",
            "discussion_vote": "70",
            "discussion_views": "19.7K",
            "discussion_link": "https://leetcode.com/problems/word-break-ii/discuss/44185/Getting-rid-of-TLE"
        },
        {
            "discussion_title": "9 lines Python, 10 lines C++",
            "discussion_vote": "59",
            "discussion_views": "17.4K",
            "discussion_link": "https://leetcode.com/problems/word-break-ii/discuss/44169/9-lines-Python-10-lines-C%2B%2B"
        },
        {
            "discussion_title": "Python easy-to-understand solution",
            "discussion_vote": "43",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/word-break-ii/discuss/44311/Python-easy-to-understand-solution"
        }
    ],
    "141": [
        {
            "discussion_title": "O(1) Space Solution",
            "discussion_vote": "267",
            "discussion_views": "61.2K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle/discuss/44489/O(1)-Space-Solution"
        },
        {
            "discussion_title": "Except-ionally fast Python",
            "discussion_vote": "123",
            "discussion_views": "18.3K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle/discuss/44494/Except-ionally-fast-Python"
        },
        {
            "discussion_title": "My faster and slower runner solution",
            "discussion_vote": "47",
            "discussion_views": "18.5K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle/discuss/44604/My-faster-and-slower-runner-solution"
        },
        {
            "discussion_title": "Simple and easy understanding java solution, Time  o(n) ,Space O(1)",
            "discussion_vote": "32",
            "discussion_views": "12.2K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle/discuss/44485/Simple-and-easy-understanding-java-solution-Time-o(n)-Space-O(1)"
        },
        {
            "discussion_title": "By saying using no extra space, does it mean O(0) in space?",
            "discussion_vote": "32",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle/discuss/44502/By-saying-using-no-extra-space-does-it-mean-O(0)-in-space"
        }
    ],
    "142": [
        {
            "discussion_title": "O(n) solution by using two pointers without change anything",
            "discussion_vote": "280",
            "discussion_views": "65.5K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle-ii/discuss/44793/O(n)-solution-by-using-two-pointers-without-change-anything"
        },
        {
            "discussion_title": "Concise O(n) solution by using C++ with Detailed Alogrithm Description",
            "discussion_vote": "214",
            "discussion_views": "20.6K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle-ii/discuss/44781/Concise-O(n)-solution-by-using-C%2B%2B-with-Detailed-Alogrithm-Description"
        },
        {
            "discussion_title": "Java O(1) space solution with detailed explanation.",
            "discussion_vote": "130",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle-ii/discuss/44774/Java-O(1)-space-solution-with-detailed-explanation."
        },
        {
            "discussion_title": "Concise JAVA solution based on slow fast pointers",
            "discussion_vote": "43",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle-ii/discuss/44777/Concise-JAVA-solution-based-on-slow-fast-pointers"
        },
        {
            "discussion_title": "Share my python solution with detailed explanation",
            "discussion_vote": "38",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/linked-list-cycle-ii/discuss/44783/Share-my-python-solution-with-detailed-explanation"
        }
    ],
    "143": [
        {
            "discussion_title": "Java solution with 3 steps",
            "discussion_vote": "164",
            "discussion_views": "36.6K",
            "discussion_link": "https://leetcode.com/problems/reorder-list/discuss/44992/Java-solution-with-3-steps"
        },
        {
            "discussion_title": "A concise O(n) time, O(1) in place solution",
            "discussion_vote": "84",
            "discussion_views": "18.2K",
            "discussion_link": "https://leetcode.com/problems/reorder-list/discuss/45003/A-concise-O(n)-time-O(1)-in-place-solution"
        },
        {
            "discussion_title": "Java solution with 3 steps",
            "discussion_vote": "64",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/reorder-list/discuss/45147/Java-solution-with-3-steps"
        },
        {
            "discussion_title": "A python solution O(n) time, O(1) space",
            "discussion_vote": "44",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/reorder-list/discuss/44988/A-python-solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "My O(n) C++ Method, accepted",
            "discussion_vote": "15",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/reorder-list/discuss/44997/My-O(n)-C%2B%2B-Method-accepted"
        }
    ],
    "144": [
        {
            "discussion_title": "Accepted iterative solution in Java using stack.",
            "discussion_vote": "128",
            "discussion_views": "29.7K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-preorder-traversal/discuss/45266/Accepted-iterative-solution-in-Java-using-stack."
        },
        {
            "discussion_title": "3 Different Solutions",
            "discussion_vote": "67",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-preorder-traversal/discuss/45468/3-Different-Solutions"
        },
        {
            "discussion_title": "Accepted code. Explaination with Algo.",
            "discussion_vote": "58",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-preorder-traversal/discuss/45493/Accepted-code.-Explaination-with-Algo."
        },
        {
            "discussion_title": "Very simple iterative Python solution",
            "discussion_vote": "46",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-preorder-traversal/discuss/45273/Very-simple-iterative-Python-solution"
        },
        {
            "discussion_title": "Easy C++ solution using Stack",
            "discussion_vote": "38",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-preorder-traversal/discuss/45259/Easy-C%2B%2B-solution-using-Stack"
        }
    ],
    "145": [
        {
            "discussion_title": "Preorder, Inorder, and Postorder Iteratively Summarization",
            "discussion_vote": "469",
            "discussion_views": "44.5K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45551/Preorder-Inorder-and-Postorder-Iteratively-Summarization"
        },
        {
            "discussion_title": "My Accepted code with explaination. Does anyone have a better idea?",
            "discussion_vote": "220",
            "discussion_views": "36.1K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45559/My-Accepted-code-with-explaination.-Does-anyone-have-a-better-idea"
        },
        {
            "discussion_title": "Java simple and clean",
            "discussion_vote": "81",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45556/Java-simple-and-clean"
        },
        {
            "discussion_title": "C++ Iterative, Recursive and Morris Traversal",
            "discussion_vote": "81",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45550/C%2B%2B-Iterative-Recursive-and-Morris-Traversal"
        },
        {
            "discussion_title": "A very concise solution",
            "discussion_vote": "72",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45558/A-very-concise-solution"
        }
    ],
    "146": [
        {
            "discussion_title": "[Java] Hashtable + Double linked list (with a touch of pseudo nodes)",
            "discussion_vote": "331",
            "discussion_views": "106.1K",
            "discussion_link": "https://leetcode.com/problems/lru-cache/discuss/45911/Java-Hashtable-%2B-Double-linked-list-(with-a-touch-of-pseudo-nodes)"
        },
        {
            "discussion_title": "Python Dict + Double LinkedList",
            "discussion_vote": "154",
            "discussion_views": "20.5K",
            "discussion_link": "https://leetcode.com/problems/lru-cache/discuss/45926/Python-Dict-%2B-Double-LinkedList"
        },
        {
            "discussion_title": "Laziest implementation: Java's LinkedHashMap takes care of everything",
            "discussion_vote": "122",
            "discussion_views": "30.4K",
            "discussion_link": "https://leetcode.com/problems/lru-cache/discuss/45939/Laziest-implementation%3A-Java's-LinkedHashMap-takes-care-of-everything"
        },
        {
            "discussion_title": "C++11 code 74ms - Hash table + List",
            "discussion_vote": "112",
            "discussion_views": "38.5K",
            "discussion_link": "https://leetcode.com/problems/lru-cache/discuss/45976/C%2B%2B11-code-74ms-Hash-table-%2B-List"
        },
        {
            "discussion_title": "JAVA-----------Easy Version To Understand!!!!",
            "discussion_vote": "106",
            "discussion_views": "38.1K",
            "discussion_link": "https://leetcode.com/problems/lru-cache/discuss/45922/JAVA-Easy-Version-To-Understand!!!!"
        }
    ],
    "147": [
        {
            "discussion_title": "An easy and clear way to sort ( O(1) space )",
            "discussion_vote": "168",
            "discussion_views": "40.6K",
            "discussion_link": "https://leetcode.com/problems/insertion-sort-list/discuss/46420/An-easy-and-clear-way-to-sort-(-O(1)-space-)"
        },
        {
            "discussion_title": "Thoughts from a Google interviewer",
            "discussion_vote": "79",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/insertion-sort-list/discuss/46429/Thoughts-from-a-Google-interviewer"
        },
        {
            "discussion_title": "Explained C++ solution (24ms)",
            "discussion_vote": "58",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/insertion-sort-list/discuss/46423/Explained-C%2B%2B-solution-(24ms)"
        },
        {
            "discussion_title": "Accepted Solution using JAVA",
            "discussion_vote": "38",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/insertion-sort-list/discuss/46459/Accepted-Solution-using-JAVA"
        },
        {
            "discussion_title": "Clean Java solution using a fake head",
            "discussion_vote": "24",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/insertion-sort-list/discuss/46573/Clean-Java-solution-using-a-fake-head"
        }
    ],
    "148": [
        {
            "discussion_title": "Java merge sort solution",
            "discussion_vote": "263",
            "discussion_views": "62.4K",
            "discussion_link": "https://leetcode.com/problems/sort-list/discuss/46714/Java-merge-sort-solution"
        },
        {
            "discussion_title": "Bottom-to-up(not recurring)  with o(1) space complextity and o(nlgn) time complextity",
            "discussion_vote": "173",
            "discussion_views": "23.8K",
            "discussion_link": "https://leetcode.com/problems/sort-list/discuss/46712/Bottom-to-up(not-recurring)-with-o(1)-space-complextity-and-o(nlgn)-time-complextity"
        },
        {
            "discussion_title": "I have a pretty good MergeSort method. Can anyone speed up the run time or reduce the memory usage?",
            "discussion_vote": "96",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/sort-list/discuss/46772/I-have-a-pretty-good-MergeSort-method.-Can-anyone-speed-up-the-run-time-or-reduce-the-memory-usage"
        },
        {
            "discussion_title": "Basically, it seems like merge sort problem(Really easy understand)",
            "discussion_vote": "62",
            "discussion_views": "16.7K",
            "discussion_link": "https://leetcode.com/problems/sort-list/discuss/46716/Basically-it-seems-like-merge-sort-problem(Really-easy-understand)"
        },
        {
            "discussion_title": "Clean python code",
            "discussion_vote": "59",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/sort-list/discuss/46710/Clean-python-code"
        }
    ],
    "149": [
        {
            "discussion_title": "A java solution with notes",
            "discussion_vote": "172",
            "discussion_views": "69.0K",
            "discussion_link": "https://leetcode.com/problems/max-points-on-a-line/discuss/47113/A-java-solution-with-notes"
        },
        {
            "discussion_title": "Sharing my simple solution with explanation",
            "discussion_vote": "121",
            "discussion_views": "31.0K",
            "discussion_link": "https://leetcode.com/problems/max-points-on-a-line/discuss/47117/Sharing-my-simple-solution-with-explanation"
        },
        {
            "discussion_title": "Accepted Java solution, easy to understand.",
            "discussion_vote": "80",
            "discussion_views": "27.7K",
            "discussion_link": "https://leetcode.com/problems/max-points-on-a-line/discuss/47098/Accepted-Java-solution-easy-to-understand."
        },
        {
            "discussion_title": "C++ O(n^2) solution for your reference",
            "discussion_vote": "68",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/max-points-on-a-line/discuss/47106/C%2B%2B-O(n2)-solution-for-your-reference"
        },
        {
            "discussion_title": "16ms/28ms C++ Solutions with Explanations",
            "discussion_vote": "42",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/max-points-on-a-line/discuss/47124/16ms28ms-C%2B%2B-Solutions-with-Explanations"
        }
    ],
    "150": [
        {
            "discussion_title": "6/\\uff08-132\\uff09= 0 or -1",
            "discussion_vote": "80",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/discuss/47429/6uff08-132uff09-0-or-1"
        },
        {
            "discussion_title": "[Java] Accepted Code: Stack implementation.",
            "discussion_vote": "68",
            "discussion_views": "24.3K",
            "discussion_link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/discuss/47430/Java-Accepted-Code%3A-Stack-implementation."
        },
        {
            "discussion_title": "Accepted clean Java solution",
            "discussion_vote": "41",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/discuss/47446/Accepted-clean-Java-solution"
        },
        {
            "discussion_title": "Fancy C++ lambda expression solution",
            "discussion_vote": "38",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/discuss/47514/Fancy-C%2B%2B-lambda-expression-solution"
        },
        {
            "discussion_title": "Python solution with comments (don't use eval() function).",
            "discussion_vote": "30",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/evaluate-reverse-polish-notation/discuss/47444/Python-solution-with-comments-(don't-use-eval()-function)."
        }
    ],
    "151": [
        {
            "discussion_title": "Clean Java two-pointers solution (no trim( ), no split( ), no StringBuilder)",
            "discussion_vote": "175",
            "discussion_views": "40.4K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string/discuss/47720/Clean-Java-two-pointers-solution-(no-trim(-)-no-split(-)-no-StringBuilder)"
        },
        {
            "discussion_title": "In place simple solution",
            "discussion_vote": "118",
            "discussion_views": "54.9K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string/discuss/47740/In-place-simple-solution"
        },
        {
            "discussion_title": "My accepted Java solution",
            "discussion_vote": "88",
            "discussion_views": "40.8K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string/discuss/47706/My-accepted-Java-solution"
        },
        {
            "discussion_title": "Java 3-line builtin solution",
            "discussion_vote": "62",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string/discuss/47781/Java-3-line-builtin-solution"
        },
        {
            "discussion_title": "C++ solution, in place: runtime O(n), memory O(1)",
            "discussion_vote": "62",
            "discussion_views": "24.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string/discuss/47840/C%2B%2B-solution-in-place%3A-runtime-O(n)-memory-O(1)"
        }
    ],
    "152": [
        {
            "discussion_title": "Possibly simplest solution with O(n) time complexity",
            "discussion_vote": "620",
            "discussion_views": "73.6K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-subarray/discuss/48230/Possibly-simplest-solution-with-O(n)-time-complexity"
        },
        {
            "discussion_title": "Sharing my solution: O(1) space, O(n) running time",
            "discussion_vote": "275",
            "discussion_views": "60.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-subarray/discuss/48252/Sharing-my-solution%3A-O(1)-space-O(n)-running-time"
        },
        {
            "discussion_title": "Simple Java code",
            "discussion_vote": "118",
            "discussion_views": "24.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-subarray/discuss/48330/Simple-Java-code"
        },
        {
            "discussion_title": "Share my C++ solution, maybe is the simplest solution",
            "discussion_vote": "75",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-subarray/discuss/48253/Share-my-C%2B%2B-solution-maybe-is-the-simplest-solution"
        },
        {
            "discussion_title": "In Python, can it be more concise?",
            "discussion_vote": "66",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-subarray/discuss/48243/In-Python-can-it-be-more-concise"
        }
    ],
    "153": [
        {
            "discussion_title": "Compact and clean C++ solution",
            "discussion_vote": "159",
            "discussion_views": "36.0K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/discuss/48493/Compact-and-clean-C%2B%2B-solution"
        },
        {
            "discussion_title": "4ms simple C++ code with explanation",
            "discussion_vote": "50",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/discuss/48499/4ms-simple-C%2B%2B-code-with-explanation"
        },
        {
            "discussion_title": "A concise solution with proof in the comment",
            "discussion_vote": "45",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/discuss/48484/A-concise-solution-with-proof-in-the-comment"
        },
        {
            "discussion_title": "Simplest and fastest C++ solution O(lg N), you can't beat this!",
            "discussion_vote": "40",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/discuss/48486/Simplest-and-fastest-C%2B%2B-solution-O(lg-N)-you-can't-beat-this!"
        },
        {
            "discussion_title": "Java solution with binary search",
            "discussion_vote": "38",
            "discussion_views": "22.2K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/discuss/48487/Java-solution-with-binary-search"
        }
    ],
    "154": [
        {
            "discussion_title": "My pretty simple code to solve it",
            "discussion_vote": "265",
            "discussion_views": "39.5K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/48808/My-pretty-simple-code-to-solve-it"
        },
        {
            "discussion_title": "One simple and clear method with O(1) space and worst O(n) time",
            "discussion_vote": "41",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/48817/One-simple-and-clear-method-with-O(1)-space-and-worst-O(n)-time"
        },
        {
            "discussion_title": "Super simple and clean Java, binary search.",
            "discussion_vote": "34",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/48810/Super-simple-and-clean-Java-binary-search."
        },
        {
            "discussion_title": "Stop wasting your time. It most likely has to be O(n).",
            "discussion_vote": "30",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/48849/Stop-wasting-your-time.-It-most-likely-has-to-be-O(n)."
        },
        {
            "discussion_title": "Only two more lines code on top of the solution for Part I",
            "discussion_vote": "24",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/48815/Only-two-more-lines-code-on-top-of-the-solution-for-Part-I"
        }
    ],
    "155": [
        {
            "discussion_title": "Share my Java solution with ONLY ONE stack",
            "discussion_vote": "467",
            "discussion_views": "91.3K",
            "discussion_link": "https://leetcode.com/problems/min-stack/discuss/49031/Share-my-Java-solution-with-ONLY-ONE-stack"
        },
        {
            "discussion_title": "Java accepted solution using one stack",
            "discussion_vote": "428",
            "discussion_views": "50.6K",
            "discussion_link": "https://leetcode.com/problems/min-stack/discuss/49014/Java-accepted-solution-using-one-stack"
        },
        {
            "discussion_title": "Clean 6ms Java solution",
            "discussion_vote": "248",
            "discussion_views": "26.0K",
            "discussion_link": "https://leetcode.com/problems/min-stack/discuss/49010/Clean-6ms-Java-solution"
        },
        {
            "discussion_title": "C++ using two stacks, quite short and easy to understand",
            "discussion_vote": "174",
            "discussion_views": "28.4K",
            "discussion_link": "https://leetcode.com/problems/min-stack/discuss/49016/C%2B%2B-using-two-stacks-quite-short-and-easy-to-understand"
        },
        {
            "discussion_title": "My Python solution",
            "discussion_vote": "135",
            "discussion_views": "20.5K",
            "discussion_link": "https://leetcode.com/problems/min-stack/discuss/49022/My-Python-solution"
        }
    ],
    "160": [
        {
            "discussion_title": "Java solution without knowing the difference in len!",
            "discussion_vote": "1.0K",
            "discussion_views": "78.5K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-linked-lists/discuss/49785/Java-solution-without-knowing-the-difference-in-len!"
        },
        {
            "discussion_title": "My accepted simple and shortest C++ code with comments explaining the algorithm.  Any comments or improvements?",
            "discussion_vote": "413",
            "discussion_views": "38.9K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-linked-lists/discuss/49789/My-accepted-simple-and-shortest-C%2B%2B-code-with-comments-explaining-the-algorithm.-Any-comments-or-improvements"
        },
        {
            "discussion_title": "Concise python code with comments",
            "discussion_vote": "179",
            "discussion_views": "16.8K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-linked-lists/discuss/49798/Concise-python-code-with-comments"
        },
        {
            "discussion_title": "Concise JAVA solution, O(1) memory O(n) time",
            "discussion_vote": "170",
            "discussion_views": "33.3K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-linked-lists/discuss/49792/Concise-JAVA-solution-O(1)-memory-O(n)-time"
        },
        {
            "discussion_title": "Simple C++ solution (5 lines)",
            "discussion_vote": "130",
            "discussion_views": "19.0K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-linked-lists/discuss/49799/Simple-C%2B%2B-solution-(5-lines)"
        }
    ],
    "162": [
        {
            "discussion_title": "Find the maximum by binary search (recursion and iteration)",
            "discussion_vote": "264",
            "discussion_views": "57.8K",
            "discussion_link": "https://leetcode.com/problems/find-peak-element/discuss/50232/Find-the-maximum-by-binary-search-(recursion-and-iteration)"
        },
        {
            "discussion_title": "O(logN) Solution JavaCode",
            "discussion_vote": "121",
            "discussion_views": "27.7K",
            "discussion_link": "https://leetcode.com/problems/find-peak-element/discuss/50236/O(logN)-Solution-JavaCode"
        },
        {
            "discussion_title": "Java solution and explanation using invariants",
            "discussion_vote": "118",
            "discussion_views": "11.6K",
            "discussion_link": "https://leetcode.com/problems/find-peak-element/discuss/50239/Java-solution-and-explanation-using-invariants"
        },
        {
            "discussion_title": "My clean and readable python solution",
            "discussion_vote": "42",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/find-peak-element/discuss/50259/My-clean-and-readable-python-solution"
        },
        {
            "discussion_title": "A concise standard binary search solution",
            "discussion_vote": "27",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/find-peak-element/discuss/50237/A-concise-standard-binary-search-solution"
        }
    ],
    "164": [
        {
            "discussion_title": "[bucket sort] JAVA solution with explanation, O(N) time and space",
            "discussion_vote": "257",
            "discussion_views": "46.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-gap/discuss/50643/bucket-sort-JAVA-solution-with-explanation-O(N)-time-and-space"
        },
        {
            "discussion_title": "Radix sort solution in Java with explanation",
            "discussion_vote": "69",
            "discussion_views": "13.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-gap/discuss/50642/Radix-sort-solution-in-Java-with-explanation"
        },
        {
            "discussion_title": "Pigeon hole principle",
            "discussion_vote": "58",
            "discussion_views": "11.2K",
            "discussion_link": "https://leetcode.com/problems/maximum-gap/discuss/50644/Pigeon-hole-principle"
        },
        {
            "discussion_title": "My C++ code (12 ms, \"bucket sort\", O(n) time and space)",
            "discussion_vote": "23",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-gap/discuss/50725/My-C%2B%2B-code-(12-ms-%22bucket-sort%22-O(n)-time-and-space)"
        },
        {
            "discussion_title": "I solved it using radix sort",
            "discussion_vote": "21",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-gap/discuss/50647/I-solved-it-using-radix-sort"
        }
    ],
    "165": [
        {
            "discussion_title": "Accepted small Java solution.",
            "discussion_vote": "198",
            "discussion_views": "32.7K",
            "discussion_link": "https://leetcode.com/problems/compare-version-numbers/discuss/50774/Accepted-small-Java-solution."
        },
        {
            "discussion_title": "My 2ms easy solution with C/C++",
            "discussion_vote": "101",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/compare-version-numbers/discuss/50767/My-2ms-easy-solution-with-CC%2B%2B"
        },
        {
            "discussion_title": "Cudos on who invent such a boring question",
            "discussion_vote": "91",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/compare-version-numbers/discuss/51044/Cudos-on-who-invent-such-a-boring-question"
        },
        {
            "discussion_title": "My JAVA solution without split",
            "discussion_vote": "71",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/compare-version-numbers/discuss/50788/My-JAVA-solution-without-split"
        },
        {
            "discussion_title": "Java solution with fewer if logic",
            "discussion_vote": "63",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/compare-version-numbers/discuss/50994/Java-solution-with-fewer-if-logic"
        }
    ],
    "166": [
        {
            "discussion_title": "My clean Java solution",
            "discussion_vote": "228",
            "discussion_views": "36.7K",
            "discussion_link": "https://leetcode.com/problems/fraction-to-recurring-decimal/discuss/51106/My-clean-Java-solution"
        },
        {
            "discussion_title": "Accepted cpp solution, with explainations",
            "discussion_vote": "162",
            "discussion_views": "20.7K",
            "discussion_link": "https://leetcode.com/problems/fraction-to-recurring-decimal/discuss/51109/Accepted-cpp-solution-with-explainations"
        },
        {
            "discussion_title": "0ms C++ Solution with Detailed Explanations",
            "discussion_vote": "77",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/fraction-to-recurring-decimal/discuss/51160/0ms-C%2B%2B-Solution-with-Detailed-Explanations"
        },
        {
            "discussion_title": "Short Java solution",
            "discussion_vote": "61",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/fraction-to-recurring-decimal/discuss/51140/Short-Java-solution"
        },
        {
            "discussion_title": "Accepted Clean Java Solution",
            "discussion_vote": "39",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/fraction-to-recurring-decimal/discuss/51107/Accepted-Clean-Java-Solution"
        }
    ],
    "167": [
        {
            "discussion_title": "Share my java AC solution.",
            "discussion_vote": "140",
            "discussion_views": "43.7K",
            "discussion_link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/discuss/51239/Share-my-java-AC-solution."
        },
        {
            "discussion_title": "Python different solutions (two-pointer, dictionary, binary search).",
            "discussion_vote": "101",
            "discussion_views": "15.9K",
            "discussion_link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/discuss/51249/Python-different-solutions-(two-pointer-dictionary-binary-search)."
        },
        {
            "discussion_title": "A simple O(n) solution",
            "discussion_vote": "59",
            "discussion_views": "25.3K",
            "discussion_link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/discuss/51253/A-simple-O(n)-solution"
        },
        {
            "discussion_title": "C++ solution simple and sweet",
            "discussion_vote": "35",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/discuss/51303/C%2B%2B-solution-simple-and-sweet"
        },
        {
            "discussion_title": "Simple 8 line Java solution with explanation. O(n)",
            "discussion_vote": "29",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/discuss/51282/Simple-8-line-Java-solution-with-explanation.-O(n)"
        }
    ],
    "168": [
        {
            "discussion_title": "My 1 lines code in Java, C++, and Python",
            "discussion_vote": "209",
            "discussion_views": "48.7K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-title/discuss/51398/My-1-lines-code-in-Java-C%2B%2B-and-Python"
        },
        {
            "discussion_title": "Accepted Java solution",
            "discussion_vote": "120",
            "discussion_views": "29.9K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-title/discuss/51399/Accepted-Java-solution"
        },
        {
            "discussion_title": "Python solution with explanation",
            "discussion_vote": "84",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-title/discuss/51404/Python-solution-with-explanation"
        },
        {
            "discussion_title": "Share my simple solution, just a little trick to handle corner case 26",
            "discussion_vote": "47",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-title/discuss/51421/Share-my-simple-solution-just-a-little-trick-to-handle-corner-case-26"
        },
        {
            "discussion_title": "My easy to understand JAVA solution",
            "discussion_vote": "40",
            "discussion_views": "10.9K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-title/discuss/51401/My-easy-to-understand-JAVA-solution"
        }
    ],
    "169": [
        {
            "discussion_title": "O(n) time O(1) space fastest solution",
            "discussion_vote": "736",
            "discussion_views": "115.8K",
            "discussion_link": "https://leetcode.com/problems/majority-element/discuss/51613/O(n)-time-O(1)-space-fastest-solution"
        },
        {
            "discussion_title": "6 Suggested Solutions in C++ with Explanations",
            "discussion_vote": "384",
            "discussion_views": "29.0K",
            "discussion_link": "https://leetcode.com/problems/majority-element/discuss/51612/6-Suggested-Solutions-in-C%2B%2B-with-Explanations"
        },
        {
            "discussion_title": "Java solutions (sorting, hashmap, moore voting, bit manipulation).",
            "discussion_vote": "192",
            "discussion_views": "25.7K",
            "discussion_link": "https://leetcode.com/problems/majority-element/discuss/51611/Java-solutions-(sorting-hashmap-moore-voting-bit-manipulation)."
        },
        {
            "discussion_title": "One line solution in Python",
            "discussion_vote": "83",
            "discussion_views": "11.6K",
            "discussion_link": "https://leetcode.com/problems/majority-element/discuss/51610/One-line-solution-in-Python"
        },
        {
            "discussion_title": "Share my solution [Java] - Count bits",
            "discussion_vote": "74",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/majority-element/discuss/51649/Share-my-solution-Java-Count-bits"
        }
    ],
    "171": [
        {
            "discussion_title": "My solutions in 3 languages, does any one have one line solution in Java or C++?",
            "discussion_vote": "75",
            "discussion_views": "31.0K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-number/discuss/52107/My-solutions-in-3-languages-does-any-one-have-one-line-solution-in-Java-or-C%2B%2B"
        },
        {
            "discussion_title": "Asked this question on an interview",
            "discussion_vote": "64",
            "discussion_views": "16.7K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-number/discuss/52232/Asked-this-question-on-an-interview"
        },
        {
            "discussion_title": "Here is my java solution",
            "discussion_vote": "46",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-number/discuss/52091/Here-is-my-java-solution"
        },
        {
            "discussion_title": "My 2ms JAVA solution",
            "discussion_vote": "26",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-number/discuss/52124/My-2ms-JAVA-solution"
        },
        {
            "discussion_title": "Explanation in Python",
            "discussion_vote": "24",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/excel-sheet-column-number/discuss/52289/Explanation-in-Python"
        }
    ],
    "172": [
        {
            "discussion_title": "My one-line solutions in 3 languages",
            "discussion_vote": "307",
            "discussion_views": "47.5K",
            "discussion_link": "https://leetcode.com/problems/factorial-trailing-zeroes/discuss/52371/My-one-line-solutions-in-3-languages"
        },
        {
            "discussion_title": "Simple C/C++ Solution (with detailed explaination)",
            "discussion_vote": "243",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/factorial-trailing-zeroes/discuss/52373/Simple-CC%2B%2B-Solution-(with-detailed-explaination)"
        },
        {
            "discussion_title": "My explanation of the Log(n) solution",
            "discussion_vote": "147",
            "discussion_views": "20.2K",
            "discussion_link": "https://leetcode.com/problems/factorial-trailing-zeroes/discuss/52367/My-explanation-of-the-Log(n)-solution"
        },
        {
            "discussion_title": "O(log_5(N)) solution, java",
            "discussion_vote": "46",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/factorial-trailing-zeroes/discuss/52506/O(log_5(N))-solution-java"
        },
        {
            "discussion_title": "4-lines 4ms C++ Solution with Explanations",
            "discussion_vote": "29",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/factorial-trailing-zeroes/discuss/52470/4-lines-4ms-C%2B%2B-Solution-with-Explanations"
        }
    ],
    "173": [
        {
            "discussion_title": "My solutions in 3 languages with Stack",
            "discussion_vote": "388",
            "discussion_views": "67.8K",
            "discussion_link": "https://leetcode.com/problems/binary-search-tree-iterator/discuss/52525/My-solutions-in-3-languages-with-Stack"
        },
        {
            "discussion_title": "Ideal Solution using Stack (Java)",
            "discussion_vote": "204",
            "discussion_views": "35.6K",
            "discussion_link": "https://leetcode.com/problems/binary-search-tree-iterator/discuss/52526/Ideal-Solution-using-Stack-(Java)"
        },
        {
            "discussion_title": "My java accepted solution",
            "discussion_vote": "45",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/binary-search-tree-iterator/discuss/52584/My-java-accepted-solution"
        },
        {
            "discussion_title": "My Solution in C++, in average O(1) time and uses O(h) memory",
            "discussion_vote": "41",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/binary-search-tree-iterator/discuss/52519/My-Solution-in-C%2B%2B-in-average-O(1)-time-and-uses-O(h)-memory"
        },
        {
            "discussion_title": "Two Python solutions, stack and generator",
            "discussion_vote": "40",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/binary-search-tree-iterator/discuss/52642/Two-Python-solutions-stack-and-generator"
        }
    ],
    "174": [
        {
            "discussion_title": "C++ DP solution",
            "discussion_vote": "142",
            "discussion_views": "22.0K",
            "discussion_link": "https://leetcode.com/problems/dungeon-game/discuss/52774/C%2B%2B-DP-solution"
        },
        {
            "discussion_title": "My AC Java Version, Suggestions are welcome",
            "discussion_vote": "67",
            "discussion_views": "15.4K",
            "discussion_link": "https://leetcode.com/problems/dungeon-game/discuss/52790/My-AC-Java-Version-Suggestions-are-welcome"
        },
        {
            "discussion_title": "Best solution I have found with explanations",
            "discussion_vote": "52",
            "discussion_views": "12.9K",
            "discussion_link": "https://leetcode.com/problems/dungeon-game/discuss/52805/Best-solution-I-have-found-with-explanations"
        },
        {
            "discussion_title": "My java solution with explanation in detail",
            "discussion_vote": "29",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/dungeon-game/discuss/52897/My-java-solution-with-explanation-in-detail"
        },
        {
            "discussion_title": "Sharing my solution with O(n) space, O(mn) runtime",
            "discussion_vote": "28",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/dungeon-game/discuss/52887/Sharing-my-solution-with-O(n)-space-O(mn)-runtime"
        }
    ],
    "175": [
        {
            "discussion_title": "Its a simple question of Left Join. My solution attached",
            "discussion_vote": "48",
            "discussion_views": "35.0K",
            "discussion_link": "https://leetcode.com/problems/combine-two-tables/discuss/52928/Its-a-simple-question-of-Left-Join.-My-solution-attached"
        },
        {
            "discussion_title": "Comparative solution between LEFT JOIN, LEFT JOIN USING and NATURAL LEFT JOIN",
            "discussion_vote": "31",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/combine-two-tables/discuss/52930/Comparative-solution-between-LEFT-JOIN-LEFT-JOIN-USING-and-NATURAL-LEFT-JOIN"
        },
        {
            "discussion_title": "Why cannot using where",
            "discussion_vote": "16",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/combine-two-tables/discuss/52931/Why-cannot-using-where"
        },
        {
            "discussion_title": "My Solution And Question With Union",
            "discussion_vote": "2",
            "discussion_views": "966",
            "discussion_link": "https://leetcode.com/problems/combine-two-tables/discuss/52932/My-Solution-And-Question-With-Union"
        },
        {
            "discussion_title": "So watch your capitalization carefully\\uff01",
            "discussion_vote": "2",
            "discussion_views": "352",
            "discussion_link": "https://leetcode.com/problems/combine-two-tables/discuss/52936/So-watch-your-capitalization-carefullyuff01"
        }
    ],
    "176": [
        {
            "discussion_title": "Simple query which handles the NULL situation",
            "discussion_vote": "97",
            "discussion_views": "41.7K",
            "discussion_link": "https://leetcode.com/problems/second-highest-salary/discuss/52957/Simple-query-which-handles-the-NULL-situation"
        },
        {
            "discussion_title": "A Simple Answer",
            "discussion_vote": "62",
            "discussion_views": "29.3K",
            "discussion_link": "https://leetcode.com/problems/second-highest-salary/discuss/52952/A-Simple-Answer"
        },
        {
            "discussion_title": "Accepted solution",
            "discussion_vote": "17",
            "discussion_views": "11.8K",
            "discussion_link": "https://leetcode.com/problems/second-highest-salary/discuss/53029/Accepted-solution"
        },
        {
            "discussion_title": "My tidy soution",
            "discussion_vote": "15",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/second-highest-salary/discuss/52953/My-tidy-soution"
        },
        {
            "discussion_title": "Simple Solution",
            "discussion_vote": "9",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/second-highest-salary/discuss/53016/Simple-Solution"
        }
    ],
    "177": [
        {
            "discussion_title": "Accpted Solution for the Nth Highest Salary",
            "discussion_vote": "67",
            "discussion_views": "42.6K",
            "discussion_link": "https://leetcode.com/problems/nth-highest-salary/discuss/53041/Accpted-Solution-for-the-Nth-Highest-Salary"
        },
        {
            "discussion_title": "My accepted simply solution.Any advising?",
            "discussion_vote": "27",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/nth-highest-salary/discuss/53071/My-accepted-simply-solution.Any-advising"
        },
        {
            "discussion_title": "No Variable, No Limit X,1, Just one query, 808ms",
            "discussion_vote": "26",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/nth-highest-salary/discuss/53062/No-Variable-No-Limit-X1-Just-one-query-808ms"
        },
        {
            "discussion_title": "Why using LIMIT N-1,1 will cause error?",
            "discussion_vote": "16",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/nth-highest-salary/discuss/53036/Why-using-LIMIT-N-11-will-cause-error"
        },
        {
            "discussion_title": "Accepted Solution of Nth Highest Salary",
            "discussion_vote": "8",
            "discussion_views": "9.3K",
            "discussion_link": "https://leetcode.com/problems/nth-highest-salary/discuss/53078/Accepted-Solution-of-Nth-Highest-Salary"
        }
    ],
    "178": [
        {
            "discussion_title": "Simple, Short, Fast",
            "discussion_vote": "176",
            "discussion_views": "43.7K",
            "discussion_link": "https://leetcode.com/problems/rank-scores/discuss/53094/Simple-Short-Fast"
        },
        {
            "discussion_title": "Accepted solution using InnerJoin and GroupBy",
            "discussion_vote": "29",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/rank-scores/discuss/53096/Accepted-solution-using-InnerJoin-and-GroupBy"
        },
        {
            "discussion_title": "Maybe the Simpest Solution",
            "discussion_vote": "18",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/rank-scores/discuss/53129/Maybe-the-Simpest-Solution"
        },
        {
            "discussion_title": "Accepted Solution with subqueries and group by",
            "discussion_vote": "16",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/rank-scores/discuss/53110/Accepted-Solution-with-subqueries-and-group-by"
        },
        {
            "discussion_title": "Accepted solution with subquery for rank",
            "discussion_vote": "7",
            "discussion_views": "616",
            "discussion_link": "https://leetcode.com/problems/rank-scores/discuss/115770/Accepted-solution-with-subquery-for-rank"
        }
    ],
    "179": [
        {
            "discussion_title": "My Java Solution to share",
            "discussion_vote": "182",
            "discussion_views": "38.8K",
            "discussion_link": "https://leetcode.com/problems/largest-number/discuss/53158/My-Java-Solution-to-share"
        },
        {
            "discussion_title": "A simple C++ solution",
            "discussion_vote": "113",
            "discussion_views": "18.0K",
            "discussion_link": "https://leetcode.com/problems/largest-number/discuss/53157/A-simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "My 3-lines code in Java and Python",
            "discussion_vote": "71",
            "discussion_views": "19.0K",
            "discussion_link": "https://leetcode.com/problems/largest-number/discuss/53162/My-3-lines-code-in-Java-and-Python"
        },
        {
            "discussion_title": "Share a short code in c++",
            "discussion_vote": "45",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/largest-number/discuss/53160/Share-a-short-code-in-c%2B%2B"
        },
        {
            "discussion_title": "Python simple solution in 4 lines",
            "discussion_vote": "43",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/largest-number/discuss/53270/Python-simple-solution-in-4-lines"
        }
    ],
    "180": [
        {
            "discussion_title": "Simple solution",
            "discussion_vote": "72",
            "discussion_views": "25.9K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers/discuss/53418/Simple-solution"
        },
        {
            "discussion_title": "Solution with user defined variables",
            "discussion_vote": "28",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers/discuss/53420/Solution-with-user-defined-variables"
        },
        {
            "discussion_title": "An ugly solution",
            "discussion_vote": "21",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers/discuss/53439/An-ugly-solution"
        },
        {
            "discussion_title": "Accepted solution without joins (works in n-consecutive cases with slight modification)",
            "discussion_vote": "13",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers/discuss/53460/Accepted-solution-without-joins-(works-in-n-consecutive-cases-with-slight-modification)"
        },
        {
            "discussion_title": "Simple sql with join, 1484 ms",
            "discussion_vote": "9",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers/discuss/53447/Simple-sql-with-join-1484-ms"
        }
    ],
    "181": [
        {
            "discussion_title": "A straightforward method",
            "discussion_vote": "81",
            "discussion_views": "25.2K",
            "discussion_link": "https://leetcode.com/problems/employees-earning-more-than-their-managers/discuss/53475/A-straightforward-method"
        },
        {
            "discussion_title": "Sharing my solution~   simple and easy to understand",
            "discussion_vote": "33",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/employees-earning-more-than-their-managers/discuss/53515/Sharing-my-solution~-simple-and-easy-to-understand"
        },
        {
            "discussion_title": "Sharing my solution",
            "discussion_vote": "12",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/employees-earning-more-than-their-managers/discuss/53525/Sharing-my-solution"
        },
        {
            "discussion_title": "An easy solution to this question.",
            "discussion_vote": "8",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/employees-earning-more-than-their-managers/discuss/53521/An-easy-solution-to-this-question."
        },
        {
            "discussion_title": "Two Straightforward way, using 'where' and 'join'",
            "discussion_vote": "7",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/employees-earning-more-than-their-managers/discuss/53501/Two-Straightforward-way-using-'where'-and-'join'"
        }
    ],
    "182": [
        {
            "discussion_title": "I have this Simple Approach, anybody has some other way",
            "discussion_vote": "55",
            "discussion_views": "23.4K",
            "discussion_link": "https://leetcode.com/problems/duplicate-emails/discuss/53528/I-have-this-Simple-Approach-anybody-has-some-other-way"
        },
        {
            "discussion_title": "My simple accepted solution",
            "discussion_vote": "24",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/duplicate-emails/discuss/53553/My-simple-accepted-solution"
        },
        {
            "discussion_title": "A solution using a GROUP BY and another one using a self join",
            "discussion_vote": "21",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/duplicate-emails/discuss/53531/A-solution-using-a-GROUP-BY-and-another-one-using-a-self-join"
        },
        {
            "discussion_title": "Share my solution",
            "discussion_vote": "15",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/duplicate-emails/discuss/53557/Share-my-solution"
        },
        {
            "discussion_title": "Simple solution use Group By",
            "discussion_vote": "10",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/duplicate-emails/discuss/53548/Simple-solution-use-Group-By"
        }
    ],
    "183": [
        {
            "discussion_title": "Three accepted solutions",
            "discussion_vote": "75",
            "discussion_views": "18.7K",
            "discussion_link": "https://leetcode.com/problems/customers-who-never-order/discuss/53579/Three-accepted-solutions"
        },
        {
            "discussion_title": "A solution using NOT IN and another one using LEFT JOIN",
            "discussion_vote": "21",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/customers-who-never-order/discuss/53576/A-solution-using-NOT-IN-and-another-one-using-LEFT-JOIN"
        },
        {
            "discussion_title": "Here are 3 solutions",
            "discussion_vote": "8",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/customers-who-never-order/discuss/53586/Here-are-3-solutions"
        },
        {
            "discussion_title": "Share My first DB Answer",
            "discussion_vote": "5",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/customers-who-never-order/discuss/53596/Share-My-first-DB-Answer"
        },
        {
            "discussion_title": "MySql Solution using not in",
            "discussion_vote": "3",
            "discussion_views": "223",
            "discussion_link": "https://leetcode.com/problems/customers-who-never-order/discuss/141590/MySql-Solution-using-not-in"
        }
    ],
    "184": [
        {
            "discussion_title": "Three accpeted solutions",
            "discussion_vote": "71",
            "discussion_views": "19.7K",
            "discussion_link": "https://leetcode.com/problems/department-highest-salary/discuss/53607/Three-accpeted-solutions"
        },
        {
            "discussion_title": "Simple solution, easy to understand",
            "discussion_vote": "35",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/department-highest-salary/discuss/53608/Simple-solution-easy-to-understand"
        },
        {
            "discussion_title": "Sharing my simple solution",
            "discussion_vote": "21",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/department-highest-salary/discuss/53670/Sharing-my-simple-solution"
        },
        {
            "discussion_title": "GROUP BY HAVING not working for multiple highest salary, why?",
            "discussion_vote": "13",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/department-highest-salary/discuss/53612/GROUP-BY-HAVING-not-working-for-multiple-highest-salary-why"
        },
        {
            "discussion_title": "Why cannot we just use max() with group by?",
            "discussion_vote": "11",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/department-highest-salary/discuss/53609/Why-cannot-we-just-use-max()-with-group-by"
        }
    ],
    "185": [
        {
            "discussion_title": "Accepted solution without group by or order by",
            "discussion_vote": "69",
            "discussion_views": "22.3K",
            "discussion_link": "https://leetcode.com/problems/department-top-three-salaries/discuss/53692/Accepted-solution-without-group-by-or-order-by"
        },
        {
            "discussion_title": "My tidy solution",
            "discussion_vote": "32",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/department-top-three-salaries/discuss/53699/My-tidy-solution"
        },
        {
            "discussion_title": "Simple solution, easy to understand",
            "discussion_vote": "27",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/department-top-three-salaries/discuss/53701/Simple-solution-easy-to-understand"
        },
        {
            "discussion_title": "Best solution, clean, easy, no subquery",
            "discussion_vote": "10",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/department-top-three-salaries/discuss/53693/Best-solution-clean-easy-no-subquery"
        },
        {
            "discussion_title": "Simple Solution for 1112 ms",
            "discussion_vote": "9",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/department-top-three-salaries/discuss/53748/Simple-Solution-for-1112-ms"
        }
    ],
    "187": [
        {
            "discussion_title": "7 lines simple Java, O(n)",
            "discussion_vote": "224",
            "discussion_views": "29.9K",
            "discussion_link": "https://leetcode.com/problems/repeated-dna-sequences/discuss/53855/7-lines-simple-Java-O(n)"
        },
        {
            "discussion_title": "Clean Java solution (hashmap + bits manipulation)",
            "discussion_vote": "210",
            "discussion_views": "41.5K",
            "discussion_link": "https://leetcode.com/problems/repeated-dna-sequences/discuss/53867/Clean-Java-solution-(hashmap-%2B-bits-manipulation)"
        },
        {
            "discussion_title": "I did it in 10 lines of C++",
            "discussion_vote": "148",
            "discussion_views": "24.0K",
            "discussion_link": "https://leetcode.com/problems/repeated-dna-sequences/discuss/53877/I-did-it-in-10-lines-of-C%2B%2B"
        },
        {
            "discussion_title": "Short Java \"rolling-hash\" solution",
            "discussion_vote": "46",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/repeated-dna-sequences/discuss/53902/Short-Java-%22rolling-hash%22-solution"
        },
        {
            "discussion_title": "20 ms solution (C++) with explanation",
            "discussion_vote": "41",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/repeated-dna-sequences/discuss/53952/20-ms-solution-(C%2B%2B)-with-explanation"
        }
    ],
    "188": [
        {
            "discussion_title": "A Concise DP Solution in Java",
            "discussion_vote": "237",
            "discussion_views": "64.8K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/discuss/54113/A-Concise-DP-Solution-in-Java"
        },
        {
            "discussion_title": "Clean Java DP solution with comment",
            "discussion_vote": "151",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/discuss/54117/Clean-Java-DP-solution-with-comment"
        },
        {
            "discussion_title": "C++ Solution with O(n + klgn) time using Max Heap and Stack",
            "discussion_vote": "93",
            "discussion_views": "20.5K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/discuss/54118/C%2B%2B-Solution-with-O(n-%2B-klgn)-time-using-Max-Heap-and-Stack"
        },
        {
            "discussion_title": "Share my C++ DP solution with O(kn) time O(k) space, 10ms",
            "discussion_vote": "49",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/discuss/54121/Share-my-C%2B%2B-DP-solution-with-O(kn)-time-O(k)-space-10ms"
        },
        {
            "discussion_title": "Easy understanding and can be easily modified to different situations Java Solution",
            "discussion_vote": "47",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/discuss/54114/Easy-understanding-and-can-be-easily-modified-to-different-situations-Java-Solution"
        }
    ],
    "189": [
        {
            "discussion_title": "Easy to read Java solution",
            "discussion_vote": "414",
            "discussion_views": "55.4K",
            "discussion_link": "https://leetcode.com/problems/rotate-array/discuss/54250/Easy-to-read-Java-solution"
        },
        {
            "discussion_title": "Summary of C++ solutions",
            "discussion_vote": "220",
            "discussion_views": "30.3K",
            "discussion_link": "https://leetcode.com/problems/rotate-array/discuss/54277/Summary-of-C%2B%2B-solutions"
        },
        {
            "discussion_title": "Java O(1) space solution of Rotate Array.",
            "discussion_vote": "100",
            "discussion_views": "21.9K",
            "discussion_link": "https://leetcode.com/problems/rotate-array/discuss/54252/Java-O(1)-space-solution-of-Rotate-Array."
        },
        {
            "discussion_title": "3-line using reverse",
            "discussion_vote": "98",
            "discussion_views": "22.6K",
            "discussion_link": "https://leetcode.com/problems/rotate-array/discuss/54249/3-line-using-reverse"
        },
        {
            "discussion_title": "My solution by using Python",
            "discussion_vote": "78",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/rotate-array/discuss/54294/My-solution-by-using-Python"
        }
    ],
    "190": [
        {
            "discussion_title": "O(1) bit operation C++ solution (8ms)",
            "discussion_vote": "268",
            "discussion_views": "42.3K",
            "discussion_link": "https://leetcode.com/problems/reverse-bits/discuss/54741/O(1)-bit-operation-C%2B%2B-solution-(8ms)"
        },
        {
            "discussion_title": "Java Solution and Optimization",
            "discussion_vote": "183",
            "discussion_views": "45.2K",
            "discussion_link": "https://leetcode.com/problems/reverse-bits/discuss/54746/Java-Solution-and-Optimization"
        },
        {
            "discussion_title": "Sharing my 2ms Java Solution with Explanation",
            "discussion_vote": "123",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-bits/discuss/54738/Sharing-my-2ms-Java-Solution-with-Explanation"
        },
        {
            "discussion_title": "My 3ms pure C solution",
            "discussion_vote": "89",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-bits/discuss/54760/My-3ms-pure-C-solution"
        },
        {
            "discussion_title": "The concise C++ solution(9ms)",
            "discussion_vote": "49",
            "discussion_views": "9.3K",
            "discussion_link": "https://leetcode.com/problems/reverse-bits/discuss/54772/The-concise-C%2B%2B-solution(9ms)"
        }
    ],
    "191": [
        {
            "discussion_title": "Simple Java Solution, Bit Shifting",
            "discussion_vote": "244",
            "discussion_views": "39.7K",
            "discussion_link": "https://leetcode.com/problems/number-of-1-bits/discuss/55099/Simple-Java-Solution-Bit-Shifting"
        },
        {
            "discussion_title": "Short code of C++, O(m) by time, m is the count of 1's,  and another several method of O(1) time",
            "discussion_vote": "80",
            "discussion_views": "13.2K",
            "discussion_link": "https://leetcode.com/problems/number-of-1-bits/discuss/55120/Short-code-of-C%2B%2B-O(m)-by-time-m-is-the-count-of-1's-and-another-several-method-of-O(1)-time"
        },
        {
            "discussion_title": "C++ Solution: n & (n - 1)",
            "discussion_vote": "72",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-1-bits/discuss/55255/C%2B%2B-Solution%3A-n-and-(n-1)"
        },
        {
            "discussion_title": "Readable simple JAVA solution O(1)",
            "discussion_vote": "33",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-1-bits/discuss/55108/Readable-simple-JAVA-solution-O(1)"
        },
        {
            "discussion_title": "Use n=n&(n-1) trick to clear the least bit",
            "discussion_vote": "29",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/number-of-1-bits/discuss/55194/Use-nnand(n-1)-trick-to-clear-the-least-bit"
        }
    ],
    "192": [
        {
            "discussion_title": "My simple solution (one line with pipe)",
            "discussion_vote": "85",
            "discussion_views": "22.4K",
            "discussion_link": "https://leetcode.com/problems/word-frequency/discuss/55443/My-simple-solution-(one-line-with-pipe)"
        },
        {
            "discussion_title": "Solution using awk and pipes with explaination",
            "discussion_vote": "14",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/word-frequency/discuss/55462/Solution-using-awk-and-pipes-with-explaination"
        },
        {
            "discussion_title": "My accepted answer using tr, sort, uniq and awk",
            "discussion_vote": "9",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/word-frequency/discuss/55470/My-accepted-answer-using-tr-sort-uniq-and-awk"
        },
        {
            "discussion_title": "Share my accepted solution, using awk and sort!",
            "discussion_vote": "5",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/word-frequency/discuss/55472/Share-my-accepted-solution-using-awk-and-sort!"
        },
        {
            "discussion_title": "My 16ms unix-pipe cat+tr+awk+sort+(hash) solution",
            "discussion_vote": "4",
            "discussion_views": "711",
            "discussion_link": "https://leetcode.com/problems/word-frequency/discuss/55464/My-16ms-unix-pipe-cat%2Btr%2Bawk%2Bsort%2B(hash)-solution"
        }
    ],
    "193": [
        {
            "discussion_title": "Three different solutions using grep, sed, and awk",
            "discussion_vote": "71",
            "discussion_views": "20.6K",
            "discussion_link": "https://leetcode.com/problems/valid-phone-numbers/discuss/55481/Three-different-solutions-using-grep-sed-and-awk"
        },
        {
            "discussion_title": "Grep -e solution with detailed explanation, good for those new to regex",
            "discussion_vote": "43",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/valid-phone-numbers/discuss/55478/Grep-e-solution-with-detailed-explanation-good-for-those-new-to-regex"
        },
        {
            "discussion_title": "Simple solution using awk",
            "discussion_vote": "3",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/valid-phone-numbers/discuss/55474/Simple-solution-using-awk"
        },
        {
            "discussion_title": "My \"grep -E\" solution",
            "discussion_vote": "3",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/valid-phone-numbers/discuss/55492/My-%22grep-E%22-solution"
        },
        {
            "discussion_title": "My easy understand grep -e solution",
            "discussion_vote": "2",
            "discussion_views": "879",
            "discussion_link": "https://leetcode.com/problems/valid-phone-numbers/discuss/55487/My-easy-understand-grep-e-solution"
        }
    ],
    "194": [
        {
            "discussion_title": "AC solution using awk and statement just like C.",
            "discussion_vote": "47",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/transpose-file/discuss/55502/AC-solution-using-awk-and-statement-just-like-C."
        },
        {
            "discussion_title": "Simple BASH solution that OJ hates",
            "discussion_vote": "18",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/transpose-file/discuss/55501/Simple-BASH-solution-that-OJ-hates"
        },
        {
            "discussion_title": "Solution using AWK with explanations",
            "discussion_vote": "9",
            "discussion_views": "720",
            "discussion_link": "https://leetcode.com/problems/transpose-file/discuss/111382/Solution-using-AWK-with-explanations"
        },
        {
            "discussion_title": "My 28ms awk solution",
            "discussion_vote": "8",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/transpose-file/discuss/55514/My-28ms-awk-solution"
        },
        {
            "discussion_title": "Memory Limit Exceeded",
            "discussion_vote": "5",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/transpose-file/discuss/55511/Memory-Limit-Exceeded"
        }
    ],
    "195": [
        {
            "discussion_title": "Share four different solutions",
            "discussion_vote": "76",
            "discussion_views": "20.8K",
            "discussion_link": "https://leetcode.com/problems/tenth-line/discuss/55544/Share-four-different-solutions"
        },
        {
            "discussion_title": "Super simple solution",
            "discussion_vote": "23",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/tenth-line/discuss/55529/Super-simple-solution"
        },
        {
            "discussion_title": "My three simple solutions",
            "discussion_vote": "18",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/tenth-line/discuss/55537/My-three-simple-solutions"
        },
        {
            "discussion_title": "A generalized approach with head/tail",
            "discussion_vote": "11",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/tenth-line/discuss/55539/A-generalized-approach-with-headtail"
        },
        {
            "discussion_title": "Simple Solution using AWK",
            "discussion_vote": "8",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/tenth-line/discuss/55552/Simple-Solution-using-AWK"
        }
    ],
    "196": [
        {
            "discussion_title": "Simple Solution",
            "discussion_vote": "179",
            "discussion_views": "30.8K",
            "discussion_link": "https://leetcode.com/problems/delete-duplicate-emails/discuss/55553/Simple-Solution"
        },
        {
            "discussion_title": "A skillful mysql solution  avoid \" select and update conflict\"",
            "discussion_vote": "33",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/delete-duplicate-emails/discuss/55614/A-skillful-mysql-solution-avoid-%22-select-and-update-conflict%22"
        },
        {
            "discussion_title": "Solution in a Single query without any conflicts",
            "discussion_vote": "25",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/delete-duplicate-emails/discuss/55591/Solution-in-a-Single-query-without-any-conflicts"
        },
        {
            "discussion_title": "I can't believe I get it wrong! What's wrong with my code?",
            "discussion_vote": "19",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/delete-duplicate-emails/discuss/55555/I-can't-believe-I-get-it-wrong!-What's-wrong-with-my-code"
        },
        {
            "discussion_title": "A simple AC solution.",
            "discussion_vote": "17",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/delete-duplicate-emails/discuss/55568/A-simple-AC-solution."
        }
    ],
    "197": [
        {
            "discussion_title": "Simple Solution",
            "discussion_vote": "79",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/rising-temperature/discuss/55619/Simple-Solution"
        },
        {
            "discussion_title": "My simple solution using inner join",
            "discussion_vote": "30",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/rising-temperature/discuss/55620/My-simple-solution-using-inner-join"
        },
        {
            "discussion_title": "Two Solutions..........",
            "discussion_vote": "21",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/rising-temperature/discuss/55662/Two-Solutions.........."
        },
        {
            "discussion_title": "My simple solution",
            "discussion_vote": "10",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/rising-temperature/discuss/55672/My-simple-solution"
        },
        {
            "discussion_title": "Why is subtracting 1 directly from Date not working, but subdate(a.Date,1) works?",
            "discussion_vote": "7",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/rising-temperature/discuss/55628/Why-is-subtracting-1-directly-from-Date-not-working-but-subdate(a.Date1)-works"
        }
    ],
    "198": [
        {
            "discussion_title": "From good to great. How to approach most of DP problems.",
            "discussion_vote": "288",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/house-robber/discuss/156523/From-good-to-great.-How-to-approach-most-of-DP-problems."
        },
        {
            "discussion_title": "C 1ms, O(1)space,  very simple solution",
            "discussion_vote": "244",
            "discussion_views": "60.7K",
            "discussion_link": "https://leetcode.com/problems/house-robber/discuss/55693/C-1ms-O(1)space-very-simple-solution"
        },
        {
            "discussion_title": "Java O(n) solution, space O(1)",
            "discussion_vote": "206",
            "discussion_views": "56.4K",
            "discussion_link": "https://leetcode.com/problems/house-robber/discuss/55681/Java-O(n)-solution-space-O(1)"
        },
        {
            "discussion_title": "Python solution, 3 lines.",
            "discussion_vote": "144",
            "discussion_views": "24.0K",
            "discussion_link": "https://leetcode.com/problems/house-robber/discuss/55696/Python-solution-3-lines."
        },
        {
            "discussion_title": "JAVA DP Solution, O(n) runtime and O(1) space, with inline comment",
            "discussion_vote": "122",
            "discussion_views": "22.1K",
            "discussion_link": "https://leetcode.com/problems/house-robber/discuss/55695/JAVA-DP-Solution-O(n)-runtime-and-O(1)-space-with-inline-comment"
        }
    ],
    "199": [
        {
            "discussion_title": "My simple accepted solution(JAVA)",
            "discussion_vote": "377",
            "discussion_views": "41.1K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-right-side-view/discuss/56012/My-simple-accepted-solution(JAVA)"
        },
        {
            "discussion_title": "My C++ solution, modified preorder traversal",
            "discussion_vote": "100",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-right-side-view/discuss/56003/My-C%2B%2B-solution-modified-preorder-traversal"
        },
        {
            "discussion_title": "Reverse Level Order Traversal, java",
            "discussion_vote": "87",
            "discussion_views": "13.9K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-right-side-view/discuss/56076/Reverse-Level-Order-Traversal-java"
        },
        {
            "discussion_title": "5-9 Lines Python, 48+ ms",
            "discussion_vote": "38",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-right-side-view/discuss/56064/5-9-Lines-Python-48%2B-ms"
        },
        {
            "discussion_title": "Simple C++ solution (BTW: I like clean codes)",
            "discussion_vote": "33",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-right-side-view/discuss/56203/Simple-C%2B%2B-solution-(BTW%3A-I-like-clean-codes)"
        }
    ],
    "200": [
        {
            "discussion_title": "Very concise Java AC solution",
            "discussion_vote": "268",
            "discussion_views": "86.6K",
            "discussion_link": "https://leetcode.com/problems/number-of-islands/discuss/56359/Very-concise-Java-AC-solution"
        },
        {
            "discussion_title": "7 lines Python, ~14 lines Java",
            "discussion_vote": "125",
            "discussion_views": "37.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-islands/discuss/56349/7-lines-Python-~14-lines-Java"
        },
        {
            "discussion_title": "1D Union Find Java solution, easily generalized to other problems",
            "discussion_vote": "91",
            "discussion_views": "13.5K",
            "discussion_link": "https://leetcode.com/problems/number-of-islands/discuss/56354/1D-Union-Find-Java-solution-easily-generalized-to-other-problems"
        },
        {
            "discussion_title": "Python Simple DFS Solution",
            "discussion_vote": "85",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/number-of-islands/discuss/56340/Python-Simple-DFS-Solution"
        },
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "54",
            "discussion_views": "34.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-islands/discuss/56347/Simple-Java-Solution"
        }
    ],
    "201": [
        {
            "discussion_title": "Bit operation solution(JAVA)",
            "discussion_vote": "228",
            "discussion_views": "29.1K",
            "discussion_link": "https://leetcode.com/problems/bitwise-and-of-numbers-range/discuss/56729/Bit-operation-solution(JAVA)"
        },
        {
            "discussion_title": "One line C++ solution",
            "discussion_vote": "124",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/bitwise-and-of-numbers-range/discuss/56746/One-line-C%2B%2B-solution"
        },
        {
            "discussion_title": "2 line Solution with detailed explanation",
            "discussion_vote": "75",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/bitwise-and-of-numbers-range/discuss/56721/2-line-Solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Java/Python easy solution with explanation",
            "discussion_vote": "64",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/bitwise-and-of-numbers-range/discuss/56719/JavaPython-easy-solution-with-explanation"
        },
        {
            "discussion_title": "My simple java solution(3 lines)",
            "discussion_vote": "57",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/bitwise-and-of-numbers-range/discuss/56845/My-simple-java-solution(3-lines)"
        }
    ],
    "202": [
        {
            "discussion_title": "My solution in C( O(1) space and no magic math property involved )",
            "discussion_vote": "665",
            "discussion_views": "61.7K",
            "discussion_link": "https://leetcode.com/problems/happy-number/discuss/56917/My-solution-in-C(-O(1)-space-and-no-magic-math-property-involved-)"
        },
        {
            "discussion_title": "Beat 90% Fast Easy Understand Java Solution with Brief Explanation",
            "discussion_vote": "130",
            "discussion_views": "39.1K",
            "discussion_link": "https://leetcode.com/problems/happy-number/discuss/56913/Beat-90-Fast-Easy-Understand-Java-Solution-with-Brief-Explanation"
        },
        {
            "discussion_title": "Explanation of why those posted algorithms are mathematically valid",
            "discussion_vote": "118",
            "discussion_views": "15.2K",
            "discussion_link": "https://leetcode.com/problems/happy-number/discuss/56919/Explanation-of-why-those-posted-algorithms-are-mathematically-valid"
        },
        {
            "discussion_title": "O(1) space Java solution",
            "discussion_vote": "85",
            "discussion_views": "24.6K",
            "discussion_link": "https://leetcode.com/problems/happy-number/discuss/56976/O(1)-space-Java-solution"
        },
        {
            "discussion_title": "My Python Solution",
            "discussion_vote": "62",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/happy-number/discuss/56915/My-Python-Solution"
        }
    ],
    "203": [
        {
            "discussion_title": "3 line recursive solution",
            "discussion_vote": "335",
            "discussion_views": "34.5K",
            "discussion_link": "https://leetcode.com/problems/remove-linked-list-elements/discuss/57306/3-line-recursive-solution"
        },
        {
            "discussion_title": "AC Java solution",
            "discussion_vote": "105",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/remove-linked-list-elements/discuss/57324/AC-Java-solution"
        },
        {
            "discussion_title": "Iterative short Java solution",
            "discussion_vote": "58",
            "discussion_views": "11.9K",
            "discussion_link": "https://leetcode.com/problems/remove-linked-list-elements/discuss/57323/Iterative-short-Java-solution"
        },
        {
            "discussion_title": "Accepted 7 line clean java solution",
            "discussion_vote": "47",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/remove-linked-list-elements/discuss/57331/Accepted-7-line-clean-java-solution"
        },
        {
            "discussion_title": "Simple and elegant solution in C++",
            "discussion_vote": "40",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/remove-linked-list-elements/discuss/57317/Simple-and-elegant-solution-in-C%2B%2B"
        }
    ],
    "204": [
        {
            "discussion_title": "My simple Java solution",
            "discussion_vote": "254",
            "discussion_views": "66.5K",
            "discussion_link": "https://leetcode.com/problems/count-primes/discuss/57588/My-simple-Java-solution"
        },
        {
            "discussion_title": "Fast Python Solution",
            "discussion_vote": "102",
            "discussion_views": "25.2K",
            "discussion_link": "https://leetcode.com/problems/count-primes/discuss/57595/Fast-Python-Solution"
        },
        {
            "discussion_title": "My easy one round c++ code",
            "discussion_vote": "67",
            "discussion_views": "28.3K",
            "discussion_link": "https://leetcode.com/problems/count-primes/discuss/57594/My-easy-one-round-c%2B%2B-code"
        },
        {
            "discussion_title": "12 ms Java solution modified from the hint method, beats 99.95%",
            "discussion_vote": "59",
            "discussion_views": "21.3K",
            "discussion_link": "https://leetcode.com/problems/count-primes/discuss/57593/12-ms-Java-solution-modified-from-the-hint-method-beats-99.95"
        },
        {
            "discussion_title": "Short C++ Sieve of Eratosthenes solution",
            "discussion_vote": "48",
            "discussion_views": "13.5K",
            "discussion_link": "https://leetcode.com/problems/count-primes/discuss/57601/Short-C%2B%2B-Sieve-of-Eratosthenes-solution"
        }
    ],
    "205": [
        {
            "discussion_title": "My 6 lines solution",
            "discussion_vote": "239",
            "discussion_views": "54.5K",
            "discussion_link": "https://leetcode.com/problems/isomorphic-strings/discuss/57796/My-6-lines-solution"
        },
        {
            "discussion_title": "Python different solutions (dictionary, etc).",
            "discussion_vote": "90",
            "discussion_views": "11.9K",
            "discussion_link": "https://leetcode.com/problems/isomorphic-strings/discuss/57941/Python-different-solutions-(dictionary-etc)."
        },
        {
            "discussion_title": "Short Java solution without maps",
            "discussion_vote": "90",
            "discussion_views": "28.7K",
            "discussion_link": "https://leetcode.com/problems/isomorphic-strings/discuss/57810/Short-Java-solution-without-maps"
        },
        {
            "discussion_title": "Java solution using HashMap",
            "discussion_vote": "45",
            "discussion_views": "19.7K",
            "discussion_link": "https://leetcode.com/problems/isomorphic-strings/discuss/57802/Java-solution-using-HashMap"
        },
        {
            "discussion_title": "Java solution with 1 line core code",
            "discussion_vote": "38",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/isomorphic-strings/discuss/57874/Java-solution-with-1-line-core-code"
        }
    ],
    "206": [
        {
            "discussion_title": "In-place iterative and recursive Java solution",
            "discussion_vote": "296",
            "discussion_views": "70.2K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list/discuss/58125/In-place-iterative-and-recursive-Java-solution"
        },
        {
            "discussion_title": "C++ Iterative and Recursive",
            "discussion_vote": "99",
            "discussion_views": "28.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list/discuss/58130/C%2B%2B-Iterative-and-Recursive"
        },
        {
            "discussion_title": "Python Iterative and Recursive Solution",
            "discussion_vote": "79",
            "discussion_views": "22.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list/discuss/58127/Python-Iterative-and-Recursive-Solution"
        },
        {
            "discussion_title": "My Java recursive solution",
            "discussion_vote": "67",
            "discussion_views": "19.8K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list/discuss/58156/My-Java-recursive-solution"
        },
        {
            "discussion_title": "Accepted C Solutions both iteratively and recursively",
            "discussion_vote": "37",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/reverse-linked-list/discuss/58495/Accepted-C-Solutions-both-iteratively-and-recursively"
        }
    ],
    "207": [
        {
            "discussion_title": "18-22 lines C++ BFS/DFS Solutions",
            "discussion_vote": "182",
            "discussion_views": "46.0K",
            "discussion_link": "https://leetcode.com/problems/course-schedule/discuss/58509/18-22-lines-C%2B%2B-BFSDFS-Solutions"
        },
        {
            "discussion_title": "Easy BFS Topological sort, Java",
            "discussion_vote": "169",
            "discussion_views": "62.4K",
            "discussion_link": "https://leetcode.com/problems/course-schedule/discuss/58516/Easy-BFS-Topological-sort-Java"
        },
        {
            "discussion_title": "Java DFS and BFS solution",
            "discussion_vote": "99",
            "discussion_views": "42.1K",
            "discussion_link": "https://leetcode.com/problems/course-schedule/discuss/58524/Java-DFS-and-BFS-solution"
        },
        {
            "discussion_title": "Python 20 lines DFS solution sharing with explanation",
            "discussion_vote": "91",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/course-schedule/discuss/58586/Python-20-lines-DFS-solution-sharing-with-explanation"
        },
        {
            "discussion_title": "JAVA---------Easy Version To UnderStand!!!!!!!!!!!!!!!!!",
            "discussion_vote": "60",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/course-schedule/discuss/58523/JAVA-Easy-Version-To-UnderStand!!!!!!!!!!!!!!!!!"
        }
    ],
    "208": [
        {
            "discussion_title": "AC JAVA solution simple using single array",
            "discussion_vote": "109",
            "discussion_views": "37.7K",
            "discussion_link": "https://leetcode.com/problems/implement-trie-prefix-tree/discuss/58832/AC-JAVA-solution-simple-using-single-array"
        },
        {
            "discussion_title": "Maybe the code is not too much by using \"next[26]\", C++",
            "discussion_vote": "104",
            "discussion_views": "23.2K",
            "discussion_link": "https://leetcode.com/problems/implement-trie-prefix-tree/discuss/58842/Maybe-the-code-is-not-too-much-by-using-%22next26%22-C%2B%2B"
        },
        {
            "discussion_title": "AC Python Solution",
            "discussion_vote": "69",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/implement-trie-prefix-tree/discuss/58834/AC-Python-Solution"
        },
        {
            "discussion_title": "My python solution",
            "discussion_vote": "48",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/implement-trie-prefix-tree/discuss/58989/My-python-solution"
        },
        {
            "discussion_title": "C++, My solution,  easy to understand:)",
            "discussion_vote": "25",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/implement-trie-prefix-tree/discuss/58852/C%2B%2B-My-solution-easy-to-understand%3A)"
        }
    ],
    "209": [
        {
            "discussion_title": "Accepted clean Java O(n) solution (two pointers)",
            "discussion_vote": "259",
            "discussion_views": "45.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-size-subarray-sum/discuss/59078/Accepted-clean-Java-O(n)-solution-(two-pointers)"
        },
        {
            "discussion_title": "Two AC solutions in Java with time complexity of N and NLogN with explanation",
            "discussion_vote": "129",
            "discussion_views": "24.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-size-subarray-sum/discuss/59103/Two-AC-solutions-in-Java-with-time-complexity-of-N-and-NLogN-with-explanation"
        },
        {
            "discussion_title": "4ms O(n) / 8ms O(nlogn) C++",
            "discussion_vote": "99",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-size-subarray-sum/discuss/59090/4ms-O(n)-8ms-O(nlogn)-C%2B%2B"
        },
        {
            "discussion_title": "O(N),O(NLogN) solutions, both O(1) space",
            "discussion_vote": "79",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/minimum-size-subarray-sum/discuss/59123/O(N)O(NLogN)-solutions-both-O(1)-space"
        },
        {
            "discussion_title": "O(N)  template for Minimum Size Subarray Sum & Minimum Window Substring & Longest Substring Without Repeating Characters",
            "discussion_vote": "56",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-size-subarray-sum/discuss/59110/O(N)-template-for-Minimum-Size-Subarray-Sum-and-Minimum-Window-Substring-and-Longest-Substring-Without-Repeating-Characters"
        }
    ],
    "210": [
        {
            "discussion_title": "Two AC solution in Java using BFS and DFS with explanation",
            "discussion_vote": "151",
            "discussion_views": "40.0K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-ii/discuss/59317/Two-AC-solution-in-Java-using-BFS-and-DFS-with-explanation"
        },
        {
            "discussion_title": "20+ lines C++ BFS/DFS Solutions",
            "discussion_vote": "59",
            "discussion_views": "15.7K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-ii/discuss/59316/20%2B-lines-C%2B%2B-BFSDFS-Solutions"
        },
        {
            "discussion_title": "Concise JAVA solution based on BFS with comments",
            "discussion_vote": "53",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-ii/discuss/59330/Concise-JAVA-solution-based-on-BFS-with-comments"
        },
        {
            "discussion_title": "Python dfs, bfs solutions with comments.",
            "discussion_vote": "40",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-ii/discuss/59321/Python-dfs-bfs-solutions-with-comments."
        },
        {
            "discussion_title": "Java DFS double cache visiting each vertex once 433ms",
            "discussion_vote": "33",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-ii/discuss/59342/Java-DFS-double-cache-visiting-each-vertex-once-433ms"
        }
    ],
    "211": [
        {
            "discussion_title": "My simple and clean Java code",
            "discussion_vote": "91",
            "discussion_views": "33.4K",
            "discussion_link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/discuss/59554/My-simple-and-clean-Java-code"
        },
        {
            "discussion_title": "80ms Clear C++ Code with Detailed Explanations",
            "discussion_vote": "66",
            "discussion_views": "19.8K",
            "discussion_link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/discuss/59552/80ms-Clear-C%2B%2B-Code-with-Detailed-Explanations"
        },
        {
            "discussion_title": "Python 168ms-beat-100% solution",
            "discussion_vote": "35",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/discuss/59549/Python-168ms-beat-100-solution"
        },
        {
            "discussion_title": "Tree solutions, 18-20 lines",
            "discussion_vote": "31",
            "discussion_views": "9.3K",
            "discussion_link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/discuss/59576/Tree-solutions-18-20-lines"
        },
        {
            "discussion_title": "My JAVA Trie based solution",
            "discussion_vote": "25",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/add-and-search-word-data-structure-design/discuss/59633/My-JAVA-Trie-based-solution"
        }
    ],
    "212": [
        {
            "discussion_title": "Java 15ms Easiest Solution (100.00%)",
            "discussion_vote": "587",
            "discussion_views": "64.0K",
            "discussion_link": "https://leetcode.com/problems/word-search-ii/discuss/59780/Java-15ms-Easiest-Solution-(100.00)"
        },
        {
            "discussion_title": "My simple and clean Java code using DFS and Trie",
            "discussion_vote": "103",
            "discussion_views": "28.6K",
            "discussion_link": "https://leetcode.com/problems/word-search-ii/discuss/59784/My-simple-and-clean-Java-code-using-DFS-and-Trie"
        },
        {
            "discussion_title": "Test Case [a], [a, a] doesn't make sense?",
            "discussion_vote": "40",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/word-search-ii/discuss/59851/Test-Case-a-a-a-doesn't-make-sense"
        },
        {
            "discussion_title": "Python code use trie and dfs 380ms",
            "discussion_vote": "40",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/word-search-ii/discuss/59864/Python-code-use-trie-and-dfs-380ms"
        },
        {
            "discussion_title": "27 lines, uses complex numbers",
            "discussion_vote": "29",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/word-search-ii/discuss/59804/27-lines-uses-complex-numbers"
        }
    ],
    "213": [
        {
            "discussion_title": "Simple AC solution in Java in O(n) with explanation",
            "discussion_vote": "280",
            "discussion_views": "42.7K",
            "discussion_link": "https://leetcode.com/problems/house-robber-ii/discuss/59934/Simple-AC-solution-in-Java-in-O(n)-with-explanation"
        },
        {
            "discussion_title": "9-lines 0ms O(1)-Space C++ solution",
            "discussion_vote": "127",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/house-robber-ii/discuss/59921/9-lines-0ms-O(1)-Space-C%2B%2B-solution"
        },
        {
            "discussion_title": "Twice pass solution, C++",
            "discussion_vote": "36",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/house-robber-ii/discuss/59944/Twice-pass-solution-C%2B%2B"
        },
        {
            "discussion_title": "[C++] Super Simple 0ms solution with explanation",
            "discussion_vote": "35",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/house-robber-ii/discuss/59986/C%2B%2B-Super-Simple-0ms-solution-with-explanation"
        },
        {
            "discussion_title": "Good performance DP solution using Java",
            "discussion_vote": "23",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/house-robber-ii/discuss/60044/Good-performance-DP-solution-using-Java"
        }
    ],
    "214": [
        {
            "discussion_title": "Clean KMP solution with super detailed explanation",
            "discussion_vote": "239",
            "discussion_views": "40.9K",
            "discussion_link": "https://leetcode.com/problems/shortest-palindrome/discuss/60113/Clean-KMP-solution-with-super-detailed-explanation"
        },
        {
            "discussion_title": "My 7-lines recursive Java solution",
            "discussion_vote": "179",
            "discussion_views": "41.0K",
            "discussion_link": "https://leetcode.com/problems/shortest-palindrome/discuss/60098/My-7-lines-recursive-Java-solution"
        },
        {
            "discussion_title": "C++ 8 ms KMP-based O(n) time & O(n) memory solution",
            "discussion_vote": "135",
            "discussion_views": "25.4K",
            "discussion_link": "https://leetcode.com/problems/shortest-palindrome/discuss/60141/C%2B%2B-8-ms-KMP-based-O(n)-time-and-O(n)-memory-solution"
        },
        {
            "discussion_title": "AC in 288 ms, simple brute force",
            "discussion_vote": "120",
            "discussion_views": "16.9K",
            "discussion_link": "https://leetcode.com/problems/shortest-palindrome/discuss/60099/AC-in-288-ms-simple-brute-force"
        },
        {
            "discussion_title": "My 9-lines three pointers Java solution with explanation",
            "discussion_vote": "66",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/shortest-palindrome/discuss/60106/My-9-lines-three-pointers-Java-solution-with-explanation"
        }
    ],
    "215": [
        {
            "discussion_title": "Solution explained",
            "discussion_vote": "498",
            "discussion_views": "124.9K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/60294/Solution-explained"
        },
        {
            "discussion_title": "C++ Partition/Max-Heap/priority_queue/multiset",
            "discussion_vote": "332",
            "discussion_views": "50.3K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/60309/C%2B%2B-PartitionMax-Heappriority_queuemultiset"
        },
        {
            "discussion_title": "AC Clean QuickSelect Java solution avg. O(n) time",
            "discussion_vote": "132",
            "discussion_views": "49.2K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/60312/AC-Clean-QuickSelect-Java-solution-avg.-O(n)-time"
        },
        {
            "discussion_title": "Python different solutions with comments (bubble sort, selection sort, heap sort and quick sort).",
            "discussion_vote": "87",
            "discussion_views": "17.7K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/60306/Python-different-solutions-with-comments-(bubble-sort-selection-sort-heap-sort-and-quick-sort)."
        },
        {
            "discussion_title": "Concise JAVA solution based on Quick Select",
            "discussion_vote": "68",
            "discussion_views": "24.8K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/60333/Concise-JAVA-solution-based-on-Quick-Select"
        }
    ],
    "216": [
        {
            "discussion_title": "Simple and clean Java code, backtracking.",
            "discussion_vote": "73",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iii/discuss/60614/Simple-and-clean-Java-code-backtracking."
        },
        {
            "discussion_title": "My C++ solution, backtracking.",
            "discussion_vote": "44",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iii/discuss/60621/My-C%2B%2B-solution-backtracking."
        },
        {
            "discussion_title": "Fast, easy Java code, with explanation!",
            "discussion_vote": "29",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iii/discuss/60631/Fast-easy-Java-code-with-explanation!"
        },
        {
            "discussion_title": "Use backtrack c++ solution, easy to understand.",
            "discussion_vote": "23",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iii/discuss/60629/Use-backtrack-c%2B%2B-solution-easy-to-understand."
        },
        {
            "discussion_title": "Clean 1/6/7-liners (AC)",
            "discussion_vote": "18",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iii/discuss/60624/Clean-167-liners-(AC)"
        }
    ],
    "217": [
        {
            "discussion_title": "Possible solutions.",
            "discussion_vote": "215",
            "discussion_views": "52.1K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate/discuss/60858/Possible-solutions."
        },
        {
            "discussion_title": "Single line C++ solution 60ms",
            "discussion_vote": "155",
            "discussion_views": "19.5K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate/discuss/60898/Single-line-C%2B%2B-solution-60ms"
        },
        {
            "discussion_title": "One line solution in python",
            "discussion_vote": "58",
            "discussion_views": "11.6K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate/discuss/60850/One-line-solution-in-python"
        },
        {
            "discussion_title": "5 lines in Java",
            "discussion_vote": "54",
            "discussion_views": "20.5K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate/discuss/60861/5-lines-in-Java"
        },
        {
            "discussion_title": "C++ solution. simply one line.",
            "discussion_vote": "43",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate/discuss/60909/C%2B%2B-solution.-simply-one-line."
        }
    ],
    "218": [
        {
            "discussion_title": "(Guaranteed) Really Detailed and Good (Perfect) Explanation of The Skyline Problem",
            "discussion_vote": "649",
            "discussion_views": "65.4K",
            "discussion_link": "https://leetcode.com/problems/the-skyline-problem/discuss/61197/(Guaranteed)-Really-Detailed-and-Good-(Perfect)-Explanation-of-The-Skyline-Problem"
        },
        {
            "discussion_title": "Short Java solution",
            "discussion_vote": "256",
            "discussion_views": "55.5K",
            "discussion_link": "https://leetcode.com/problems/the-skyline-problem/discuss/61193/Short-Java-solution"
        },
        {
            "discussion_title": "Once for all, explanation with clean Java code(O(n^2)time, O(n) space)",
            "discussion_vote": "122",
            "discussion_views": "20.0K",
            "discussion_link": "https://leetcode.com/problems/the-skyline-problem/discuss/61192/Once-for-all-explanation-with-clean-Java-code(O(n2)time-O(n)-space)"
        },
        {
            "discussion_title": "My C++ code using one priority queue (812 ms)",
            "discussion_vote": "96",
            "discussion_views": "23.0K",
            "discussion_link": "https://leetcode.com/problems/the-skyline-problem/discuss/61279/My-C%2B%2B-code-using-one-priority-queue-(812-ms)"
        },
        {
            "discussion_title": "Share my divide and conquer java solution, 464 ms",
            "discussion_vote": "76",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/the-skyline-problem/discuss/61246/Share-my-divide-and-conquer-java-solution-464-ms"
        }
    ],
    "219": [
        {
            "discussion_title": "Simple Java solution",
            "discussion_vote": "307",
            "discussion_views": "42.8K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-ii/discuss/61372/Simple-Java-solution"
        },
        {
            "discussion_title": "C++ solution with unordered_set",
            "discussion_vote": "77",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-ii/discuss/61390/C%2B%2B-solution-with-unordered_set"
        },
        {
            "discussion_title": "Short AC JAVA solution",
            "discussion_vote": "68",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-ii/discuss/61397/Short-AC-JAVA-solution"
        },
        {
            "discussion_title": "Python concise solution with dictionary.",
            "discussion_vote": "58",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-ii/discuss/61375/Python-concise-solution-with-dictionary."
        },
        {
            "discussion_title": "C++ 6 line solution. simple code and easy understanding",
            "discussion_vote": "33",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-ii/discuss/61378/C%2B%2B-6-line-solution.-simple-code-and-easy-understanding"
        }
    ],
    "220": [
        {
            "discussion_title": "AC O(N) solution in Java using buckets with explanation",
            "discussion_vote": "314",
            "discussion_views": "58.1K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-iii/discuss/61645/AC-O(N)-solution-in-Java-using-buckets-with-explanation"
        },
        {
            "discussion_title": "Java O(N lg K) solution",
            "discussion_vote": "176",
            "discussion_views": "35.8K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-iii/discuss/61655/Java-O(N-lg-K)-solution"
        },
        {
            "discussion_title": "Java/Python one pass solution, O(n) time O(n) space using buckets",
            "discussion_vote": "163",
            "discussion_views": "25.3K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-iii/discuss/61639/JavaPython-one-pass-solution-O(n)-time-O(n)-space-using-buckets"
        },
        {
            "discussion_title": "C++ using set (less 10 lines), with simple explanation.",
            "discussion_vote": "125",
            "discussion_views": "22.0K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-iii/discuss/61641/C%2B%2B-using-set-(less-10-lines)-with-simple-explanation."
        },
        {
            "discussion_title": "O(n) Python using buckets with explanation, 10 lines.",
            "discussion_vote": "46",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/contains-duplicate-iii/discuss/61731/O(n)-Python-using-buckets-with-explanation-10-lines."
        }
    ],
    "221": [
        {
            "discussion_title": "C++ Dynamic Programming",
            "discussion_vote": "433",
            "discussion_views": "39.3K",
            "discussion_link": "https://leetcode.com/problems/maximal-square/discuss/61803/C%2B%2B-Dynamic-Programming"
        },
        {
            "discussion_title": "Extremely Simple Java Solution :)",
            "discussion_vote": "292",
            "discussion_views": "28.9K",
            "discussion_link": "https://leetcode.com/problems/maximal-square/discuss/61802/Extremely-Simple-Java-Solution-%3A)"
        },
        {
            "discussion_title": "Accepted clean Java DP solution",
            "discussion_vote": "78",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/maximal-square/discuss/61876/Accepted-clean-Java-DP-solution"
        },
        {
            "discussion_title": "6 lines, Visual Explanation, O(mn)",
            "discussion_vote": "30",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/maximal-square/discuss/61935/6-lines-Visual-Explanation-O(mn)"
        },
        {
            "discussion_title": "Clear C++ solution, no extra space, 12 ms.",
            "discussion_vote": "25",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/maximal-square/discuss/61811/Clear-C%2B%2B-solution-no-extra-space-12-ms."
        }
    ],
    "222": [
        {
            "discussion_title": "Concise Java solutions O(log(n)^2)",
            "discussion_vote": "372",
            "discussion_views": "52.6K",
            "discussion_link": "https://leetcode.com/problems/count-complete-tree-nodes/discuss/61958/Concise-Java-solutions-O(log(n)2)"
        },
        {
            "discussion_title": "Easy short c++ recursive solution",
            "discussion_vote": "191",
            "discussion_views": "21.7K",
            "discussion_link": "https://leetcode.com/problems/count-complete-tree-nodes/discuss/61953/Easy-short-c%2B%2B-recursive-solution"
        },
        {
            "discussion_title": "Accepted Easy Understand Java Solution",
            "discussion_vote": "152",
            "discussion_views": "24.8K",
            "discussion_link": "https://leetcode.com/problems/count-complete-tree-nodes/discuss/61948/Accepted-Easy-Understand-Java-Solution"
        },
        {
            "discussion_title": "My JAVA solution with explanation which beats 99%",
            "discussion_vote": "63",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/count-complete-tree-nodes/discuss/61950/My-JAVA-solution-with-explanation-which-beats-99"
        },
        {
            "discussion_title": "A very clear recursive solution, isn't it?",
            "discussion_vote": "56",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/count-complete-tree-nodes/discuss/61967/A-very-clear-recursive-solution-isn't-it"
        }
    ],
    "223": [
        {
            "discussion_title": "If you want to laugh, look at my solution",
            "discussion_vote": "404",
            "discussion_views": "28.0K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area/discuss/62142/If-you-want-to-laugh-look-at-my-solution"
        },
        {
            "discussion_title": "Just another short way",
            "discussion_vote": "273",
            "discussion_views": "25.0K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area/discuss/62149/Just-another-short-way"
        },
        {
            "discussion_title": "My Java solution [Sum of areas - Overlapped area]",
            "discussion_vote": "178",
            "discussion_views": "20.1K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area/discuss/62138/My-Java-solution-Sum-of-areas-Overlapped-area"
        },
        {
            "discussion_title": "Python concise solution.",
            "discussion_vote": "46",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area/discuss/62139/Python-concise-solution."
        },
        {
            "discussion_title": "An explanation in plain language",
            "discussion_vote": "37",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area/discuss/62257/An-explanation-in-plain-language"
        }
    ],
    "224": [
        {
            "discussion_title": "Iterative Java solution with stack",
            "discussion_vote": "327",
            "discussion_views": "39.6K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator/discuss/62361/Iterative-Java-solution-with-stack"
        },
        {
            "discussion_title": "JAVA-----------Easy Version To Understand!!!!!",
            "discussion_vote": "268",
            "discussion_views": "21.0K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator/discuss/62362/JAVA-Easy-Version-To-Understand!!!!!"
        },
        {
            "discussion_title": "16 ms solution in C++ with stacks",
            "discussion_vote": "80",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator/discuss/62377/16-ms-solution-in-C%2B%2B-with-stacks"
        },
        {
            "discussion_title": "Easy 18 lines C++, 16 lines Python",
            "discussion_vote": "67",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator/discuss/62344/Easy-18-lines-C%2B%2B-16-lines-Python"
        },
        {
            "discussion_title": "Java solution/Stack",
            "discussion_vote": "43",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator/discuss/62430/Java-solutionStack"
        }
    ],
    "225": [
        {
            "discussion_title": "A simple C++ solution",
            "discussion_vote": "180",
            "discussion_views": "21.0K",
            "discussion_link": "https://leetcode.com/problems/implement-stack-using-queues/discuss/62527/A-simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "Only push is O(n), others are O(1). Using one queue. Combination of two shared solutions",
            "discussion_vote": "102",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/implement-stack-using-queues/discuss/62519/Only-push-is-O(n)-others-are-O(1).-Using-one-queue.-Combination-of-two-shared-solutions"
        },
        {
            "discussion_title": "Java solutions about three ways one of which utilizes one queue, and the others utilize two queues",
            "discussion_vote": "62",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/implement-stack-using-queues/discuss/62533/Java-solutions-about-three-ways-one-of-which-utilizes-one-queue-and-the-others-utilize-two-queues"
        },
        {
            "discussion_title": "Concise 1 Queue - Java, C++, Python",
            "discussion_vote": "57",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/implement-stack-using-queues/discuss/62516/Concise-1-Queue-Java-C%2B%2B-Python"
        },
        {
            "discussion_title": "O(1) purely with queues",
            "discussion_vote": "36",
            "discussion_views": "12.2K",
            "discussion_link": "https://leetcode.com/problems/implement-stack-using-queues/discuss/62522/O(1)-purely-with-queues"
        }
    ],
    "226": [
        {
            "discussion_title": "Straightforward DFS recursive, iterative, BFS solutions",
            "discussion_vote": "172",
            "discussion_views": "41.2K",
            "discussion_link": "https://leetcode.com/problems/invert-binary-tree/discuss/62707/Straightforward-DFS-recursive-iterative-BFS-solutions"
        },
        {
            "discussion_title": "3-4 lines Python",
            "discussion_vote": "76",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/invert-binary-tree/discuss/62714/3-4-lines-Python"
        },
        {
            "discussion_title": "Recursive and non-recursive C++ both 4ms",
            "discussion_vote": "65",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/invert-binary-tree/discuss/62731/Recursive-and-non-recursive-C%2B%2B-both-4ms"
        },
        {
            "discussion_title": "Python solutions (recursively, dfs, bfs).",
            "discussion_vote": "35",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/invert-binary-tree/discuss/62705/Python-solutions-(recursively-dfs-bfs)."
        },
        {
            "discussion_title": "My simple recursion java solution",
            "discussion_vote": "32",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/invert-binary-tree/discuss/62719/My-simple-recursion-java-solution"
        }
    ],
    "227": [
        {
            "discussion_title": "Share my  java solution",
            "discussion_vote": "392",
            "discussion_views": "45.8K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-ii/discuss/63003/Share-my-java-solution"
        },
        {
            "discussion_title": "17 lines C++, easy, 20 ms",
            "discussion_vote": "125",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-ii/discuss/63004/17-lines-C%2B%2B-easy-20-ms"
        },
        {
            "discussion_title": "Java straight forward iteration Solution with comments, No Stack, O(N) & O(1)",
            "discussion_vote": "67",
            "discussion_views": "16.8K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-ii/discuss/62996/Java-straight-forward-iteration-Solution-with-comments-No-Stack-O(N)-and-O(1)"
        },
        {
            "discussion_title": "My 16 ms No stack One pass short C++ solution",
            "discussion_vote": "40",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-ii/discuss/63014/My-16-ms-No-stack-One-pass-short-C%2B%2B-solution"
        },
        {
            "discussion_title": "Python short solution with stack.",
            "discussion_vote": "32",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-ii/discuss/63076/Python-short-solution-with-stack."
        }
    ],
    "228": [
        {
            "discussion_title": "Accepted JAVA solution--easy to understand",
            "discussion_vote": "92",
            "discussion_views": "24.6K",
            "discussion_link": "https://leetcode.com/problems/summary-ranges/discuss/63219/Accepted-JAVA-solution-easy-to-understand"
        },
        {
            "discussion_title": "6 lines in Python",
            "discussion_vote": "62",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/summary-ranges/discuss/63193/6-lines-in-Python"
        },
        {
            "discussion_title": "10 line c++ easy understand",
            "discussion_vote": "42",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/summary-ranges/discuss/63284/10-line-c%2B%2B-easy-understand"
        },
        {
            "discussion_title": "My concise Java solution",
            "discussion_vote": "30",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/summary-ranges/discuss/63386/My-concise-Java-solution"
        },
        {
            "discussion_title": "Idea + 1-Liner: Group by number-index",
            "discussion_vote": "28",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/summary-ranges/discuss/63474/Idea-%2B-1-Liner%3A-Group-by-number-index"
        }
    ],
    "229": [
        {
            "discussion_title": "Boyer-Moore Majority Vote algorithm and my elaboration",
            "discussion_vote": "281",
            "discussion_views": "64.6K",
            "discussion_link": "https://leetcode.com/problems/majority-element-ii/discuss/63520/Boyer-Moore-Majority-Vote-algorithm-and-my-elaboration"
        },
        {
            "discussion_title": "JAVA-------------------Easy Version To Understand!!!!!!!!!!!!",
            "discussion_vote": "108",
            "discussion_views": "30.6K",
            "discussion_link": "https://leetcode.com/problems/majority-element-ii/discuss/63500/JAVA-Easy-Version-To-Understand!!!!!!!!!!!!"
        },
        {
            "discussion_title": "6 lines, general case O(N) time and O(k) space",
            "discussion_vote": "76",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/majority-element-ii/discuss/63502/6-lines-general-case-O(N)-time-and-O(k)-space"
        },
        {
            "discussion_title": "Boyer-Moore Majority Vote algorithm generalization",
            "discussion_vote": "69",
            "discussion_views": "23.1K",
            "discussion_link": "https://leetcode.com/problems/majority-element-ii/discuss/63522/Boyer-Moore-Majority-Vote-algorithm-generalization"
        },
        {
            "discussion_title": "My C++ Solution",
            "discussion_vote": "60",
            "discussion_views": "14.7K",
            "discussion_link": "https://leetcode.com/problems/majority-element-ii/discuss/63571/My-C%2B%2B-Solution"
        }
    ],
    "230": [
        {
            "discussion_title": "3 ways implemented in JAVA (Python): Binary Search, in-order iterative & recursive",
            "discussion_vote": "358",
            "discussion_views": "89.6K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/discuss/63660/3-ways-implemented-in-JAVA-(Python)%3A-Binary-Search-in-order-iterative-and-recursive"
        },
        {
            "discussion_title": "What if you could modify the BST node's structure?",
            "discussion_vote": "106",
            "discussion_views": "24.3K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/discuss/63659/What-if-you-could-modify-the-BST-node's-structure"
        },
        {
            "discussion_title": "Two Easiest In Order Traverse (Java)",
            "discussion_vote": "65",
            "discussion_views": "17.0K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/discuss/63783/Two-Easiest-In-Order-Traverse-(Java)"
        },
        {
            "discussion_title": "4 Lines in C++.",
            "discussion_vote": "62",
            "discussion_views": "31.2K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/discuss/63673/4-Lines-in-C%2B%2B."
        },
        {
            "discussion_title": "Python Easy Iterative and Recursive Solution",
            "discussion_vote": "44",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/discuss/63829/Python-Easy-Iterative-and-Recursive-Solution"
        }
    ],
    "231": [
        {
            "discussion_title": "Using n&(n-1) trick",
            "discussion_vote": "287",
            "discussion_views": "39.8K",
            "discussion_link": "https://leetcode.com/problems/power-of-two/discuss/63974/Using-nand(n-1)-trick"
        },
        {
            "discussion_title": "4 different ways to solve -- Iterative / Recursive / Bit operation / Math",
            "discussion_vote": "123",
            "discussion_views": "12.6K",
            "discussion_link": "https://leetcode.com/problems/power-of-two/discuss/63966/4-different-ways-to-solve-Iterative-Recursive-Bit-operation-Math"
        },
        {
            "discussion_title": "One line java solution using bitCount",
            "discussion_vote": "93",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/power-of-two/discuss/63972/One-line-java-solution-using-bitCount"
        },
        {
            "discussion_title": "One line of C++",
            "discussion_vote": "57",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/power-of-two/discuss/63993/One-line-of-C%2B%2B"
        },
        {
            "discussion_title": "Python one line solution",
            "discussion_vote": "41",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/power-of-two/discuss/64027/Python-one-line-solution"
        }
    ],
    "232": [
        {
            "discussion_title": "Short O(1) amortized, C++ / Java / Ruby",
            "discussion_vote": "293",
            "discussion_views": "36.1K",
            "discussion_link": "https://leetcode.com/problems/implement-queue-using-stacks/discuss/64206/Short-O(1)-amortized-C%2B%2B-Java-Ruby"
        },
        {
            "discussion_title": "Easy Java solution, just edit push() method",
            "discussion_vote": "36",
            "discussion_views": "15.4K",
            "discussion_link": "https://leetcode.com/problems/implement-queue-using-stacks/discuss/64197/Easy-Java-solution-just-edit-push()-method"
        },
        {
            "discussion_title": "0 ms C++ solution using one Stack w/ explanation.",
            "discussion_vote": "26",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/implement-queue-using-stacks/discuss/64196/0-ms-C%2B%2B-solution-using-one-Stack-w-explanation."
        },
        {
            "discussion_title": "Share my python solution (32ms)",
            "discussion_vote": "19",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/implement-queue-using-stacks/discuss/64198/Share-my-python-solution-(32ms)"
        },
        {
            "discussion_title": "Do you know when we should use two stacks to implement a queue?",
            "discussion_vote": "14",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/implement-queue-using-stacks/discuss/64284/Do-you-know-when-we-should-use-two-stacks-to-implement-a-queue"
        }
    ],
    "233": [
        {
            "discussion_title": "4+ lines, O(log n), C++/Java/Python",
            "discussion_vote": "314",
            "discussion_views": "40.6K",
            "discussion_link": "https://leetcode.com/problems/number-of-digit-one/discuss/64381/4%2B-lines-O(log-n)-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "AC short Java solution",
            "discussion_vote": "141",
            "discussion_views": "12.9K",
            "discussion_link": "https://leetcode.com/problems/number-of-digit-one/discuss/64390/AC-short-Java-solution"
        },
        {
            "discussion_title": "Java/Python one pass solution easy to understand",
            "discussion_vote": "125",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-digit-one/discuss/64382/JavaPython-one-pass-solution-easy-to-understand"
        },
        {
            "discussion_title": "0ms o(lgn) accepted c++ solution using counting principle with explanation",
            "discussion_vote": "29",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/number-of-digit-one/discuss/64476/0ms-o(lgn)-accepted-c%2B%2B-solution-using-counting-principle-with-explanation"
        },
        {
            "discussion_title": "0 ms recursive solution",
            "discussion_vote": "24",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-digit-one/discuss/64397/0-ms-recursive-solution"
        }
    ],
    "234": [
        {
            "discussion_title": "Reversing a list is not considered \"O(1) space\"",
            "discussion_vote": "345",
            "discussion_views": "83.9K",
            "discussion_link": "https://leetcode.com/problems/palindrome-linked-list/discuss/64493/Reversing-a-list-is-not-considered-%22O(1)-space%22"
        },
        {
            "discussion_title": "Java, easy to understand",
            "discussion_vote": "207",
            "discussion_views": "54.2K",
            "discussion_link": "https://leetcode.com/problems/palindrome-linked-list/discuss/64501/Java-easy-to-understand"
        },
        {
            "discussion_title": "11 lines, 12 with restore, O(n) time, O(1) space",
            "discussion_vote": "178",
            "discussion_views": "54.1K",
            "discussion_link": "https://leetcode.com/problems/palindrome-linked-list/discuss/64500/11-lines-12-with-restore-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Share my C++ solution, O(n) time and O(1) memory",
            "discussion_vote": "124",
            "discussion_views": "43.6K",
            "discussion_link": "https://leetcode.com/problems/palindrome-linked-list/discuss/64489/Share-my-C%2B%2B-solution-O(n)-time-and-O(1)-memory"
        },
        {
            "discussion_title": "My easy understand C++ solution",
            "discussion_vote": "119",
            "discussion_views": "12.9K",
            "discussion_link": "https://leetcode.com/problems/palindrome-linked-list/discuss/64490/My-easy-understand-C%2B%2B-solution"
        }
    ],
    "235": [
        {
            "discussion_title": "3 lines with O(1) space, 1-Liners, Alternatives",
            "discussion_vote": "347",
            "discussion_views": "56.7K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/discuss/64963/3-lines-with-O(1)-space-1-Liners-Alternatives"
        },
        {
            "discussion_title": "My Java Solution",
            "discussion_vote": "146",
            "discussion_views": "34.1K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/discuss/64954/My-Java-Solution"
        },
        {
            "discussion_title": "C++ Recursive and Iterative",
            "discussion_vote": "113",
            "discussion_views": "17.3K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/discuss/64980/C%2B%2B-Recursive-and-Iterative"
        },
        {
            "discussion_title": "Python Iterative Solution",
            "discussion_vote": "46",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/discuss/65074/Python-Iterative-Solution"
        },
        {
            "discussion_title": "11ms java solution, 3 lines",
            "discussion_vote": "20",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/discuss/65008/11ms-java-solution-3-lines"
        }
    ],
    "236": [
        {
            "discussion_title": "4 lines C++/Java/Python/Ruby",
            "discussion_vote": "504",
            "discussion_views": "105.0K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/discuss/65225/4-lines-C%2B%2BJavaPythonRuby"
        },
        {
            "discussion_title": "My Java Solution which is easy to understand",
            "discussion_vote": "168",
            "discussion_views": "55.5K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/discuss/65226/My-Java-Solution-which-is-easy-to-understand"
        },
        {
            "discussion_title": "Java/Python iterative solution",
            "discussion_vote": "160",
            "discussion_views": "31.7K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/discuss/65236/JavaPython-iterative-solution"
        },
        {
            "discussion_title": "Iterative Solutions in Python/C++",
            "discussion_vote": "48",
            "discussion_views": "23.2K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/discuss/65245/Iterative-Solutions-in-PythonC%2B%2B"
        },
        {
            "discussion_title": "Very simple dfs c++ solution , only 10 lines",
            "discussion_vote": "38",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/discuss/65375/Very-simple-dfs-c%2B%2B-solution-only-10-lines"
        }
    ],
    "237": [
        {
            "discussion_title": "Why LeetCode accepted such stupid question?",
            "discussion_vote": "217",
            "discussion_views": "38.1K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-linked-list/discuss/65454/Why-LeetCode-accepted-such-stupid-question"
        },
        {
            "discussion_title": "1-3 lines, C++/Java/Python/C/C#/JavaScript/Ruby",
            "discussion_vote": "174",
            "discussion_views": "48.1K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-linked-list/discuss/65455/1-3-lines-C%2B%2BJavaPythonCCJavaScriptRuby"
        },
        {
            "discussion_title": "Easy solution in java",
            "discussion_vote": "55",
            "discussion_views": "23.2K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-linked-list/discuss/65464/Easy-solution-in-java"
        },
        {
            "discussion_title": "This question is wrong.You cannot delete the node",
            "discussion_vote": "45",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-linked-list/discuss/65461/This-question-is-wrong.You-cannot-delete-the-node"
        },
        {
            "discussion_title": "Easy question, Easy solution(JAVA)",
            "discussion_vote": "25",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-linked-list/discuss/65482/Easy-question-Easy-solution(JAVA)"
        }
    ],
    "238": [
        {
            "discussion_title": "Simple Java solution in O(n) without extra space",
            "discussion_vote": "678",
            "discussion_views": "102.9K",
            "discussion_link": "https://leetcode.com/problems/product-of-array-except-self/discuss/65622/Simple-Java-solution-in-O(n)-without-extra-space"
        },
        {
            "discussion_title": "Python solution (Accepted), O(n) time, O(1) space",
            "discussion_vote": "179",
            "discussion_views": "25.6K",
            "discussion_link": "https://leetcode.com/problems/product-of-array-except-self/discuss/65625/Python-solution-(Accepted)-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "My simple Java solution",
            "discussion_vote": "178",
            "discussion_views": "29.3K",
            "discussion_link": "https://leetcode.com/problems/product-of-array-except-self/discuss/65638/My-simple-Java-solution"
        },
        {
            "discussion_title": "O(n) time and O(1) space C++ solution with explanation",
            "discussion_vote": "145",
            "discussion_views": "23.7K",
            "discussion_link": "https://leetcode.com/problems/product-of-array-except-self/discuss/65627/O(n)-time-and-O(1)-space-C%2B%2B-solution-with-explanation"
        },
        {
            "discussion_title": "My solution beats 100% java solutions",
            "discussion_vote": "88",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/product-of-array-except-self/discuss/65632/My-solution-beats-100-java-solutions"
        }
    ],
    "239": [
        {
            "discussion_title": "Java O(n) solution using deque with explanation",
            "discussion_vote": "336",
            "discussion_views": "71.7K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-maximum/discuss/65884/Java-O(n)-solution-using-deque-with-explanation"
        },
        {
            "discussion_title": "O(n) solution in Java with two simple pass in the array",
            "discussion_vote": "276",
            "discussion_views": "32.9K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-maximum/discuss/65881/O(n)-solution-in-Java-with-two-simple-pass-in-the-array"
        },
        {
            "discussion_title": "This is a typical monotonic queue problem",
            "discussion_vote": "88",
            "discussion_views": "20.3K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-maximum/discuss/65885/This-is-a-typical-monotonic-queue-problem"
        },
        {
            "discussion_title": "Clean C++ O(n) solution using a deque",
            "discussion_vote": "81",
            "discussion_views": "21.7K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-maximum/discuss/65898/Clean-C%2B%2B-O(n)-solution-using-a-deque"
        },
        {
            "discussion_title": "My C++ O(n) deque based solution with explanation",
            "discussion_vote": "46",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-maximum/discuss/65956/My-C%2B%2B-O(n)-deque-based-solution-with-explanation"
        }
    ],
    "240": [
        {
            "discussion_title": "My concise O(m+n) Java solution",
            "discussion_vote": "548",
            "discussion_views": "52.2K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix-ii/discuss/66140/My-concise-O(m%2Bn)-Java-solution"
        },
        {
            "discussion_title": "C++ with O(m+n) complexity",
            "discussion_vote": "72",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix-ii/discuss/66142/C%2B%2B-with-O(m%2Bn)-complexity"
        },
        {
            "discussion_title": "*Java* an easy-to-understand divide and conquer method",
            "discussion_vote": "55",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix-ii/discuss/66147/*Java*-an-easy-to-understand-divide-and-conquer-method"
        },
        {
            "discussion_title": "6-9 lines C++/Python Solutions with Explanations",
            "discussion_vote": "49",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix-ii/discuss/66139/6-9-lines-C%2B%2BPython-Solutions-with-Explanations"
        },
        {
            "discussion_title": "Java short code, O(m+n)",
            "discussion_vote": "35",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/search-a-2d-matrix-ii/discuss/66247/Java-short-code-O(m%2Bn)"
        }
    ],
    "241": [
        {
            "discussion_title": "A recursive Java solution (284 ms)",
            "discussion_vote": "225",
            "discussion_views": "35.2K",
            "discussion_link": "https://leetcode.com/problems/different-ways-to-add-parentheses/discuss/66328/A-recursive-Java-solution-(284-ms)"
        },
        {
            "discussion_title": "C++ 4ms Recursive & DP solution with brief explanation",
            "discussion_vote": "137",
            "discussion_views": "20.4K",
            "discussion_link": "https://leetcode.com/problems/different-ways-to-add-parentheses/discuss/66331/C%2B%2B-4ms-Recursive-and-DP-solution-with-brief-explanation"
        },
        {
            "discussion_title": "1-11 lines Python, 9 lines C++",
            "discussion_vote": "96",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/different-ways-to-add-parentheses/discuss/66350/1-11-lines-Python-9-lines-C%2B%2B"
        },
        {
            "discussion_title": "Python easy to understand solution (divide and conquer).",
            "discussion_vote": "68",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/different-ways-to-add-parentheses/discuss/66419/Python-easy-to-understand-solution-(divide-and-conquer)."
        },
        {
            "discussion_title": "Share a clean and short JAVA solution",
            "discussion_vote": "62",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/different-ways-to-add-parentheses/discuss/66342/Share-a-clean-and-short-JAVA-solution"
        }
    ],
    "242": [
        {
            "discussion_title": "Accepted Java O(n) solution in 5 lines",
            "discussion_vote": "176",
            "discussion_views": "48.7K",
            "discussion_link": "https://leetcode.com/problems/valid-anagram/discuss/66484/Accepted-Java-O(n)-solution-in-5-lines"
        },
        {
            "discussion_title": "2 C++ Solutions with Explanations",
            "discussion_vote": "78",
            "discussion_views": "19.4K",
            "discussion_link": "https://leetcode.com/problems/valid-anagram/discuss/66519/2-C%2B%2B-Solutions-with-Explanations"
        },
        {
            "discussion_title": "Python solutions (sort and dictionary).",
            "discussion_vote": "43",
            "discussion_views": "13.1K",
            "discussion_link": "https://leetcode.com/problems/valid-anagram/discuss/66499/Python-solutions-(sort-and-dictionary)."
        },
        {
            "discussion_title": "Share my java solution",
            "discussion_vote": "38",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/valid-anagram/discuss/66550/Share-my-java-solution"
        },
        {
            "discussion_title": "Simple fast java solution (beats 97%)",
            "discussion_vote": "24",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/valid-anagram/discuss/66789/Simple-fast-java-solution-(beats-97)"
        }
    ],
    "257": [
        {
            "discussion_title": "Accepted Java simple solution in 8 lines",
            "discussion_vote": "213",
            "discussion_views": "56.2K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-paths/discuss/68258/Accepted-Java-simple-solution-in-8-lines"
        },
        {
            "discussion_title": "Python solutions (dfs+stack, bfs+queue, dfs recursively).",
            "discussion_vote": "83",
            "discussion_views": "13.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-paths/discuss/68272/Python-solutions-(dfs%2Bstack-bfs%2Bqueue-dfs-recursively)."
        },
        {
            "discussion_title": "Clean Java solution (Accepted) without any helper recursive function",
            "discussion_vote": "78",
            "discussion_views": "17.7K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-paths/discuss/68282/Clean-Java-solution-(Accepted)-without-any-helper-recursive-function"
        },
        {
            "discussion_title": "C++ simple 4ms recursive solution",
            "discussion_vote": "73",
            "discussion_views": "17.0K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-paths/discuss/68270/C%2B%2B-simple-4ms-recursive-solution"
        },
        {
            "discussion_title": "My Java solution in DFS, BFS, recursion",
            "discussion_vote": "56",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-paths/discuss/68278/My-Java-solution-in-DFS-BFS-recursion"
        }
    ],
    "258": [
        {
            "discussion_title": "Accepted C++ O(1)-time O(1)-space 1-Line Solution with Detail Explanations",
            "discussion_vote": "255",
            "discussion_views": "36.3K",
            "discussion_link": "https://leetcode.com/problems/add-digits/discuss/68580/Accepted-C%2B%2B-O(1)-time-O(1)-space-1-Line-Solution-with-Detail-Explanations"
        },
        {
            "discussion_title": "3 methods for python with explains",
            "discussion_vote": "72",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/add-digits/discuss/68572/3-methods-for-python-with-explains"
        },
        {
            "discussion_title": "Two lines C code, with explanation",
            "discussion_vote": "68",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/add-digits/discuss/68776/Two-lines-C-code-with-explanation"
        },
        {
            "discussion_title": "Simple Java Solution No recursion/ loop",
            "discussion_vote": "60",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/add-digits/discuss/68667/Simple-Java-Solution-No-recursion-loop"
        },
        {
            "discussion_title": "1 line Java Solution",
            "discussion_vote": "47",
            "discussion_views": "25.3K",
            "discussion_link": "https://leetcode.com/problems/add-digits/discuss/68588/1-line-Java-Solution"
        }
    ],
    "260": [
        {
            "discussion_title": "Accepted C++/Java O(n)-time O(1)-space Easy Solution with Detail Explanations",
            "discussion_vote": "614",
            "discussion_views": "62.7K",
            "discussion_link": "https://leetcode.com/problems/single-number-iii/discuss/68900/Accepted-C%2B%2BJava-O(n)-time-O(1)-space-Easy-Solution-with-Detail-Explanations"
        },
        {
            "discussion_title": "Sharing explanation of the solution",
            "discussion_vote": "416",
            "discussion_views": "22.8K",
            "discussion_link": "https://leetcode.com/problems/single-number-iii/discuss/68901/Sharing-explanation-of-the-solution"
        },
        {
            "discussion_title": "C++ solution O(n) time and O(1) space, easy-understaning with simple explanation",
            "discussion_vote": "106",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/single-number-iii/discuss/68921/C%2B%2B-solution-O(n)-time-and-O(1)-space-easy-understaning-with-simple-explanation"
        },
        {
            "discussion_title": "Bit manipulation beats 99.62%",
            "discussion_vote": "66",
            "discussion_views": "13.5K",
            "discussion_link": "https://leetcode.com/problems/single-number-iii/discuss/68923/Bit-manipulation-beats-99.62"
        },
        {
            "discussion_title": "Share my C++ solution,",
            "discussion_vote": "40",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/single-number-iii/discuss/68945/Share-my-C%2B%2B-solution"
        }
    ],
    "262": [
        {
            "discussion_title": "Solution without join",
            "discussion_vote": "49",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/trips-and-users/discuss/69159/Solution-without-join"
        },
        {
            "discussion_title": "Sharing my solution,",
            "discussion_vote": "45",
            "discussion_views": "19.5K",
            "discussion_link": "https://leetcode.com/problems/trips-and-users/discuss/69151/Sharing-my-solution"
        },
        {
            "discussion_title": "Question towards problem description",
            "discussion_vote": "15",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/trips-and-users/discuss/69198/Question-towards-problem-description"
        },
        {
            "discussion_title": "Sharing my solution",
            "discussion_vote": "10",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/trips-and-users/discuss/69204/Sharing-my-solution"
        },
        {
            "discussion_title": "My solution share",
            "discussion_vote": "5",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/trips-and-users/discuss/69195/My-solution-share"
        }
    ],
    "263": [
        {
            "discussion_title": "2-4 lines, every language",
            "discussion_vote": "198",
            "discussion_views": "40.1K",
            "discussion_link": "https://leetcode.com/problems/ugly-number/discuss/69214/2-4-lines-every-language"
        },
        {
            "discussion_title": "My 2ms java solution",
            "discussion_vote": "62",
            "discussion_views": "15.7K",
            "discussion_link": "https://leetcode.com/problems/ugly-number/discuss/69225/My-2ms-java-solution"
        },
        {
            "discussion_title": "Simple java solution with explanation",
            "discussion_vote": "35",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/ugly-number/discuss/69332/Simple-java-solution-with-explanation"
        },
        {
            "discussion_title": "My python solution",
            "discussion_vote": "29",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/ugly-number/discuss/69305/My-python-solution"
        },
        {
            "discussion_title": "Java solution, greatest divide by 2, 3, 5",
            "discussion_vote": "24",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/ugly-number/discuss/69308/Java-solution-greatest-divide-by-2-3-5"
        }
    ],
    "264": [
        {
            "discussion_title": "My 16ms C++ DP solution with short explanation",
            "discussion_vote": "299",
            "discussion_views": "32.5K",
            "discussion_link": "https://leetcode.com/problems/ugly-number-ii/discuss/69364/My-16ms-C%2B%2B-DP-solution-with-short-explanation"
        },
        {
            "discussion_title": "O(n) Java solution",
            "discussion_vote": "226",
            "discussion_views": "30.2K",
            "discussion_link": "https://leetcode.com/problems/ugly-number-ii/discuss/69362/O(n)-Java-solution"
        },
        {
            "discussion_title": "Elegant C++ Solution O(N) space time with detailed explanation.",
            "discussion_vote": "155",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/ugly-number-ii/discuss/69368/Elegant-C%2B%2B-Solution-O(N)-space-time-with-detailed-explanation."
        },
        {
            "discussion_title": "My expressive Python solution",
            "discussion_vote": "73",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/ugly-number-ii/discuss/69384/My-expressive-Python-solution"
        },
        {
            "discussion_title": "Java solution -- using PriorityQueue",
            "discussion_vote": "40",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/ugly-number-ii/discuss/69372/Java-solution-using-PriorityQueue"
        }
    ],
    "268": [
        {
            "discussion_title": "4 Line Simple Java Bit Manipulate Solution with Explaination",
            "discussion_vote": "287",
            "discussion_views": "41.6K",
            "discussion_link": "https://leetcode.com/problems/missing-number/discuss/69791/4-Line-Simple-Java-Bit-Manipulate-Solution-with-Explaination"
        },
        {
            "discussion_title": "3 different ideas: XOR, SUM, Binary Search. Java code",
            "discussion_vote": "213",
            "discussion_views": "35.4K",
            "discussion_link": "https://leetcode.com/problems/missing-number/discuss/69786/3-different-ideas%3A-XOR-SUM-Binary-Search.-Java-code"
        },
        {
            "discussion_title": "C++ solution using bit manipulation",
            "discussion_vote": "163",
            "discussion_views": "19.6K",
            "discussion_link": "https://leetcode.com/problems/missing-number/discuss/69777/C%2B%2B-solution-using-bit-manipulation"
        },
        {
            "discussion_title": "1+ lines Ruby, Python, Java, C++",
            "discussion_vote": "86",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/missing-number/discuss/69832/1%2B-lines-Ruby-Python-Java-C%2B%2B"
        },
        {
            "discussion_title": "Java solution O(1) space and O(n) in time",
            "discussion_vote": "56",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/missing-number/discuss/69795/Java-solution-O(1)-space-and-O(n)-in-time"
        }
    ],
    "273": [
        {
            "discussion_title": "My clean Java solution, very easy to understand",
            "discussion_vote": "362",
            "discussion_views": "54.7K",
            "discussion_link": "https://leetcode.com/problems/integer-to-english-words/discuss/70625/My-clean-Java-solution-very-easy-to-understand"
        },
        {
            "discussion_title": "Short clean Java solution",
            "discussion_vote": "186",
            "discussion_views": "19.2K",
            "discussion_link": "https://leetcode.com/problems/integer-to-english-words/discuss/70627/Short-clean-Java-solution"
        },
        {
            "discussion_title": "Fairly Clear 4ms C++ solution",
            "discussion_vote": "79",
            "discussion_views": "11.8K",
            "discussion_link": "https://leetcode.com/problems/integer-to-english-words/discuss/70651/Fairly-Clear-4ms-C%2B%2B-solution"
        },
        {
            "discussion_title": "Recursive Python",
            "discussion_vote": "77",
            "discussion_views": "10.3K",
            "discussion_link": "https://leetcode.com/problems/integer-to-english-words/discuss/70632/Recursive-Python"
        },
        {
            "discussion_title": "Python Clean Solution",
            "discussion_vote": "40",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/integer-to-english-words/discuss/70688/Python-Clean-Solution"
        }
    ],
    "274": [
        {
            "discussion_title": "My O(n) time solution use Java",
            "discussion_vote": "477",
            "discussion_views": "56.9K",
            "discussion_link": "https://leetcode.com/problems/h-index/discuss/70778/My-O(n)-time-solution-use-Java"
        },
        {
            "discussion_title": "Java bucket sort O(n) solution with detail explanation",
            "discussion_vote": "236",
            "discussion_views": "16.0K",
            "discussion_link": "https://leetcode.com/problems/h-index/discuss/70768/Java-bucket-sort-O(n)-solution-with-detail-explanation"
        },
        {
            "discussion_title": "A Clean O(N) Solution in Java",
            "discussion_vote": "88",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/h-index/discuss/70810/A-Clean-O(N)-Solution-in-Java"
        },
        {
            "discussion_title": "Java, O(n) time, with easy explanation.",
            "discussion_vote": "57",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/h-index/discuss/70818/Java-O(n)-time-with-easy-explanation."
        },
        {
            "discussion_title": "My easy solution",
            "discussion_vote": "47",
            "discussion_views": "8.7K",
            "discussion_link": "https://leetcode.com/problems/h-index/discuss/70918/My-easy-solution"
        }
    ],
    "275": [
        {
            "discussion_title": "Standard binary search",
            "discussion_vote": "80",
            "discussion_views": "27.9K",
            "discussion_link": "https://leetcode.com/problems/h-index-ii/discuss/71063/Standard-binary-search"
        },
        {
            "discussion_title": "Java binary search, simple and clean",
            "discussion_vote": "26",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/h-index-ii/discuss/71124/Java-binary-search-simple-and-clean"
        },
        {
            "discussion_title": "O(logN)-time O(1)-space Easy Solution with Detailed Explanations (C++/Java/Python)",
            "discussion_vote": "18",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/h-index-ii/discuss/71071/O(logN)-time-O(1)-space-Easy-Solution-with-Detailed-Explanations-(C%2B%2BJavaPython)"
        },
        {
            "discussion_title": "Very standard binary search using (start + 1 < end)",
            "discussion_vote": "14",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/h-index-ii/discuss/71115/Very-standard-binary-search-using-(start-%2B-1-less-end)"
        },
        {
            "discussion_title": "Share my C O(logN) solution with explanation.",
            "discussion_vote": "12",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/h-index-ii/discuss/71117/Share-my-C-O(logN)-solution-with-explanation."
        }
    ],
    "278": [
        {
            "discussion_title": "O(lgN) simple Java solution",
            "discussion_vote": "114",
            "discussion_views": "39.7K",
            "discussion_link": "https://leetcode.com/problems/first-bad-version/discuss/71296/O(lgN)-simple-Java-solution"
        },
        {
            "discussion_title": "A good warning to me to use  start+(end-start)/2 to avoid overflow",
            "discussion_vote": "103",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/first-bad-version/discuss/71311/A-good-warning-to-me-to-use-start%2B(end-start)2-to-avoid-overflow"
        },
        {
            "discussion_title": "Time limit exceed",
            "discussion_vote": "38",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/first-bad-version/discuss/71302/Time-limit-exceed"
        },
        {
            "discussion_title": "Short C++ answer and minimize API calls",
            "discussion_vote": "27",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/first-bad-version/discuss/71312/Short-C%2B%2B-answer-and-minimize-API-calls"
        },
        {
            "discussion_title": "1-liner in Ruby / Python",
            "discussion_vote": "19",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/first-bad-version/discuss/71333/1-liner-in-Ruby-Python"
        }
    ],
    "279": [
        {
            "discussion_title": "Summary of 4 different solutions (BFS, DP, static DP and mathematics)",
            "discussion_vote": "367",
            "discussion_views": "84.6K",
            "discussion_link": "https://leetcode.com/problems/perfect-squares/discuss/71488/Summary-of-4-different-solutions-(BFS-DP-static-DP-and-mathematics)"
        },
        {
            "discussion_title": "An easy understanding DP solution in Java",
            "discussion_vote": "270",
            "discussion_views": "36.5K",
            "discussion_link": "https://leetcode.com/problems/perfect-squares/discuss/71495/An-easy-understanding-DP-solution-in-Java"
        },
        {
            "discussion_title": "Short Python solution using BFS",
            "discussion_vote": "102",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/perfect-squares/discuss/71475/Short-Python-solution-using-BFS"
        },
        {
            "discussion_title": "Static DP, C++ 12 ms, Python 172 ms, Ruby 384 ms",
            "discussion_vote": "71",
            "discussion_views": "23.5K",
            "discussion_link": "https://leetcode.com/problems/perfect-squares/discuss/71512/Static-DP-C%2B%2B-12-ms-Python-172-ms-Ruby-384-ms"
        },
        {
            "discussion_title": "O(sqrt(n)) in Ruby, C++, C",
            "discussion_vote": "57",
            "discussion_views": "17.1K",
            "discussion_link": "https://leetcode.com/problems/perfect-squares/discuss/71533/O(sqrt(n))-in-Ruby-C%2B%2B-C"
        }
    ],
    "282": [
        {
            "discussion_title": "Java Standard Backtrace AC Solutoin, short and clear",
            "discussion_vote": "355",
            "discussion_views": "61.6K",
            "discussion_link": "https://leetcode.com/problems/expression-add-operators/discuss/71895/Java-Standard-Backtrace-AC-Solutoin-short-and-clear"
        },
        {
            "discussion_title": "17 lines solution, dfs (C++)",
            "discussion_vote": "64",
            "discussion_views": "21.4K",
            "discussion_link": "https://leetcode.com/problems/expression-add-operators/discuss/71898/17-lines-solution-dfs-(C%2B%2B)"
        },
        {
            "discussion_title": "Java AC solution, 19ms, beat 100.00%.",
            "discussion_vote": "42",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/expression-add-operators/discuss/71897/Java-AC-solution-19ms-beat-100.00."
        },
        {
            "discussion_title": "Clean Python DFS with comments",
            "discussion_vote": "30",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/expression-add-operators/discuss/71968/Clean-Python-DFS-with-comments"
        },
        {
            "discussion_title": "Accepted C++ Solution",
            "discussion_vote": "30",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/expression-add-operators/discuss/71971/Accepted-C%2B%2B-Solution"
        }
    ],
    "283": [
        {
            "discussion_title": "Simple O(N) Java Solution Using Insert Index",
            "discussion_vote": "343",
            "discussion_views": "62.6K",
            "discussion_link": "https://leetcode.com/problems/move-zeroes/discuss/72011/Simple-O(N)-Java-Solution-Using-Insert-Index"
        },
        {
            "discussion_title": "My simple C++ solution",
            "discussion_vote": "151",
            "discussion_views": "27.1K",
            "discussion_link": "https://leetcode.com/problems/move-zeroes/discuss/72005/My-simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "1ms Java solution",
            "discussion_vote": "144",
            "discussion_views": "25.2K",
            "discussion_link": "https://leetcode.com/problems/move-zeroes/discuss/72000/1ms-Java-solution"
        },
        {
            "discussion_title": "Python short in-place solution with comments.",
            "discussion_vote": "73",
            "discussion_views": "13.6K",
            "discussion_link": "https://leetcode.com/problems/move-zeroes/discuss/72012/Python-short-in-place-solution-with-comments."
        },
        {
            "discussion_title": "C++ Accepted Code",
            "discussion_vote": "45",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/move-zeroes/discuss/72045/C%2B%2B-Accepted-Code"
        }
    ],
    "284": [
        {
            "discussion_title": "Concise Java Solution",
            "discussion_vote": "122",
            "discussion_views": "27.5K",
            "discussion_link": "https://leetcode.com/problems/peeking-iterator/discuss/72558/Concise-Java-Solution"
        },
        {
            "discussion_title": "Simple C++ solution (1 line per method) without extra member variables",
            "discussion_vote": "76",
            "discussion_views": "15.9K",
            "discussion_link": "https://leetcode.com/problems/peeking-iterator/discuss/72554/Simple-C%2B%2B-solution-(1-line-per-method)-without-extra-member-variables"
        },
        {
            "discussion_title": "Simple Python Solution",
            "discussion_vote": "38",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/peeking-iterator/discuss/72626/Simple-Python-Solution"
        },
        {
            "discussion_title": "Another C++ solution with one line in peek() and hasNext(), AC",
            "discussion_vote": "32",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/peeking-iterator/discuss/72598/Another-C%2B%2B-solution-with-one-line-in-peek()-and-hasNext()-AC"
        },
        {
            "discussion_title": "Simple Java solution by caching next element",
            "discussion_vote": "15",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/peeking-iterator/discuss/72606/Simple-Java-solution-by-caching-next-element"
        }
    ],
    "287": [
        {
            "discussion_title": "My easy understood solution with O(n) time and O(1) space without modifying the array. With clear explanation.",
            "discussion_vote": "665",
            "discussion_views": "123.3K",
            "discussion_link": "https://leetcode.com/problems/find-the-duplicate-number/discuss/72846/My-easy-understood-solution-with-O(n)-time-and-O(1)-space-without-modifying-the-array.-With-clear-explanation."
        },
        {
            "discussion_title": "Two Solutions (with explanation): O(nlog(n)) and O(n) time , O(1) space, without changing the input array",
            "discussion_vote": "324",
            "discussion_views": "67.8K",
            "discussion_link": "https://leetcode.com/problems/find-the-duplicate-number/discuss/72844/Two-Solutions-(with-explanation)%3A-O(nlog(n))-and-O(n)-time-O(1)-space-without-changing-the-input-array"
        },
        {
            "discussion_title": "Java O(n) time and O(1) space solution. Similar to find loop in linkedlist.",
            "discussion_vote": "152",
            "discussion_views": "34.8K",
            "discussion_link": "https://leetcode.com/problems/find-the-duplicate-number/discuss/72845/Java-O(n)-time-and-O(1)-space-solution.-Similar-to-find-loop-in-linkedlist."
        },
        {
            "discussion_title": "Simple C++ code with O(1) space and O(nlogn) time complexity",
            "discussion_vote": "107",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/find-the-duplicate-number/discuss/73045/Simple-C%2B%2B-code-with-O(1)-space-and-O(nlogn)-time-complexity"
        },
        {
            "discussion_title": "Java O(1)space using Binary-Search",
            "discussion_vote": "91",
            "discussion_views": "18.5K",
            "discussion_link": "https://leetcode.com/problems/find-the-duplicate-number/discuss/72841/Java-O(1)space-using-Binary-Search"
        }
    ],
    "289": [
        {
            "discussion_title": "Easiest JAVA solution with explanation",
            "discussion_vote": "806",
            "discussion_views": "61.5K",
            "discussion_link": "https://leetcode.com/problems/game-of-life/discuss/73223/Easiest-JAVA-solution-with-explanation"
        },
        {
            "discussion_title": "C++ O(1) space, O(mn) time",
            "discussion_vote": "220",
            "discussion_views": "28.7K",
            "discussion_link": "https://leetcode.com/problems/game-of-life/discuss/73230/C%2B%2B-O(1)-space-O(mn)-time"
        },
        {
            "discussion_title": "Infinite board solution",
            "discussion_vote": "90",
            "discussion_views": "20.7K",
            "discussion_link": "https://leetcode.com/problems/game-of-life/discuss/73217/Infinite-board-solution"
        },
        {
            "discussion_title": "C++ AC Code  O(1) space, O(mn) time",
            "discussion_vote": "49",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/game-of-life/discuss/73252/C%2B%2B-AC-Code-O(1)-space-O(mn)-time"
        },
        {
            "discussion_title": "Clean O(1) space O(mn) time Java Solution",
            "discussion_vote": "46",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/game-of-life/discuss/73366/Clean-O(1)-space-O(mn)-time-Java-Solution"
        }
    ],
    "290": [
        {
            "discussion_title": "8 lines simple Java",
            "discussion_vote": "188",
            "discussion_views": "59.1K",
            "discussion_link": "https://leetcode.com/problems/word-pattern/discuss/73402/8-lines-simple-Java"
        },
        {
            "discussion_title": "Short C++, read words on the fly",
            "discussion_vote": "104",
            "discussion_views": "18.2K",
            "discussion_link": "https://leetcode.com/problems/word-pattern/discuss/73409/Short-C%2B%2B-read-words-on-the-fly"
        },
        {
            "discussion_title": "Very fast (3ms) Java Solution using HashMap",
            "discussion_vote": "68",
            "discussion_views": "15.3K",
            "discussion_link": "https://leetcode.com/problems/word-pattern/discuss/73399/Very-fast-(3ms)-Java-Solution-using-HashMap"
        },
        {
            "discussion_title": "Short in Python",
            "discussion_vote": "62",
            "discussion_views": "13.0K",
            "discussion_link": "https://leetcode.com/problems/word-pattern/discuss/73433/Short-in-Python"
        },
        {
            "discussion_title": "0ms C++ solution using istringstream and double maps",
            "discussion_vote": "23",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/word-pattern/discuss/73434/0ms-C%2B%2B-solution-using-istringstream-and-double-maps"
        }
    ],
    "292": [
        {
            "discussion_title": "Theorem: all 4s shall be false",
            "discussion_vote": "192",
            "discussion_views": "32.9K",
            "discussion_link": "https://leetcode.com/problems/nim-game/discuss/73749/Theorem%3A-all-4s-shall-be-false"
        },
        {
            "discussion_title": "One line O(1) solution and explanation",
            "discussion_vote": "78",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/nim-game/discuss/73760/One-line-O(1)-solution-and-explanation"
        },
        {
            "discussion_title": "O(1) Efficient Single-line Java using Bit Checking",
            "discussion_vote": "43",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/nim-game/discuss/73837/O(1)-Efficient-Single-line-Java-using-Bit-Checking"
        },
        {
            "discussion_title": "Two Java Solution.",
            "discussion_vote": "33",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/nim-game/discuss/73845/Two-Java-Solution."
        },
        {
            "discussion_title": "1 line 0 ms C++ solution with explanation",
            "discussion_vote": "31",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/nim-game/discuss/73863/1-line-0-ms-C%2B%2B-solution-with-explanation"
        }
    ],
    "295": [
        {
            "discussion_title": "Short simple Java/C++/Python, O(log n) + O(1)",
            "discussion_vote": "234",
            "discussion_views": "46.9K",
            "discussion_link": "https://leetcode.com/problems/find-median-from-data-stream/discuss/74062/Short-simple-JavaC%2B%2BPython-O(log-n)-%2B-O(1)"
        },
        {
            "discussion_title": "Share my java solution logn to insert, O(1) to query",
            "discussion_vote": "91",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/find-median-from-data-stream/discuss/74049/Share-my-java-solution-logn-to-insert-O(1)-to-query"
        },
        {
            "discussion_title": "Java/Python two heap solution, O(log n) add, O(1) find",
            "discussion_vote": "66",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/find-median-from-data-stream/discuss/74047/JavaPython-two-heap-solution-O(log-n)-add-O(1)-find"
        },
        {
            "discussion_title": "Easy to understand double-heap solution in Java",
            "discussion_vote": "43",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/find-median-from-data-stream/discuss/74144/Easy-to-understand-double-heap-solution-in-Java"
        },
        {
            "discussion_title": "Very Short, O(log n) + O(1)",
            "discussion_vote": "32",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/find-median-from-data-stream/discuss/74044/Very-Short-O(log-n)-%2B-O(1)"
        }
    ],
    "297": [
        {
            "discussion_title": "Easy to understand Java Solution",
            "discussion_vote": "276",
            "discussion_views": "79.0K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/discuss/74253/Easy-to-understand-Java-Solution"
        },
        {
            "discussion_title": "Recursive preorder, Python and C++, O(n)",
            "discussion_vote": "202",
            "discussion_views": "39.6K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/discuss/74259/Recursive-preorder-Python-and-C%2B%2B-O(n)"
        },
        {
            "discussion_title": "Short and straight forward BFS Java code with a queue",
            "discussion_vote": "120",
            "discussion_views": "24.5K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/discuss/74264/Short-and-straight-forward-BFS-Java-code-with-a-queue"
        },
        {
            "discussion_title": "Clean C++ solution",
            "discussion_vote": "53",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/discuss/74252/Clean-C%2B%2B-solution"
        },
        {
            "discussion_title": "Recursive DFS, Iterative DFS and BFS",
            "discussion_vote": "48",
            "discussion_views": "13.3K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/discuss/74260/Recursive-DFS-Iterative-DFS-and-BFS"
        }
    ],
    "299": [
        {
            "discussion_title": "One pass Java solution",
            "discussion_vote": "289",
            "discussion_views": "28.0K",
            "discussion_link": "https://leetcode.com/problems/bulls-and-cows/discuss/74621/One-pass-Java-solution"
        },
        {
            "discussion_title": "[C++] 4ms Straight forward solution two pass O(N) time",
            "discussion_vote": "48",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/bulls-and-cows/discuss/74618/C%2B%2B-4ms-Straight-forward-solution-two-pass-O(N)-time"
        },
        {
            "discussion_title": "My 3ms Java solution may help u",
            "discussion_vote": "40",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/bulls-and-cows/discuss/74629/My-3ms-Java-solution-may-help-u"
        },
        {
            "discussion_title": "Python 3 lines solution",
            "discussion_vote": "37",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/bulls-and-cows/discuss/74644/Python-3-lines-solution"
        },
        {
            "discussion_title": "3 lines in Python",
            "discussion_vote": "33",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/bulls-and-cows/discuss/74616/3-lines-in-Python"
        }
    ],
    "300": [
        {
            "discussion_title": "Java/Python Binary search O(nlogn) time with explanation",
            "discussion_vote": "364",
            "discussion_views": "61.7K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-subsequence/discuss/74824/JavaPython-Binary-search-O(nlogn)-time-with-explanation"
        },
        {
            "discussion_title": "Short Java solution using DP O(n log n)",
            "discussion_vote": "219",
            "discussion_views": "67.1K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-subsequence/discuss/74825/Short-Java-solution-using-DP-O(n-log-n)"
        },
        {
            "discussion_title": "9 lines C++ code with O(NlogN) complexity",
            "discussion_vote": "123",
            "discussion_views": "28.2K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-subsequence/discuss/74848/9-lines-C%2B%2B-code-with-O(NlogN)-complexity"
        },
        {
            "discussion_title": "My easy to understand O(n^2) solution using DP with video explanation",
            "discussion_vote": "74",
            "discussion_views": "24.0K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-subsequence/discuss/74836/My-easy-to-understand-O(n2)-solution-using-DP-with-video-explanation"
        },
        {
            "discussion_title": "[C++] Typical DP N^2 solution and NLogN solution from GeekForGeek",
            "discussion_vote": "49",
            "discussion_views": "14.8K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-subsequence/discuss/74989/C%2B%2B-Typical-DP-N2-solution-and-NLogN-solution-from-GeekForGeek"
        }
    ],
    "301": [
        {
            "discussion_title": "Easy, Short, Concise and Fast Java DFS 3 ms solution",
            "discussion_vote": "565",
            "discussion_views": "103.5K",
            "discussion_link": "https://leetcode.com/problems/remove-invalid-parentheses/discuss/75027/Easy-Short-Concise-and-Fast-Java-DFS-3-ms-solution"
        },
        {
            "discussion_title": "Share my Java BFS solution",
            "discussion_vote": "427",
            "discussion_views": "69.5K",
            "discussion_link": "https://leetcode.com/problems/remove-invalid-parentheses/discuss/75032/Share-my-Java-BFS-solution"
        },
        {
            "discussion_title": "Easiest 9ms Java Solution",
            "discussion_vote": "197",
            "discussion_views": "36.4K",
            "discussion_link": "https://leetcode.com/problems/remove-invalid-parentheses/discuss/75034/Easiest-9ms-Java-Solution"
        },
        {
            "discussion_title": "Short Python BFS",
            "discussion_vote": "58",
            "discussion_views": "17.3K",
            "discussion_link": "https://leetcode.com/problems/remove-invalid-parentheses/discuss/75028/Short-Python-BFS"
        },
        {
            "discussion_title": "My C++ DFS Solution - 16ms",
            "discussion_vote": "46",
            "discussion_views": "16.8K",
            "discussion_link": "https://leetcode.com/problems/remove-invalid-parentheses/discuss/75050/My-C%2B%2B-DFS-Solution-16ms"
        }
    ],
    "303": [
        {
            "discussion_title": "Java simple O(n) init and O(1) query solution",
            "discussion_vote": "151",
            "discussion_views": "29.1K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-immutable/discuss/75192/Java-simple-O(n)-init-and-O(1)-query-solution"
        },
        {
            "discussion_title": "5-lines C++, 4-lines Python",
            "discussion_vote": "41",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-immutable/discuss/75184/5-lines-C%2B%2B-4-lines-Python"
        },
        {
            "discussion_title": "C++ O(1) queries - just 2 extra lines of code",
            "discussion_vote": "27",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-immutable/discuss/75303/C%2B%2B-O(1)-queries-just-2-extra-lines-of-code"
        },
        {
            "discussion_title": "A very short Python solution",
            "discussion_vote": "24",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-immutable/discuss/75200/A-very-short-Python-solution"
        },
        {
            "discussion_title": "My java 3ms solution",
            "discussion_vote": "20",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-immutable/discuss/75190/My-java-3ms-solution"
        }
    ],
    "304": [
        {
            "discussion_title": "Clean C++ Solution and Explaination - O(mn) space with O(1) time",
            "discussion_vote": "159",
            "discussion_views": "15.7K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-2d-immutable/discuss/75350/Clean-C%2B%2B-Solution-and-Explaination-O(mn)-space-with-O(1)-time"
        },
        {
            "discussion_title": "Clean and easy to understand java solution",
            "discussion_vote": "65",
            "discussion_views": "15.4K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-2d-immutable/discuss/75358/Clean-and-easy-to-understand-java-solution"
        },
        {
            "discussion_title": "Sharing My Python solution",
            "discussion_vote": "16",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-2d-immutable/discuss/75448/Sharing-My-Python-solution"
        },
        {
            "discussion_title": "C++ with helper",
            "discussion_vote": "14",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-2d-immutable/discuss/75381/C%2B%2B-with-helper"
        },
        {
            "discussion_title": "Very clean and fast java solution",
            "discussion_vote": "10",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-2d-immutable/discuss/75357/Very-clean-and-fast-java-solution"
        }
    ],
    "306": [
        {
            "discussion_title": "Java Recursive and Iterative Solutions",
            "discussion_vote": "93",
            "discussion_views": "21.7K",
            "discussion_link": "https://leetcode.com/problems/additive-number/discuss/75567/Java-Recursive-and-Iterative-Solutions"
        },
        {
            "discussion_title": "0ms concise C++ solution (perfectly handles the follow-up and leading 0s)",
            "discussion_vote": "76",
            "discussion_views": "15.9K",
            "discussion_link": "https://leetcode.com/problems/additive-number/discuss/75576/0ms-concise-C%2B%2B-solution-(perfectly-handles-the-follow-up-and-leading-0s)"
        },
        {
            "discussion_title": "*Java* very straightforward solution with detailed explanation",
            "discussion_vote": "54",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/additive-number/discuss/75572/*Java*-very-straightforward-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "37",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/additive-number/discuss/75578/Python-solution"
        },
        {
            "discussion_title": "Java Easy Understand DFS",
            "discussion_vote": "19",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/additive-number/discuss/75697/Java-Easy-Understand-DFS"
        }
    ],
    "307": [
        {
            "discussion_title": "17 ms Java solution with segment tree",
            "discussion_vote": "175",
            "discussion_views": "35.0K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-mutable/discuss/75724/17-ms-Java-solution-with-segment-tree"
        },
        {
            "discussion_title": "Java using Binary Indexed Tree with clear explanation",
            "discussion_vote": "157",
            "discussion_views": "26.9K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-mutable/discuss/75753/Java-using-Binary-Indexed-Tree-with-clear-explanation"
        },
        {
            "discussion_title": "\"0 lines\" Python",
            "discussion_vote": "35",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-mutable/discuss/75802/%220-lines%22-Python"
        },
        {
            "discussion_title": "C++ solution using \"buckets\". O(1) for updating and O(n^0.5) for query in the worst case (not the fast).",
            "discussion_vote": "30",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-mutable/discuss/75717/C%2B%2B-solution-using-%22buckets%22.-O(1)-for-updating-and-O(n0.5)-for-query-in-the-worst-case-(not-the-fast)."
        },
        {
            "discussion_title": "Python: Well commented solution using Segment Trees",
            "discussion_vote": "28",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/range-sum-query-mutable/discuss/75784/Python%3A-Well-commented-solution-using-Segment-Trees"
        }
    ],
    "309": [
        {
            "discussion_title": "Share my thinking process",
            "discussion_vote": "996",
            "discussion_views": "93.0K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/discuss/75927/Share-my-thinking-process"
        },
        {
            "discussion_title": "Share my DP solution (By State Machine Thinking)",
            "discussion_vote": "844",
            "discussion_views": "45.2K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/discuss/75928/Share-my-DP-solution-(By-State-Machine-Thinking)"
        },
        {
            "discussion_title": "Easiest JAVA solution with explanations",
            "discussion_vote": "290",
            "discussion_views": "24.5K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/discuss/75931/Easiest-JAVA-solution-with-explanations"
        },
        {
            "discussion_title": "7-line Java: only consider sell and cooldown",
            "discussion_vote": "110",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/discuss/75929/7-line-Java%3A-only-consider-sell-and-cooldown"
        },
        {
            "discussion_title": "Very Easy to Understand One Pass O(n) Solution with No Extra Space",
            "discussion_vote": "107",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/discuss/75930/Very-Easy-to-Understand-One-Pass-O(n)-Solution-with-No-Extra-Space"
        }
    ],
    "310": [
        {
            "discussion_title": "Share some thoughts",
            "discussion_vote": "576",
            "discussion_views": "60.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-height-trees/discuss/76055/Share-some-thoughts"
        },
        {
            "discussion_title": "Two O(n) solutions",
            "discussion_vote": "103",
            "discussion_views": "28.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-height-trees/discuss/76052/Two-O(n)-solutions"
        },
        {
            "discussion_title": "C++ Solution. O(n)-Time, O(n)-Space",
            "discussion_vote": "44",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-height-trees/discuss/76104/C%2B%2B-Solution.-O(n)-Time-O(n)-Space"
        },
        {
            "discussion_title": "C++ BFS short clean solution with explanation",
            "discussion_vote": "36",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-height-trees/discuss/76064/C%2B%2B-BFS-short-clean-solution-with-explanation"
        },
        {
            "discussion_title": "Share my BFS JAVA code using degree with explanation, which beats more than 95%",
            "discussion_vote": "29",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-height-trees/discuss/76129/Share-my-BFS-JAVA-code-using-degree-with-explanation-which-beats-more-than-95"
        }
    ],
    "312": [
        {
            "discussion_title": "Share some analysis and explanations",
            "discussion_vote": "699",
            "discussion_views": "81.5K",
            "discussion_link": "https://leetcode.com/problems/burst-balloons/discuss/76228/Share-some-analysis-and-explanations"
        },
        {
            "discussion_title": "C++ dynamic programming, O(N^3), 32 ms, with comments",
            "discussion_vote": "68",
            "discussion_views": "18.5K",
            "discussion_link": "https://leetcode.com/problems/burst-balloons/discuss/76232/C%2B%2B-dynamic-programming-O(N3)-32-ms-with-comments"
        },
        {
            "discussion_title": "For anyone that is still confused after reading all kinds of explanations...",
            "discussion_vote": "54",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/burst-balloons/discuss/76229/For-anyone-that-is-still-confused-after-reading-all-kinds-of-explanations..."
        },
        {
            "discussion_title": "Java DP solution with detailed explanation, O(n^3)",
            "discussion_vote": "53",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/burst-balloons/discuss/76227/Java-DP-solution-with-detailed-explanation-O(n3)"
        },
        {
            "discussion_title": "Easiest Java Solution",
            "discussion_vote": "38",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/burst-balloons/discuss/76245/Easiest-Java-Solution"
        }
    ],
    "313": [
        {
            "discussion_title": "Java three methods, 23ms, 36 ms, 58ms(with heap), performance explained",
            "discussion_vote": "139",
            "discussion_views": "32.9K",
            "discussion_link": "https://leetcode.com/problems/super-ugly-number/discuss/76291/Java-three-methods-23ms-36-ms-58ms(with-heap)-performance-explained"
        },
        {
            "discussion_title": "7 line consice O(kn) c++ solution",
            "discussion_vote": "60",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/super-ugly-number/discuss/76298/7-line-consice-O(kn)-c%2B%2B-solution"
        },
        {
            "discussion_title": "108ms easy to understand java solution",
            "discussion_vote": "44",
            "discussion_views": "12.6K",
            "discussion_link": "https://leetcode.com/problems/super-ugly-number/discuss/76343/108ms-easy-to-understand-java-solution"
        },
        {
            "discussion_title": "Python, generators on a heap",
            "discussion_vote": "41",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/super-ugly-number/discuss/76301/Python-generators-on-a-heap"
        },
        {
            "discussion_title": "Java solution\\uff0c21ms\\uff0c\\u8be6\\u7ec6\\u7684\\u4e2d\\u6587\\u89e3\\u91ca",
            "discussion_vote": "28",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/super-ugly-number/discuss/76292/Java-solutionuff0c21msuff0cu8be6u7ec6u7684u4e2du6587u89e3u91ca"
        }
    ],
    "315": [
        {
            "discussion_title": "9ms  short Java BST solution get answer when building BST",
            "discussion_vote": "219",
            "discussion_views": "50.8K",
            "discussion_link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/discuss/76580/9ms-short-Java-BST-solution-get-answer-when-building-BST"
        },
        {
            "discussion_title": "Mergesort solution",
            "discussion_vote": "186",
            "discussion_views": "47.6K",
            "discussion_link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/discuss/76584/Mergesort-solution"
        },
        {
            "discussion_title": "11ms JAVA solution using merge sort with explanation",
            "discussion_vote": "146",
            "discussion_views": "20.4K",
            "discussion_link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/discuss/76583/11ms-JAVA-solution-using-merge-sort-with-explanation"
        },
        {
            "discussion_title": "My simple AC Java Binary Search code",
            "discussion_vote": "94",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/discuss/76576/My-simple-AC-Java-Binary-Search-code"
        },
        {
            "discussion_title": "C++ O(nlogn)-Time O(n)-Space MergeSort Solution with Detail Explanation",
            "discussion_vote": "91",
            "discussion_views": "16.9K",
            "discussion_link": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/discuss/76607/C%2B%2B-O(nlogn)-Time-O(n)-Space-MergeSort-Solution-with-Detail-Explanation"
        }
    ],
    "316": [
        {
            "discussion_title": "A short O(n) recursive greedy solution",
            "discussion_vote": "243",
            "discussion_views": "47.6K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicate-letters/discuss/76768/A-short-O(n)-recursive-greedy-solution"
        },
        {
            "discussion_title": "Java solution using Stack with comments",
            "discussion_vote": "168",
            "discussion_views": "18.1K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicate-letters/discuss/76769/Java-solution-using-Stack-with-comments"
        },
        {
            "discussion_title": "Easy to understand iterative Java solution",
            "discussion_vote": "150",
            "discussion_views": "28.2K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicate-letters/discuss/76766/Easy-to-understand-iterative-Java-solution"
        },
        {
            "discussion_title": "C++ simple solution easy understanding",
            "discussion_vote": "89",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicate-letters/discuss/76767/C%2B%2B-simple-solution-easy-understanding"
        },
        {
            "discussion_title": "Java O(n) solution using stack with detail explanation",
            "discussion_vote": "87",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/remove-duplicate-letters/discuss/76762/Java-O(n)-solution-using-stack-with-detail-explanation"
        }
    ],
    "318": [
        {
            "discussion_title": "JAVA----------Easy Version To Understand!!!!!!!!!!!!!!!!!",
            "discussion_vote": "274",
            "discussion_views": "35.2K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-word-lengths/discuss/76959/JAVA-Easy-Version-To-Understand!!!!!!!!!!!!!!!!!"
        },
        {
            "discussion_title": "32ms Java AC solution",
            "discussion_vote": "82",
            "discussion_views": "19.4K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-word-lengths/discuss/77021/32ms-Java-AC-solution"
        },
        {
            "discussion_title": "Bit shorter C++",
            "discussion_vote": "61",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-word-lengths/discuss/76976/Bit-shorter-C%2B%2B"
        },
        {
            "discussion_title": "Python solution, beats 99.67%",
            "discussion_vote": "54",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-word-lengths/discuss/76970/Python-solution-beats-99.67"
        },
        {
            "discussion_title": "Java Solution with comments",
            "discussion_vote": "27",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-word-lengths/discuss/77047/Java-Solution-with-comments"
        }
    ],
    "319": [
        {
            "discussion_title": "Math solution..",
            "discussion_vote": "605",
            "discussion_views": "38.6K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher/discuss/77104/Math-solution.."
        },
        {
            "discussion_title": "Share my o(1) solution with explanation",
            "discussion_vote": "202",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher/discuss/77112/Share-my-o(1)-solution-with-explanation"
        },
        {
            "discussion_title": "My 0 ms C++ solution with explanation",
            "discussion_vote": "50",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher/discuss/77133/My-0-ms-C%2B%2B-solution-with-explanation"
        },
        {
            "discussion_title": "The simplest and most efficient solution well-explained",
            "discussion_vote": "47",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher/discuss/77132/The-simplest-and-most-efficient-solution-well-explained"
        },
        {
            "discussion_title": "One line java with explanation",
            "discussion_vote": "38",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher/discuss/77144/One-line-java-with-explanation"
        }
    ],
    "321": [
        {
            "discussion_title": "Share my greedy solution",
            "discussion_vote": "199",
            "discussion_views": "44.6K",
            "discussion_link": "https://leetcode.com/problems/create-maximum-number/discuss/77285/Share-my-greedy-solution"
        },
        {
            "discussion_title": "C++ 16ms, FASTEST, beats 97%.",
            "discussion_vote": "123",
            "discussion_views": "18.1K",
            "discussion_link": "https://leetcode.com/problems/create-maximum-number/discuss/77287/C%2B%2B-16ms-FASTEST-beats-97."
        },
        {
            "discussion_title": "Short Python / Ruby / C++",
            "discussion_vote": "71",
            "discussion_views": "17.3K",
            "discussion_link": "https://leetcode.com/problems/create-maximum-number/discuss/77286/Short-Python-Ruby-C%2B%2B"
        },
        {
            "discussion_title": "Share my 21ms java solution with comments",
            "discussion_vote": "37",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/create-maximum-number/discuss/77283/Share-my-21ms-java-solution-with-comments"
        },
        {
            "discussion_title": "Share my Python solution with explanation",
            "discussion_vote": "24",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/create-maximum-number/discuss/77291/Share-my-Python-solution-with-explanation"
        }
    ],
    "322": [
        {
            "discussion_title": "[C++] O(n*amount) time O(amount) space DP solution",
            "discussion_vote": "97",
            "discussion_views": "33.4K",
            "discussion_link": "https://leetcode.com/problems/coin-change/discuss/77360/C%2B%2B-O(n*amount)-time-O(amount)-space-DP-solution"
        },
        {
            "discussion_title": "*Java* Both iterative and recursive solutions with explanations",
            "discussion_vote": "85",
            "discussion_views": "34.0K",
            "discussion_link": "https://leetcode.com/problems/coin-change/discuss/77368/*Java*-Both-iterative-and-recursive-solutions-with-explanations"
        },
        {
            "discussion_title": "Easy-To-Understand Recursive DP solution using Java (with explanations)",
            "discussion_vote": "50",
            "discussion_views": "18.9K",
            "discussion_link": "https://leetcode.com/problems/coin-change/discuss/77378/Easy-To-Understand-Recursive-DP-solution-using-Java-(with-explanations)"
        },
        {
            "discussion_title": "Clean dp python code",
            "discussion_vote": "47",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/coin-change/discuss/77372/Clean-dp-python-code"
        },
        {
            "discussion_title": "Fast Python BFS Solution",
            "discussion_vote": "39",
            "discussion_views": "11.2K",
            "discussion_link": "https://leetcode.com/problems/coin-change/discuss/77361/Fast-Python-BFS-Solution"
        }
    ],
    "324": [
        {
            "discussion_title": "O(n)+O(1) after median --- Virtual Indexing",
            "discussion_vote": "306",
            "discussion_views": "94.0K",
            "discussion_link": "https://leetcode.com/problems/wiggle-sort-ii/discuss/77677/O(n)%2BO(1)-after-median-Virtual-Indexing"
        },
        {
            "discussion_title": "Step by step explanation of index mapping in Java",
            "discussion_vote": "235",
            "discussion_views": "46.6K",
            "discussion_link": "https://leetcode.com/problems/wiggle-sort-ii/discuss/77682/Step-by-step-explanation-of-index-mapping-in-Java"
        },
        {
            "discussion_title": "3 lines Python, with Explanation / Proof",
            "discussion_vote": "181",
            "discussion_views": "29.2K",
            "discussion_link": "https://leetcode.com/problems/wiggle-sort-ii/discuss/77678/3-lines-Python-with-Explanation-Proof"
        },
        {
            "discussion_title": "Summary of the various solutions to Wiggle Sort for your reference",
            "discussion_vote": "101",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/wiggle-sort-ii/discuss/77684/Summary-of-the-various-solutions-to-Wiggle-Sort-for-your-reference"
        },
        {
            "discussion_title": "O(n)-time O(1)-space solution with detail explanations",
            "discussion_vote": "47",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/wiggle-sort-ii/discuss/77681/O(n)-time-O(1)-space-solution-with-detail-explanations"
        }
    ],
    "326": [
        {
            "discussion_title": "1 line java solution without loop / recursion",
            "discussion_vote": "446",
            "discussion_views": "55.5K",
            "discussion_link": "https://leetcode.com/problems/power-of-three/discuss/77856/1-line-java-solution-without-loop-recursion"
        },
        {
            "discussion_title": "** A summary of `all` solutions (new method included at 15:30pm Jan-8th)",
            "discussion_vote": "286",
            "discussion_views": "41.9K",
            "discussion_link": "https://leetcode.com/problems/power-of-three/discuss/77876/**-A-summary-of-all-solutions-(new-method-included-at-15%3A30pm-Jan-8th)"
        },
        {
            "discussion_title": "Without log and O(1).",
            "discussion_vote": "98",
            "discussion_views": "19.6K",
            "discussion_link": "https://leetcode.com/problems/power-of-three/discuss/77872/Without-log-and-O(1)."
        },
        {
            "discussion_title": "1 line C++ no recursion/loop",
            "discussion_vote": "33",
            "discussion_views": "16.4K",
            "discussion_link": "https://leetcode.com/problems/power-of-three/discuss/77859/1-line-C%2B%2B-no-recursionloop"
        },
        {
            "discussion_title": "One line (cheating)",
            "discussion_vote": "32",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/power-of-three/discuss/77924/One-line-(cheating)"
        }
    ],
    "327": [
        {
            "discussion_title": "Share my solution",
            "discussion_vote": "276",
            "discussion_views": "48.7K",
            "discussion_link": "https://leetcode.com/problems/count-of-range-sum/discuss/77990/Share-my-solution"
        },
        {
            "discussion_title": "Summary of the Divide and Conquer based and Binary Indexed Tree based solutions",
            "discussion_vote": "128",
            "discussion_views": "21.3K",
            "discussion_link": "https://leetcode.com/problems/count-of-range-sum/discuss/78006/Summary-of-the-Divide-and-Conquer-based-and-Binary-Indexed-Tree-based-solutions"
        },
        {
            "discussion_title": "Short & simple O(n log n)",
            "discussion_vote": "85",
            "discussion_views": "25.1K",
            "discussion_link": "https://leetcode.com/problems/count-of-range-sum/discuss/77991/Short-and-simple-O(n-log-n)"
        },
        {
            "discussion_title": "Java SegmentTree Solution, 36ms",
            "discussion_vote": "26",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/count-of-range-sum/discuss/77987/Java-SegmentTree-Solution-36ms"
        },
        {
            "discussion_title": "C++ merge sort solution, very short",
            "discussion_vote": "25",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/count-of-range-sum/discuss/77992/C%2B%2B-merge-sort-solution-very-short"
        }
    ],
    "328": [
        {
            "discussion_title": "Simple O(N) time, O(1), space Java solution.",
            "discussion_vote": "204",
            "discussion_views": "34.1K",
            "discussion_link": "https://leetcode.com/problems/odd-even-linked-list/discuss/78079/Simple-O(N)-time-O(1)-space-Java-solution."
        },
        {
            "discussion_title": "Straigntforward Java solution, O(1) space, O(n) time",
            "discussion_vote": "55",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/odd-even-linked-list/discuss/78120/Straigntforward-Java-solution-O(1)-space-O(n)-time"
        },
        {
            "discussion_title": "Simple C++ solution, O(n) time, O(1) space",
            "discussion_vote": "42",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/odd-even-linked-list/discuss/78078/Simple-C%2B%2B-solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Clear Python Solution",
            "discussion_vote": "36",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/odd-even-linked-list/discuss/78095/Clear-Python-Solution"
        },
        {
            "discussion_title": "1ms Java Solution",
            "discussion_vote": "35",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/odd-even-linked-list/discuss/78197/1ms-Java-Solution"
        }
    ],
    "329": [
        {
            "discussion_title": "15ms Concise Java Solution",
            "discussion_vote": "200",
            "discussion_views": "37.8K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/discuss/78308/15ms-Concise-Java-Solution"
        },
        {
            "discussion_title": "Python solution, memoization dp, 288ms",
            "discussion_vote": "44",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/discuss/78334/Python-solution-memoization-dp-288ms"
        },
        {
            "discussion_title": "Graph theory, Java solution, O(v^2), no DFS",
            "discussion_vote": "34",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/discuss/78336/Graph-theory-Java-solution-O(v2)-no-DFS"
        },
        {
            "discussion_title": "Java 14ms relative short & easy to code solution with explanation. O(mn) time O(mn) space. DFS + DP",
            "discussion_vote": "33",
            "discussion_views": "12.2K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/discuss/78313/Java-14ms-relative-short-and-easy-to-code-solution-with-explanation.-O(mn)-time-O(mn)-space.-DFS-%2B-DP"
        },
        {
            "discussion_title": "C++ DP / DFS solution sharing",
            "discussion_vote": "22",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/discuss/78317/C%2B%2B-DP-DFS-solution-sharing"
        }
    ],
    "330": [
        {
            "discussion_title": "Solution + explanation",
            "discussion_vote": "514",
            "discussion_views": "35.8K",
            "discussion_link": "https://leetcode.com/problems/patching-array/discuss/78488/Solution-%2B-explanation"
        },
        {
            "discussion_title": "Share my thinking process",
            "discussion_vote": "151",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/patching-array/discuss/78495/Share-my-thinking-process"
        },
        {
            "discussion_title": "C++, 8ms, greedy solution with explanation",
            "discussion_vote": "47",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/patching-array/discuss/78492/C%2B%2B-8ms-greedy-solution-with-explanation"
        },
        {
            "discussion_title": "Share my greedy solution by Java with simple explanation (time: 1 ms)",
            "discussion_vote": "24",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/patching-array/discuss/78490/Share-my-greedy-solution-by-Java-with-simple-explanation-(time%3A-1-ms)"
        },
        {
            "discussion_title": "My simple accepted C++ solution",
            "discussion_vote": "12",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/patching-array/discuss/78515/My-simple-accepted-C%2B%2B-solution"
        }
    ],
    "331": [
        {
            "discussion_title": "7 lines Easy Java Solution",
            "discussion_vote": "438",
            "discussion_views": "38.2K",
            "discussion_link": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/discuss/78551/7-lines-Easy-Java-Solution"
        },
        {
            "discussion_title": "Java intuitive 22ms solution with stack",
            "discussion_vote": "83",
            "discussion_views": "16.3K",
            "discussion_link": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/discuss/78566/Java-intuitive-22ms-solution-with-stack"
        },
        {
            "discussion_title": "The simplest python solution with explanation (no stack, no recursion)",
            "discussion_vote": "77",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/discuss/78564/The-simplest-python-solution-with-explanation-(no-stack-no-recursion)"
        },
        {
            "discussion_title": "JAVA, Counting Indegree and Outdegree, SIMPLE & CLEAR!",
            "discussion_vote": "56",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/discuss/78552/JAVA-Counting-Indegree-and-Outdegree-SIMPLE-and-CLEAR!"
        },
        {
            "discussion_title": "Simple Python solution using stack. With Explanation.",
            "discussion_vote": "40",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/discuss/78560/Simple-Python-solution-using-stack.-With-Explanation."
        }
    ],
    "332": [
        {
            "discussion_title": "Short Ruby / Python / Java / C++",
            "discussion_vote": "324",
            "discussion_views": "67.6K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-itinerary/discuss/78768/Short-Ruby-Python-Java-C%2B%2B"
        },
        {
            "discussion_title": "Share my solution",
            "discussion_vote": "132",
            "discussion_views": "23.0K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-itinerary/discuss/78766/Share-my-solution"
        },
        {
            "discussion_title": "Short C++ DFS iterative 44ms solution with explanation.  No recursive calls, no backtracking.",
            "discussion_vote": "44",
            "discussion_views": "12.4K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-itinerary/discuss/78832/Short-C%2B%2B-DFS-iterative-44ms-solution-with-explanation.-No-recursive-calls-no-backtracking."
        },
        {
            "discussion_title": "[Share Solution] Java, Greedy, Stack, 15ms with explanation",
            "discussion_vote": "35",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-itinerary/discuss/78841/Share-Solution-Java-Greedy-Stack-15ms-with-explanation"
        },
        {
            "discussion_title": "Very Straightforward DFS Solution with Detailed Explanations",
            "discussion_vote": "33",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-itinerary/discuss/78799/Very-Straightforward-DFS-Solution-with-Detailed-Explanations"
        }
    ],
    "334": [
        {
            "discussion_title": "Concise Java solution with comments.",
            "discussion_vote": "226",
            "discussion_views": "23.5K",
            "discussion_link": "https://leetcode.com/problems/increasing-triplet-subsequence/discuss/79004/Concise-Java-solution-with-comments."
        },
        {
            "discussion_title": "Clean and short, with comments, C++",
            "discussion_vote": "222",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/increasing-triplet-subsequence/discuss/78993/Clean-and-short-with-comments-C%2B%2B"
        },
        {
            "discussion_title": "Python Easy O(n) Solution",
            "discussion_vote": "71",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/increasing-triplet-subsequence/discuss/78995/Python-Easy-O(n)-Solution"
        },
        {
            "discussion_title": "My accepted JAVA solution for this question, only 7-lines, clear and concise.",
            "discussion_vote": "66",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/increasing-triplet-subsequence/discuss/79000/My-accepted-JAVA-solution-for-this-question-only-7-lines-clear-and-concise."
        },
        {
            "discussion_title": "Simple Java Solution...Easy to understand!!!!",
            "discussion_vote": "26",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/increasing-triplet-subsequence/discuss/79002/Simple-Java-Solution...Easy-to-understand!!!!"
        }
    ],
    "335": [
        {
            "discussion_title": "Java Oms with explanation",
            "discussion_vote": "135",
            "discussion_views": "23.4K",
            "discussion_link": "https://leetcode.com/problems/self-crossing/discuss/79131/Java-Oms-with-explanation"
        },
        {
            "discussion_title": "Another python...",
            "discussion_vote": "52",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/self-crossing/discuss/79141/Another-python..."
        },
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "44",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/self-crossing/discuss/79168/Simple-Java-Solution"
        },
        {
            "discussion_title": "The best submission in C searching for the crossing patterns is the key",
            "discussion_vote": "42",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/self-crossing/discuss/79175/The-best-submission-in-C-searching-for-the-crossing-patterns-is-the-key"
        },
        {
            "discussion_title": "C++ simple solution",
            "discussion_vote": "28",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/self-crossing/discuss/79133/C%2B%2B-simple-solution"
        }
    ],
    "336": [
        {
            "discussion_title": "O(n * k^2) java solution with Trie structure",
            "discussion_vote": "244",
            "discussion_views": "40.9K",
            "discussion_link": "https://leetcode.com/problems/palindrome-pairs/discuss/79195/O(n-*-k2)-java-solution-with-Trie-structure"
        },
        {
            "discussion_title": "150 ms 45 lines JAVA solution",
            "discussion_vote": "193",
            "discussion_views": "45.4K",
            "discussion_link": "https://leetcode.com/problems/palindrome-pairs/discuss/79199/150-ms-45-lines-JAVA-solution"
        },
        {
            "discussion_title": "The Easy-to-unserstand JAVA Solution",
            "discussion_vote": "108",
            "discussion_views": "19.7K",
            "discussion_link": "https://leetcode.com/problems/palindrome-pairs/discuss/79210/The-Easy-to-unserstand-JAVA-Solution"
        },
        {
            "discussion_title": "Accepted Python Solution With Explanation",
            "discussion_vote": "78",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/palindrome-pairs/discuss/79209/Accepted-Python-Solution-With-Explanation"
        },
        {
            "discussion_title": "Easy to understand AC C++ solution O(n*k^2) using map",
            "discussion_vote": "69",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/palindrome-pairs/discuss/79215/Easy-to-understand-AC-C%2B%2B-solution-O(n*k2)-using-map"
        }
    ],
    "337": [
        {
            "discussion_title": "Step by step tackling of the problem",
            "discussion_vote": "1.4K",
            "discussion_views": "56.8K",
            "discussion_link": "https://leetcode.com/problems/house-robber-iii/discuss/79330/Step-by-step-tackling-of-the-problem"
        },
        {
            "discussion_title": "Easy understanding solution with dfs",
            "discussion_vote": "96",
            "discussion_views": "16.4K",
            "discussion_link": "https://leetcode.com/problems/house-robber-iii/discuss/79363/Easy-understanding-solution-with-dfs"
        },
        {
            "discussion_title": "Simple C++ solution",
            "discussion_vote": "53",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/house-robber-iii/discuss/79333/Simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "Easy to understand(java)",
            "discussion_vote": "31",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/house-robber-iii/discuss/79344/Easy-to-understand(java)"
        },
        {
            "discussion_title": "C++, JAVA, PYTHON &  explanation",
            "discussion_vote": "27",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/house-robber-iii/discuss/79437/C%2B%2B-JAVA-PYTHON-and-explanation"
        }
    ],
    "338": [
        {
            "discussion_title": "Three-Line Java Solution",
            "discussion_vote": "445",
            "discussion_views": "48.7K",
            "discussion_link": "https://leetcode.com/problems/counting-bits/discuss/79539/Three-Line-Java-Solution"
        },
        {
            "discussion_title": "Four lines, C++, time O(n), space O(n)",
            "discussion_vote": "197",
            "discussion_views": "23.1K",
            "discussion_link": "https://leetcode.com/problems/counting-bits/discuss/79527/Four-lines-C%2B%2B-time-O(n)-space-O(n)"
        },
        {
            "discussion_title": "How we handle this question on interview [Thinking process + DP solution]",
            "discussion_vote": "172",
            "discussion_views": "17.5K",
            "discussion_link": "https://leetcode.com/problems/counting-bits/discuss/79557/How-we-handle-this-question-on-interview-Thinking-process-%2B-DP-solution"
        },
        {
            "discussion_title": "Simple Java O(n) solution using two pointers",
            "discussion_vote": "70",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/counting-bits/discuss/79615/Simple-Java-O(n)-solution-using-two-pointers"
        },
        {
            "discussion_title": "Simple Java Dynamic Programming without any bitwise operation",
            "discussion_vote": "41",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/counting-bits/discuss/79812/Simple-Java-Dynamic-Programming-without-any-bitwise-operation"
        }
    ],
    "341": [
        {
            "discussion_title": "Simple Java solution using a stack with explanation",
            "discussion_vote": "223",
            "discussion_views": "49.0K",
            "discussion_link": "https://leetcode.com/problems/flatten-nested-list-iterator/discuss/80147/Simple-Java-solution-using-a-stack-with-explanation"
        },
        {
            "discussion_title": "Real iterator in Python, Java, C++",
            "discussion_vote": "190",
            "discussion_views": "36.9K",
            "discussion_link": "https://leetcode.com/problems/flatten-nested-list-iterator/discuss/80146/Real-iterator-in-Python-Java-C%2B%2B"
        },
        {
            "discussion_title": "Share my Java neat solution, 8ms",
            "discussion_vote": "51",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/flatten-nested-list-iterator/discuss/80175/Share-my-Java-neat-solution-8ms"
        },
        {
            "discussion_title": "8-line Python Solution",
            "discussion_vote": "37",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/flatten-nested-list-iterator/discuss/80142/8-line-Python-Solution"
        },
        {
            "discussion_title": "Concise C++ without storing all values at initialization",
            "discussion_vote": "31",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/flatten-nested-list-iterator/discuss/80169/Concise-C%2B%2B-without-storing-all-values-at-initialization"
        }
    ],
    "342": [
        {
            "discussion_title": "Java 1-line (cheating for the purpose of not using loops)",
            "discussion_vote": "179",
            "discussion_views": "34.6K",
            "discussion_link": "https://leetcode.com/problems/power-of-four/discuss/80457/Java-1-line-(cheating-for-the-purpose-of-not-using-loops)"
        },
        {
            "discussion_title": "1 line C++ solution without confusing bit manipulations",
            "discussion_vote": "136",
            "discussion_views": "22.0K",
            "discussion_link": "https://leetcode.com/problems/power-of-four/discuss/80460/1-line-C%2B%2B-solution-without-confusing-bit-manipulations"
        },
        {
            "discussion_title": "O(1) one-line solution without loops",
            "discussion_vote": "73",
            "discussion_views": "18.4K",
            "discussion_link": "https://leetcode.com/problems/power-of-four/discuss/80456/O(1)-one-line-solution-without-loops"
        },
        {
            "discussion_title": "Python one line solution with explanations",
            "discussion_vote": "45",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/power-of-four/discuss/80461/Python-one-line-solution-with-explanations"
        },
        {
            "discussion_title": "Simple C++ O(1) solution without 0x55555555",
            "discussion_vote": "42",
            "discussion_views": "8.7K",
            "discussion_link": "https://leetcode.com/problems/power-of-four/discuss/80448/Simple-C%2B%2B-O(1)-solution-without-0x55555555"
        }
    ],
    "343": [
        {
            "discussion_title": "Why factor 2 or 3? The math behind this problem.",
            "discussion_vote": "241",
            "discussion_views": "34.9K",
            "discussion_link": "https://leetcode.com/problems/integer-break/discuss/80721/Why-factor-2-or-3-The-math-behind-this-problem."
        },
        {
            "discussion_title": "A simple explanation of the math part and a O(n) solution",
            "discussion_vote": "152",
            "discussion_views": "22.1K",
            "discussion_link": "https://leetcode.com/problems/integer-break/discuss/80689/A-simple-explanation-of-the-math-part-and-a-O(n)-solution"
        },
        {
            "discussion_title": "Java DP solution",
            "discussion_vote": "83",
            "discussion_views": "16.7K",
            "discussion_link": "https://leetcode.com/problems/integer-break/discuss/80694/Java-DP-solution"
        },
        {
            "discussion_title": "O(log(n)) Time solution with explanation",
            "discussion_vote": "53",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/integer-break/discuss/80785/O(log(n))-Time-solution-with-explanation"
        },
        {
            "discussion_title": "Easy to understand C++ with explanation",
            "discussion_vote": "23",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/integer-break/discuss/80720/Easy-to-understand-C%2B%2B-with-explanation"
        }
    ],
    "344": [
        {
            "discussion_title": "[JAVA] Simple and Clean with Explanations [6 Solutions]",
            "discussion_vote": "109",
            "discussion_views": "54.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-string/discuss/80937/JAVA-Simple-and-Clean-with-Explanations-6-Solutions"
        },
        {
            "discussion_title": "Python2.7 (3 solutions: Recursive, Classic, Pythonic)",
            "discussion_vote": "53",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-string/discuss/80946/Python2.7-(3-solutions%3A-Recursive-Classic-Pythonic)"
        },
        {
            "discussion_title": "Simple C++ solution",
            "discussion_vote": "42",
            "discussion_views": "19.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-string/discuss/80935/Simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "28",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/reverse-string/discuss/80961/Python-solution"
        },
        {
            "discussion_title": "C solution sharing",
            "discussion_vote": "17",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/reverse-string/discuss/81156/C-solution-sharing"
        }
    ],
    "345": [
        {
            "discussion_title": "Java Standard Two Pointer Solution",
            "discussion_vote": "90",
            "discussion_views": "38.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-vowels-of-a-string/discuss/81225/Java-Standard-Two-Pointer-Solution"
        },
        {
            "discussion_title": "Super clean C++ solution using find_first_of and find_last_of",
            "discussion_vote": "45",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/reverse-vowels-of-a-string/discuss/81240/Super-clean-C%2B%2B-solution-using-find_first_of-and-find_last_of"
        },
        {
            "discussion_title": "1-2 lines Python/Ruby",
            "discussion_vote": "42",
            "discussion_views": "13.0K",
            "discussion_link": "https://leetcode.com/problems/reverse-vowels-of-a-string/discuss/81262/1-2-lines-PythonRuby"
        },
        {
            "discussion_title": "Python 2 Pointers Solution",
            "discussion_vote": "23",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/reverse-vowels-of-a-string/discuss/81233/Python-2-Pointers-Solution"
        },
        {
            "discussion_title": "One pass Java Solution 13ms",
            "discussion_vote": "22",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/reverse-vowels-of-a-string/discuss/81221/One-pass-Java-Solution-13ms"
        }
    ],
    "347": [
        {
            "discussion_title": "Java O(n) Solution - Bucket Sort",
            "discussion_vote": "344",
            "discussion_views": "86.1K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-elements/discuss/81602/Java-O(n)-Solution-Bucket-Sort"
        },
        {
            "discussion_title": "3 Java Solution using Array, MaxHeap, TreeMap",
            "discussion_vote": "148",
            "discussion_views": "41.1K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-elements/discuss/81635/3-Java-Solution-using-Array-MaxHeap-TreeMap"
        },
        {
            "discussion_title": "C++ O(n log(n-k)) unordered_map and priority_queue(maxheap) solution",
            "discussion_vote": "65",
            "discussion_views": "23.6K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-elements/discuss/81624/C%2B%2B-O(n-log(n-k))-unordered_map-and-priority_queue(maxheap)-solution"
        },
        {
            "discussion_title": "3 ways to solve this problem",
            "discussion_vote": "64",
            "discussion_views": "27.7K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-elements/discuss/81631/3-ways-to-solve-this-problem"
        },
        {
            "discussion_title": "Simple C++ solution using hash table and bucket sort",
            "discussion_vote": "37",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-elements/discuss/81623/Simple-C%2B%2B-solution-using-hash-table-and-bucket-sort"
        }
    ],
    "349": [
        {
            "discussion_title": "Three Java Solutions",
            "discussion_vote": "208",
            "discussion_views": "61.1K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays/discuss/81969/Three-Java-Solutions"
        },
        {
            "discussion_title": "8ms concise C++ using unordered_set",
            "discussion_vote": "50",
            "discussion_views": "15.2K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays/discuss/82001/8ms-concise-C%2B%2B-using-unordered_set"
        },
        {
            "discussion_title": "Small C++ solution",
            "discussion_vote": "38",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays/discuss/81966/Small-C%2B%2B-solution"
        },
        {
            "discussion_title": "5ms Java Using 1 hashset and time complexity of O(m+n)",
            "discussion_vote": "33",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays/discuss/81974/5ms-Java-Using-1-hashset-and-time-complexity-of-O(m%2Bn)"
        },
        {
            "discussion_title": "Python code, 3 lines using set",
            "discussion_vote": "30",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays/discuss/81999/Python-code-3-lines-using-set"
        }
    ],
    "350": [
        {
            "discussion_title": "Solution to 3rd follow-up question",
            "discussion_vote": "175",
            "discussion_views": "46.2K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/discuss/82243/Solution-to-3rd-follow-up-question"
        },
        {
            "discussion_title": "AC solution using Java HashMap",
            "discussion_vote": "115",
            "discussion_views": "38.3K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/discuss/82241/AC-solution-using-Java-HashMap"
        },
        {
            "discussion_title": "C++ hash table solution and sort + two pointers solution with time and space complexity",
            "discussion_vote": "75",
            "discussion_views": "19.6K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/discuss/82263/C%2B%2B-hash-table-solution-and-sort-%2B-two-pointers-solution-with-time-and-space-complexity"
        },
        {
            "discussion_title": "Short Python / C++",
            "discussion_vote": "56",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/discuss/82269/Short-Python-C%2B%2B"
        },
        {
            "discussion_title": "2 lines in Python",
            "discussion_vote": "42",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/discuss/82240/2-lines-in-Python"
        }
    ],
    "352": [
        {
            "discussion_title": "Java solution using TreeMap, real O(logN) per adding.",
            "discussion_vote": "101",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/discuss/82553/Java-solution-using-TreeMap-real-O(logN)-per-adding."
        },
        {
            "discussion_title": "Very concise c++ solution.",
            "discussion_vote": "35",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/discuss/82557/Very-concise-c%2B%2B-solution."
        },
        {
            "discussion_title": "Share my python solution using heap",
            "discussion_vote": "17",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/discuss/82548/Share-my-python-solution-using-heap"
        },
        {
            "discussion_title": "Java fast log (N) solution (186ms) without using the TreeMap but a customized BST",
            "discussion_vote": "15",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/discuss/82610/Java-fast-log-(N)-solution-(186ms)-without-using-the-TreeMap-but-a-customized-BST"
        },
        {
            "discussion_title": "I can not understand the question description, can any one explain it?",
            "discussion_vote": "9",
            "discussion_views": "849",
            "discussion_link": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/discuss/82656/I-can-not-understand-the-question-description-can-any-one-explain-it"
        }
    ],
    "354": [
        {
            "discussion_title": "Java NLogN Solution with Explanation",
            "discussion_vote": "272",
            "discussion_views": "35.0K",
            "discussion_link": "https://leetcode.com/problems/russian-doll-envelopes/discuss/82763/Java-NLogN-Solution-with-Explanation"
        },
        {
            "discussion_title": "Simple DP solution",
            "discussion_vote": "41",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/russian-doll-envelopes/discuss/82759/Simple-DP-solution"
        },
        {
            "discussion_title": "[[1,3],[3,5],[6,7],[6,8],[8,4],[9,5]] should be 4 not 3",
            "discussion_vote": "21",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/russian-doll-envelopes/discuss/82757/133567688495-should-be-4-not-3"
        },
        {
            "discussion_title": "C++ 9-line Short and Clean O(nlogn) solution (plus classic O(n^2) dp solution).",
            "discussion_vote": "19",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/russian-doll-envelopes/discuss/82808/C%2B%2B-9-line-Short-and-Clean-O(nlogn)-solution-(plus-classic-O(n2)-dp-solution)."
        },
        {
            "discussion_title": "A Trick to solve this problem.",
            "discussion_vote": "18",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/russian-doll-envelopes/discuss/82796/A-Trick-to-solve-this-problem."
        }
    ],
    "355": [
        {
            "discussion_title": "Java OO Design with most efficient function getNewsFeed",
            "discussion_vote": "204",
            "discussion_views": "29.1K",
            "discussion_link": "https://leetcode.com/problems/design-twitter/discuss/82825/Java-OO-Design-with-most-efficient-function-getNewsFeed"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "63",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/design-twitter/discuss/82863/Python-solution"
        },
        {
            "discussion_title": "Java Solutions with Two Maps and PriorityQueue",
            "discussion_vote": "22",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/design-twitter/discuss/82837/Java-Solutions-with-Two-Maps-and-PriorityQueue"
        },
        {
            "discussion_title": "72ms C++ solution",
            "discussion_vote": "17",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/design-twitter/discuss/82871/72ms-C%2B%2B-solution"
        },
        {
            "discussion_title": "Java OOD solution with detailed explanation",
            "discussion_vote": "13",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/design-twitter/discuss/82935/Java-OOD-solution-with-detailed-explanation"
        }
    ],
    "357": [
        {
            "discussion_title": "JAVA DP O(1) solution.",
            "discussion_vote": "131",
            "discussion_views": "29.3K",
            "discussion_link": "https://leetcode.com/problems/count-numbers-with-unique-digits/discuss/83041/JAVA-DP-O(1)-solution."
        },
        {
            "discussion_title": "Java, O(1), with explanation",
            "discussion_vote": "60",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/count-numbers-with-unique-digits/discuss/83061/Java-O(1)-with-explanation"
        },
        {
            "discussion_title": "Share my 0ms C++ solution with proof and explanation",
            "discussion_vote": "32",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/count-numbers-with-unique-digits/discuss/83056/Share-my-0ms-C%2B%2B-solution-with-proof-and-explanation"
        },
        {
            "discussion_title": "Backtracking solution",
            "discussion_vote": "29",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/count-numbers-with-unique-digits/discuss/83054/Backtracking-solution"
        },
        {
            "discussion_title": "Simple Python solution, 90%",
            "discussion_vote": "28",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/count-numbers-with-unique-digits/discuss/83040/Simple-Python-solution-90"
        }
    ],
    "363": [
        {
            "discussion_title": "Accepted C++ codes with explanation and references",
            "discussion_vote": "176",
            "discussion_views": "35.1K",
            "discussion_link": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/discuss/83599/Accepted-C%2B%2B-codes-with-explanation-and-references"
        },
        {
            "discussion_title": "Java Binary Search solution time complexity min(m,n)^2*max(m,n)*log(max(m,n))",
            "discussion_vote": "58",
            "discussion_views": "17.6K",
            "discussion_link": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/discuss/83597/Java-Binary-Search-solution-time-complexity-min(mn)2*max(mn)*log(max(mn))"
        },
        {
            "discussion_title": "2 Accepted Java Solution",
            "discussion_vote": "29",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/discuss/83618/2-Accepted-Java-Solution"
        },
        {
            "discussion_title": "JAVA 117ms, beat 99.81%, merge sort",
            "discussion_vote": "23",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/discuss/83595/JAVA-117ms-beat-99.81-merge-sort"
        },
        {
            "discussion_title": "Any Accepted Python Solution?",
            "discussion_vote": "8",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/discuss/83596/Any-Accepted-Python-Solution"
        }
    ],
    "365": [
        {
            "discussion_title": "Math solution - Java solution",
            "discussion_vote": "137",
            "discussion_views": "27.3K",
            "discussion_link": "https://leetcode.com/problems/water-and-jug-problem/discuss/83715/Math-solution-Java-solution"
        },
        {
            "discussion_title": "This problem should be classified as HARD",
            "discussion_vote": "76",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/water-and-jug-problem/discuss/83717/This-problem-should-be-classified-as-HARD"
        },
        {
            "discussion_title": "A little explanation on GCD method. C++/Java/Python",
            "discussion_vote": "73",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/water-and-jug-problem/discuss/83714/A-little-explanation-on-GCD-method.-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "Breadth-First Search with explanation.",
            "discussion_vote": "46",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/water-and-jug-problem/discuss/83709/Breadth-First-Search-with-explanation."
        },
        {
            "discussion_title": "Clear Explanation of Why Using GCD",
            "discussion_vote": "34",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/water-and-jug-problem/discuss/83720/Clear-Explanation-of-Why-Using-GCD"
        }
    ],
    "367": [
        {
            "discussion_title": "A square number is 1+3+5+7+..., JAVA code",
            "discussion_vote": "162",
            "discussion_views": "36.5K",
            "discussion_link": "https://leetcode.com/problems/valid-perfect-square/discuss/83874/A-square-number-is-1%2B3%2B5%2B7%2B...-JAVA-code"
        },
        {
            "discussion_title": "3-4 short lines, Integer Newton, Most Languages",
            "discussion_vote": "30",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/valid-perfect-square/discuss/83907/3-4-short-lines-Integer-Newton-Most-Languages"
        },
        {
            "discussion_title": "Java Three Solutions 1,3,5,.. Sequence/Binary Search/Newton",
            "discussion_vote": "26",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/valid-perfect-square/discuss/83902/Java-Three-Solutions-135..-SequenceBinary-SearchNewton"
        },
        {
            "discussion_title": "O(1) time c++ solution inspired by Q_rsqrt",
            "discussion_vote": "20",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/valid-perfect-square/discuss/83872/O(1)-time-c%2B%2B-solution-inspired-by-Q_rsqrt"
        },
        {
            "discussion_title": "O(logN) Bisection method",
            "discussion_vote": "16",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/valid-perfect-square/discuss/83888/O(logN)-Bisection-method"
        }
    ],
    "368": [
        {
            "discussion_title": "Classic DP solution similar to LIS, O(n^2)",
            "discussion_vote": "106",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/largest-divisible-subset/discuss/84006/Classic-DP-solution-similar-to-LIS-O(n2)"
        },
        {
            "discussion_title": "C++ Solution with Explanations",
            "discussion_vote": "90",
            "discussion_views": "20.2K",
            "discussion_link": "https://leetcode.com/problems/largest-divisible-subset/discuss/83998/C%2B%2B-Solution-with-Explanations"
        },
        {
            "discussion_title": "4 lines in Python",
            "discussion_vote": "86",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/largest-divisible-subset/discuss/84002/4-lines-in-Python"
        },
        {
            "discussion_title": "Easy understood Java DP solution in 28ms with O(n^2) time",
            "discussion_vote": "42",
            "discussion_views": "13.1K",
            "discussion_link": "https://leetcode.com/problems/largest-divisible-subset/discuss/83999/Easy-understood-Java-DP-solution-in-28ms-with-O(n2)-time"
        },
        {
            "discussion_title": "Java Solution in 32ms O(N^2) time, O(N) space",
            "discussion_vote": "16",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/largest-divisible-subset/discuss/84031/Java-Solution-in-32ms-O(N2)-time-O(N)-space"
        }
    ],
    "371": [
        {
            "discussion_title": "A summary: how to use bit manipulation to solve problems easily and efficiently",
            "discussion_vote": "1.2K",
            "discussion_views": "92.2K",
            "discussion_link": "https://leetcode.com/problems/sum-of-two-integers/discuss/84278/A-summary%3A-how-to-use-bit-manipulation-to-solve-problems-easily-and-efficiently"
        },
        {
            "discussion_title": "Java simple easy understand solution with explanation",
            "discussion_vote": "314",
            "discussion_views": "59.9K",
            "discussion_link": "https://leetcode.com/problems/sum-of-two-integers/discuss/84290/Java-simple-easy-understand-solution-with-explanation"
        },
        {
            "discussion_title": "Python solution with no \"+-*/%\", completely bit manipulation guaranteed",
            "discussion_vote": "96",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/sum-of-two-integers/discuss/84282/Python-solution-with-no-%22%2B-*%22-completely-bit-manipulation-guaranteed"
        },
        {
            "discussion_title": "Share my C++ solutions,easy to understand",
            "discussion_vote": "72",
            "discussion_views": "21.2K",
            "discussion_link": "https://leetcode.com/problems/sum-of-two-integers/discuss/84305/Share-my-C%2B%2B-solutionseasy-to-understand"
        },
        {
            "discussion_title": "Simple explanation on how to arrive at the solution ",
            "discussion_vote": "59",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/sum-of-two-integers/discuss/132479/Simple-explanation-on-how-to-arrive-at-the-solution"
        }
    ],
    "372": [
        {
            "discussion_title": "C++ Clean and Short Solution",
            "discussion_vote": "126",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/super-pow/discuss/84472/C%2B%2B-Clean-and-Short-Solution"
        },
        {
            "discussion_title": "Math solusion based on Euler's theorem, power called only ONCE, C++/Java/1-line-Python",
            "discussion_vote": "51",
            "discussion_views": "16.3K",
            "discussion_link": "https://leetcode.com/problems/super-pow/discuss/84466/Math-solusion-based-on-Euler's-theorem-power-called-only-ONCE-C%2B%2BJava1-line-Python"
        },
        {
            "discussion_title": "What's the point of this kind of question?",
            "discussion_vote": "37",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/super-pow/discuss/84470/What's-the-point-of-this-kind-of-question"
        },
        {
            "discussion_title": "Java 4ms solution using the remainder repeat pattern",
            "discussion_vote": "33",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/super-pow/discuss/84479/Java-4ms-solution-using-the-remainder-repeat-pattern"
        },
        {
            "discussion_title": "Fermat and Chinese Remainder",
            "discussion_vote": "16",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/super-pow/discuss/84475/Fermat-and-Chinese-Remainder"
        }
    ],
    "373": [
        {
            "discussion_title": "simple Java O(KlogK) solution with explanation",
            "discussion_vote": "196",
            "discussion_views": "31.2K",
            "discussion_link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/discuss/84551/simple-Java-O(KlogK)-solution-with-explanation"
        },
        {
            "discussion_title": "Slow 1-liner to Fast solutions",
            "discussion_vote": "131",
            "discussion_views": "26.3K",
            "discussion_link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/discuss/84550/Slow-1-liner-to-Fast-solutions"
        },
        {
            "discussion_title": "Share My Solution which beat 96.42%",
            "discussion_vote": "65",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/discuss/84566/Share-My-Solution-which-beat-96.42"
        },
        {
            "discussion_title": "Java 9ms heap queue solution, k log(k)",
            "discussion_vote": "56",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/discuss/84569/Java-9ms-heap-queue-solution-k-log(k)"
        },
        {
            "discussion_title": "Clean 16ms C++ O(N) Space O(KlogN) Time Solution using Priority queue",
            "discussion_vote": "52",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/discuss/84607/Clean-16ms-C%2B%2B-O(N)-Space-O(KlogN)-Time-Solution-using-Priority-queue"
        }
    ],
    "374": [
        {
            "discussion_title": "The key point is to read the problem carefully.",
            "discussion_vote": "97",
            "discussion_views": "22.2K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower/discuss/84665/The-key-point-is-to-read-the-problem-carefully."
        },
        {
            "discussion_title": "2 lines as usual",
            "discussion_vote": "25",
            "discussion_views": "18.9K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower/discuss/84677/2-lines-as-usual"
        },
        {
            "discussion_title": "0ms c++ binary search",
            "discussion_vote": "17",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower/discuss/84664/0ms-c%2B%2B-binary-search"
        },
        {
            "discussion_title": "Short Java code using binary search",
            "discussion_vote": "17",
            "discussion_views": "13.2K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower/discuss/84668/Short-Java-code-using-binary-search"
        },
        {
            "discussion_title": "I hope developers of Leetcode can make the question definition more clear.",
            "discussion_vote": "11",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower/discuss/84712/I-hope-developers-of-Leetcode-can-make-the-question-definition-more-clear."
        }
    ],
    "375": [
        {
            "discussion_title": "Simple DP solution with explanation~~",
            "discussion_vote": "162",
            "discussion_views": "42.5K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/discuss/84764/Simple-DP-solution-with-explanation~~"
        },
        {
            "discussion_title": "Improve the Question and Example",
            "discussion_vote": "121",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/discuss/84762/Improve-the-Question-and-Example"
        },
        {
            "discussion_title": "Clarification on the problem description. [Problem description need to be updated !!! ]",
            "discussion_vote": "110",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/discuss/84766/Clarification-on-the-problem-description.-Problem-description-need-to-be-updated-!!!"
        },
        {
            "discussion_title": "Java DP solution",
            "discussion_vote": "71",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/discuss/84787/Java-DP-solution"
        },
        {
            "discussion_title": "Java commented DP solution",
            "discussion_vote": "35",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/discuss/84807/Java-commented-DP-solution"
        }
    ],
    "376": [
        {
            "discussion_title": "Easy understanding DP solution with O(n), Java version",
            "discussion_vote": "80",
            "discussion_views": "8.7K",
            "discussion_link": "https://leetcode.com/problems/wiggle-subsequence/discuss/84843/Easy-understanding-DP-solution-with-O(n)-Java-version"
        },
        {
            "discussion_title": "Very Simple Java Solution with detail explanation",
            "discussion_vote": "69",
            "discussion_views": "20.0K",
            "discussion_link": "https://leetcode.com/problems/wiggle-subsequence/discuss/84849/Very-Simple-Java-Solution-with-detail-explanation"
        },
        {
            "discussion_title": "C++ 0ms O(N) dynamic programming solution",
            "discussion_vote": "45",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/wiggle-subsequence/discuss/84887/C%2B%2B-0ms-O(N)-dynamic-programming-solution"
        },
        {
            "discussion_title": "Two solutions. One is DP, the other is greedy (8 lines).",
            "discussion_vote": "41",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/wiggle-subsequence/discuss/84883/Two-solutions.-One-is-DP-the-other-is-greedy-(8-lines)."
        },
        {
            "discussion_title": "3 lines O(n) Python with explanation/proof",
            "discussion_vote": "28",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/wiggle-subsequence/discuss/84921/3-lines-O(n)-Python-with-explanationproof"
        }
    ],
    "377": [
        {
            "discussion_title": "1ms Java DP Solution with Detailed Explanation",
            "discussion_vote": "276",
            "discussion_views": "49.6K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iv/discuss/85036/1ms-Java-DP-Solution-with-Detailed-Explanation"
        },
        {
            "discussion_title": "My 3ms Java DP solution",
            "discussion_vote": "84",
            "discussion_views": "21.3K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iv/discuss/85079/My-3ms-Java-DP-solution"
        },
        {
            "discussion_title": "Are you kidding me? It is Combination??",
            "discussion_vote": "80",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iv/discuss/85095/Are-you-kidding-me-It-is-Combination"
        },
        {
            "discussion_title": "C++ template for ALL Combination Problem Set",
            "discussion_vote": "73",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iv/discuss/85120/C%2B%2B-template-for-ALL-Combination-Problem-Set"
        },
        {
            "discussion_title": "JAVA recursion solution using HashMap as memory.",
            "discussion_vote": "39",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/combination-sum-iv/discuss/85060/JAVA-recursion-solution-using-HashMap-as-memory."
        }
    ],
    "378": [
        {
            "discussion_title": "Share my thoughts and Clean Java Code",
            "discussion_vote": "423",
            "discussion_views": "82.8K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/discuss/85173/Share-my-thoughts-and-Clean-Java-Code"
        },
        {
            "discussion_title": "Java 1ms nlog(max -min) solution",
            "discussion_vote": "88",
            "discussion_views": "18.7K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/discuss/85177/Java-1ms-nlog(max-min)-solution"
        },
        {
            "discussion_title": "O(n) from paper. Yes, O(#rows).",
            "discussion_vote": "71",
            "discussion_views": "25.6K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/discuss/85170/O(n)-from-paper.-Yes-O(rows)."
        },
        {
            "discussion_title": "My solution using Binary Search in C++",
            "discussion_vote": "71",
            "discussion_views": "39.1K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/discuss/85182/My-solution-using-Binary-Search-in-C%2B%2B"
        },
        {
            "discussion_title": "Binary Search, Heap and Sorting comparison, with concise code and 1-liners, Python 72 ms",
            "discussion_vote": "33",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/discuss/85193/Binary-Search-Heap-and-Sorting-comparison-with-concise-code-and-1-liners-Python-72-ms"
        }
    ],
    "380": [
        {
            "discussion_title": "Java solution using a HashMap and an ArrayList along with a follow-up. (131 ms)",
            "discussion_vote": "296",
            "discussion_views": "66.6K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1/discuss/85401/Java-solution-using-a-HashMap-and-an-ArrayList-along-with-a-follow-up.-(131-ms)"
        },
        {
            "discussion_title": "Simple solution in Python",
            "discussion_vote": "63",
            "discussion_views": "13.2K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1/discuss/85397/Simple-solution-in-Python"
        },
        {
            "discussion_title": "AC C++ Solution. Unordered_map + Vector",
            "discussion_vote": "49",
            "discussion_views": "16.0K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1/discuss/85422/AC-C%2B%2B-Solution.-Unordered_map-%2B-Vector"
        },
        {
            "discussion_title": "JAVA Solution, concise code with HashMap and ArrayList, easy to understand",
            "discussion_vote": "12",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1/discuss/85459/JAVA-Solution-concise-code-with-HashMap-and-ArrayList-easy-to-understand"
        },
        {
            "discussion_title": "Java solution with two HashMaps: easy to understand",
            "discussion_vote": "12",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1/discuss/85434/Java-solution-with-two-HashMaps%3A-easy-to-understand"
        }
    ],
    "381": [
        {
            "discussion_title": "C++ 128m Solution, Real O(1) Solution",
            "discussion_vote": "49",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/discuss/85541/C%2B%2B-128m-Solution-Real-O(1)-Solution"
        },
        {
            "discussion_title": "Java HaspMap, LinkedHashSet, ArrayList (155 ms)",
            "discussion_vote": "40",
            "discussion_views": "24.9K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/discuss/85540/Java-HaspMap-LinkedHashSet-ArrayList-(155-ms)"
        },
        {
            "discussion_title": "Frugal Python code",
            "discussion_vote": "23",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/discuss/85556/Frugal-Python-code"
        },
        {
            "discussion_title": "Clean O(1) Java Solution with HashMap and Set",
            "discussion_vote": "16",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/discuss/85555/Clean-O(1)-Java-Solution-with-HashMap-and-Set"
        },
        {
            "discussion_title": "Easy Understanding Java Solution using HashSet",
            "discussion_vote": "9",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/discuss/85591/Easy-Understanding-Java-Solution-using-HashSet"
        }
    ],
    "382": [
        {
            "discussion_title": "Brief explanation for Reservoir Sampling",
            "discussion_vote": "181",
            "discussion_views": "35.2K",
            "discussion_link": "https://leetcode.com/problems/linked-list-random-node/discuss/85659/Brief-explanation-for-Reservoir-Sampling"
        },
        {
            "discussion_title": "Java Solution with cases explain",
            "discussion_vote": "147",
            "discussion_views": "23.3K",
            "discussion_link": "https://leetcode.com/problems/linked-list-random-node/discuss/85662/Java-Solution-with-cases-explain"
        },
        {
            "discussion_title": "using \"Reservoir sampling\" O(1) space, O(n) time complexity\\uff0cc++",
            "discussion_vote": "31",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/linked-list-random-node/discuss/85690/using-%22Reservoir-sampling%22-O(1)-space-O(n)-time-complexityuff0cc%2B%2B"
        },
        {
            "discussion_title": "O(n) Time & O(1) Space Java Solution",
            "discussion_vote": "31",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/linked-list-random-node/discuss/85701/O(n)-Time-and-O(1)-Space-Java-Solution"
        },
        {
            "discussion_title": "\"buffered\" reservoir sampling",
            "discussion_vote": "17",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/linked-list-random-node/discuss/85673/%22buffered%22-reservoir-sampling"
        }
    ],
    "383": [
        {
            "discussion_title": "Java O(n) Solution---Easy to understand",
            "discussion_vote": "109",
            "discussion_views": "30.6K",
            "discussion_link": "https://leetcode.com/problems/ransom-note/discuss/85783/Java-O(n)-Solution-Easy-to-understand"
        },
        {
            "discussion_title": "O(m+n) one-liner Python",
            "discussion_vote": "34",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/ransom-note/discuss/85837/O(m%2Bn)-one-liner-Python"
        },
        {
            "discussion_title": "Java Map solution",
            "discussion_vote": "19",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/ransom-note/discuss/85881/Java-Map-solution"
        },
        {
            "discussion_title": "Share My Easy to Understand 5 lines of Java Code, 13ms beats 96%",
            "discussion_vote": "18",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/ransom-note/discuss/85801/Share-My-Easy-to-Understand-5-lines-of-Java-Code-13ms-beats-96"
        },
        {
            "discussion_title": "Two AC C++ solutions (unordered_map/vector)",
            "discussion_vote": "17",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/ransom-note/discuss/85822/Two-AC-C%2B%2B-solutions-(unordered_mapvector)"
        }
    ],
    "384": [
        {
            "discussion_title": "First Accepted Solution - Java",
            "discussion_vote": "59",
            "discussion_views": "31.8K",
            "discussion_link": "https://leetcode.com/problems/shuffle-an-array/discuss/85958/First-Accepted-Solution-Java"
        },
        {
            "discussion_title": "Python hack",
            "discussion_vote": "44",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/shuffle-an-array/discuss/86053/Python-hack"
        },
        {
            "discussion_title": "simple java solution",
            "discussion_vote": "28",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/shuffle-an-array/discuss/86006/simple-java-solution"
        },
        {
            "discussion_title": "Straight-forward C++ solution",
            "discussion_vote": "21",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/shuffle-an-array/discuss/85979/Straight-forward-C%2B%2B-solution"
        },
        {
            "discussion_title": "easy python solution based on generating random index and swapping",
            "discussion_vote": "17",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/shuffle-an-array/discuss/85957/easy-python-solution-based-on-generating-random-index-and-swapping"
        }
    ],
    "385": [
        {
            "discussion_title": "An Java Iterative Solution",
            "discussion_vote": "65",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/mini-parser/discuss/86066/An-Java-Iterative-Solution"
        },
        {
            "discussion_title": "Clarification",
            "discussion_vote": "40",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/mini-parser/discuss/86061/Clarification"
        },
        {
            "discussion_title": "Python & C++ solutions",
            "discussion_vote": "30",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/mini-parser/discuss/86060/Python-and-C%2B%2B-solutions"
        },
        {
            "discussion_title": "C++ Non-Recursive One-Pass Solution (using Stack) || A Possible Implementation of NestedInteger",
            "discussion_vote": "23",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/mini-parser/discuss/86074/C%2B%2B-Non-Recursive-One-Pass-Solution-(using-Stack)-oror-A-Possible-Implementation-of-NestedInteger"
        },
        {
            "discussion_title": "Short Java recursive solution",
            "discussion_vote": "16",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/mini-parser/discuss/86083/Short-Java-recursive-solution"
        }
    ],
    "386": [
        {
            "discussion_title": "Java O(n) time, O(1) space iterative solution 130ms",
            "discussion_vote": "162",
            "discussion_views": "23.4K",
            "discussion_link": "https://leetcode.com/problems/lexicographical-numbers/discuss/86242/Java-O(n)-time-O(1)-space-iterative-solution-130ms"
        },
        {
            "discussion_title": "Simple Java DFS Solution",
            "discussion_vote": "148",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/lexicographical-numbers/discuss/86231/Simple-Java-DFS-Solution"
        },
        {
            "discussion_title": "AC 200ms c++ solution, beats 98%",
            "discussion_vote": "41",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/lexicographical-numbers/discuss/86237/AC-200ms-c%2B%2B-solution-beats-98"
        },
        {
            "discussion_title": "The most elegant python solution so far. 10 liner. iterative. O(n) time, O(1) space.",
            "discussion_vote": "29",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/lexicographical-numbers/discuss/86228/The-most-elegant-python-solution-so-far.-10-liner.-iterative.-O(n)-time-O(1)-space."
        },
        {
            "discussion_title": "Python with Sorting",
            "discussion_vote": "20",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/lexicographical-numbers/discuss/86235/Python-with-Sorting"
        }
    ],
    "387": [
        {
            "discussion_title": "Java 7 lines solution 29ms",
            "discussion_vote": "177",
            "discussion_views": "68.7K",
            "discussion_link": "https://leetcode.com/problems/first-unique-character-in-a-string/discuss/86348/Java-7-lines-solution-29ms"
        },
        {
            "discussion_title": "Python 3 lines beats 100% (~ 60ms) !",
            "discussion_vote": "59",
            "discussion_views": "17.3K",
            "discussion_link": "https://leetcode.com/problems/first-unique-character-in-a-string/discuss/86351/Python-3-lines-beats-100-(~-60ms)-!"
        },
        {
            "discussion_title": "Java One Pass Solution with LinkedHashMap",
            "discussion_vote": "33",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/first-unique-character-in-a-string/discuss/86511/Java-One-Pass-Solution-with-LinkedHashMap"
        },
        {
            "discussion_title": "JavaScript solution",
            "discussion_vote": "27",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/first-unique-character-in-a-string/discuss/86356/JavaScript-solution"
        },
        {
            "discussion_title": "C++ 2 solutions",
            "discussion_vote": "26",
            "discussion_views": "17.4K",
            "discussion_link": "https://leetcode.com/problems/first-unique-character-in-a-string/discuss/86338/C%2B%2B-2-solutions"
        }
    ],
    "388": [
        {
            "discussion_title": "9 lines 4ms Java solution",
            "discussion_vote": "149",
            "discussion_views": "46.5K",
            "discussion_link": "https://leetcode.com/problems/longest-absolute-file-path/discuss/86615/9-lines-4ms-Java-solution"
        },
        {
            "discussion_title": "Simple Python solution",
            "discussion_vote": "106",
            "discussion_views": "17.6K",
            "discussion_link": "https://leetcode.com/problems/longest-absolute-file-path/discuss/86619/Simple-Python-solution"
        },
        {
            "discussion_title": "This problem is not well-defined. It should state that 4-space is considered as a TAB under certain situation.",
            "discussion_vote": "71",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/longest-absolute-file-path/discuss/86636/This-problem-is-not-well-defined.-It-should-state-that-4-space-is-considered-as-a-TAB-under-certain-situation."
        },
        {
            "discussion_title": "Simple C++ O(n) Solution,0ms",
            "discussion_vote": "30",
            "discussion_views": "11.2K",
            "discussion_link": "https://leetcode.com/problems/longest-absolute-file-path/discuss/86625/Simple-C%2B%2B-O(n)-Solution0ms"
        },
        {
            "discussion_title": "Java O(n) Solution Using Stack",
            "discussion_vote": "29",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/longest-absolute-file-path/discuss/86666/Java-O(n)-Solution-Using-Stack"
        }
    ],
    "389": [
        {
            "discussion_title": "Java solution using bit manipulation",
            "discussion_vote": "141",
            "discussion_views": "34.3K",
            "discussion_link": "https://leetcode.com/problems/find-the-difference/discuss/86825/Java-solution-using-bit-manipulation"
        },
        {
            "discussion_title": "Simple JAVA 8ms solution, 4 lines",
            "discussion_vote": "80",
            "discussion_views": "18.0K",
            "discussion_link": "https://leetcode.com/problems/find-the-difference/discuss/86850/Simple-JAVA-8ms-solution-4-lines"
        },
        {
            "discussion_title": "Concise C++ solution using XOR",
            "discussion_vote": "42",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/find-the-difference/discuss/86826/Concise-C%2B%2B-solution-using-XOR"
        },
        {
            "discussion_title": "3 Different Python Solutions (Dictionary, Difference, XOR)",
            "discussion_vote": "23",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/find-the-difference/discuss/86904/3-Different-Python-Solutions-(Dictionary-Difference-XOR)"
        },
        {
            "discussion_title": "1-liners and 2-liner in Python",
            "discussion_vote": "23",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/find-the-difference/discuss/86845/1-liners-and-2-liner-in-Python"
        }
    ],
    "390": [
        {
            "discussion_title": "JAVA: Easiest solution O(logN) with explanation",
            "discussion_vote": "271",
            "discussion_views": "19.2K",
            "discussion_link": "https://leetcode.com/problems/elimination-game/discuss/87119/JAVA%3A-Easiest-solution-O(logN)-with-explanation"
        },
        {
            "discussion_title": "C 1 line solution with explanation",
            "discussion_vote": "77",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/elimination-game/discuss/87128/C-1-line-solution-with-explanation"
        },
        {
            "discussion_title": "O(logN) solution. clear break down",
            "discussion_vote": "30",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/elimination-game/discuss/87121/O(logN)-solution.-clear-break-down"
        },
        {
            "discussion_title": "one line java solution based on Josephus Problem",
            "discussion_vote": "17",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/elimination-game/discuss/87120/one-line-java-solution-based-on-Josephus-Problem"
        },
        {
            "discussion_title": "C++ 29ms with Complexity of Log4(N) and Explanation",
            "discussion_vote": "13",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/elimination-game/discuss/87117/C%2B%2B-29ms-with-Complexity-of-Log4(N)-and-Explanation"
        }
    ],
    "391": [
        {
            "discussion_title": "Really Easy Understanding Solution(O(n), Java)",
            "discussion_vote": "228",
            "discussion_views": "23.8K",
            "discussion_link": "https://leetcode.com/problems/perfect-rectangle/discuss/87181/Really-Easy-Understanding-Solution(O(n)-Java)"
        },
        {
            "discussion_title": "O(n) solution by counting corners with detailed explaination",
            "discussion_vote": "68",
            "discussion_views": "17.8K",
            "discussion_link": "https://leetcode.com/problems/perfect-rectangle/discuss/87180/O(n)-solution-by-counting-corners-with-detailed-explaination"
        },
        {
            "discussion_title": "O(n log n) sweep line solution",
            "discussion_vote": "46",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/perfect-rectangle/discuss/87188/O(n-log-n)-sweep-line-solution"
        },
        {
            "discussion_title": "Short Java solution with explanation (updated)",
            "discussion_vote": "16",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/perfect-rectangle/discuss/87207/Short-Java-solution-with-explanation-(updated)"
        },
        {
            "discussion_title": "Easy Understanding O(n) Python Solution",
            "discussion_vote": "15",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/perfect-rectangle/discuss/87186/Easy-Understanding-O(n)-Python-Solution"
        }
    ],
    "392": [
        {
            "discussion_title": "Binary search solution for follow-up with detailed comments",
            "discussion_vote": "99",
            "discussion_views": "18.7K",
            "discussion_link": "https://leetcode.com/problems/is-subsequence/discuss/87302/Binary-search-solution-for-follow-up-with-detailed-comments"
        },
        {
            "discussion_title": "Straight forward Java simple solution",
            "discussion_vote": "77",
            "discussion_views": "24.2K",
            "discussion_link": "https://leetcode.com/problems/is-subsequence/discuss/87254/Straight-forward-Java-simple-solution"
        },
        {
            "discussion_title": "3 lines C",
            "discussion_vote": "66",
            "discussion_views": "14.1K",
            "discussion_link": "https://leetcode.com/problems/is-subsequence/discuss/87272/3-lines-C"
        },
        {
            "discussion_title": "2 lines Python",
            "discussion_vote": "44",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/is-subsequence/discuss/87258/2-lines-Python"
        },
        {
            "discussion_title": "Java code for the follow-up question",
            "discussion_vote": "42",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/is-subsequence/discuss/87268/Java-code-for-the-follow-up-question"
        }
    ],
    "393": [
        {
            "discussion_title": "Concise C++ implementation",
            "discussion_vote": "117",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/utf-8-validation/discuss/87462/Concise-C%2B%2B-implementation"
        },
        {
            "discussion_title": "Feeling like an English reading comprehension problem",
            "discussion_vote": "70",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/utf-8-validation/discuss/87447/Feeling-like-an-English-reading-comprehension-problem"
        },
        {
            "discussion_title": "Bit Manipulation, Java, 6ms",
            "discussion_vote": "32",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/utf-8-validation/discuss/87464/Bit-Manipulation-Java-6ms"
        },
        {
            "discussion_title": "one pass simple solution",
            "discussion_vote": "12",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/utf-8-validation/discuss/87470/one-pass-simple-solution"
        },
        {
            "discussion_title": "Short'n'Clean 12-lines Python solution",
            "discussion_vote": "10",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/utf-8-validation/discuss/87494/Short'n'Clean-12-lines-Python-solution"
        }
    ],
    "394": [
        {
            "discussion_title": "0ms simple C++ solution",
            "discussion_vote": "110",
            "discussion_views": "24.8K",
            "discussion_link": "https://leetcode.com/problems/decode-string/discuss/87543/0ms-simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "Simple Java Solution using Stack",
            "discussion_vote": "99",
            "discussion_views": "39.9K",
            "discussion_link": "https://leetcode.com/problems/decode-string/discuss/87534/Simple-Java-Solution-using-Stack"
        },
        {
            "discussion_title": "Share my Python Stack Simple Solution (Easy to understand)",
            "discussion_vote": "83",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/decode-string/discuss/87563/Share-my-Python-Stack-Simple-Solution-(Easy-to-understand)"
        },
        {
            "discussion_title": "Java short and easy-understanding solution using stack",
            "discussion_vote": "54",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/decode-string/discuss/87556/Java-short-and-easy-understanding-solution-using-stack"
        },
        {
            "discussion_title": "Python solution using stack",
            "discussion_vote": "53",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/decode-string/discuss/87662/Python-solution-using-stack"
        }
    ],
    "395": [
        {
            "discussion_title": "Java Strict O(N) Two-Pointer Solution",
            "discussion_vote": "103",
            "discussion_views": "25.6K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/discuss/87739/Java-Strict-O(N)-Two-Pointer-Solution"
        },
        {
            "discussion_title": "4 lines Python",
            "discussion_vote": "95",
            "discussion_views": "25.4K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/discuss/87768/4-lines-Python"
        },
        {
            "discussion_title": "Java divide and conquer(recursion) solution",
            "discussion_vote": "77",
            "discussion_views": "26.9K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/discuss/87741/Java-divide-and-conquer(recursion)-solution"
        },
        {
            "discussion_title": "C++ recursive solution",
            "discussion_vote": "58",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/discuss/87736/C%2B%2B-recursive-solution"
        },
        {
            "discussion_title": "Java 20 lines very easy solution 7ms with explanation",
            "discussion_vote": "46",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/discuss/87738/Java-20-lines-very-easy-solution-7ms-with-explanation"
        }
    ],
    "396": [
        {
            "discussion_title": "Java O(n) solution with explanation",
            "discussion_vote": "156",
            "discussion_views": "19.4K",
            "discussion_link": "https://leetcode.com/problems/rotate-function/discuss/87853/Java-O(n)-solution-with-explanation"
        },
        {
            "discussion_title": "Java Solution O(n) with non mathametical explaination",
            "discussion_vote": "97",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/rotate-function/discuss/87842/Java-Solution-O(n)-with-non-mathametical-explaination"
        },
        {
            "discussion_title": "Java solution",
            "discussion_vote": "16",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/rotate-function/discuss/87916/Java-solution"
        },
        {
            "discussion_title": "C++ solution",
            "discussion_vote": "11",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/rotate-function/discuss/87917/C%2B%2B-solution"
        },
        {
            "discussion_title": "My O(n) Simple C++ Solution",
            "discussion_vote": "9",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/rotate-function/discuss/87861/My-O(n)-Simple-C%2B%2B-Solution"
        }
    ],
    "397": [
        {
            "discussion_title": "A couple of Java solutions with explanations",
            "discussion_vote": "146",
            "discussion_views": "24.9K",
            "discussion_link": "https://leetcode.com/problems/integer-replacement/discuss/87920/A-couple-of-Java-solutions-with-explanations"
        },
        {
            "discussion_title": "Java 12 line 4(5)ms iterative solution with explanations. No other data structures.",
            "discussion_vote": "55",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/integer-replacement/discuss/87928/Java-12-line-4(5)ms-iterative-solution-with-explanations.-No-other-data-structures."
        },
        {
            "discussion_title": "Python O(log n) time, O(1) space with explanation and proof",
            "discussion_vote": "25",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/integer-replacement/discuss/87948/Python-O(log-n)-time-O(1)-space-with-explanation-and-proof"
        },
        {
            "discussion_title": "C++ 0ms 11 lines \"DP\" solution",
            "discussion_vote": "14",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/integer-replacement/discuss/88016/C%2B%2B-0ms-11-lines-%22DP%22-solution"
        },
        {
            "discussion_title": "0 ms C++ recursion solution with Explanation",
            "discussion_vote": "9",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/integer-replacement/discuss/87942/0-ms-C%2B%2B-recursion-solution-with-Explanation"
        }
    ],
    "398": [
        {
            "discussion_title": "Simple Reservoir Sampling solution",
            "discussion_vote": "122",
            "discussion_views": "41.0K",
            "discussion_link": "https://leetcode.com/problems/random-pick-index/discuss/88072/Simple-Reservoir-Sampling-solution"
        },
        {
            "discussion_title": "What on earth is meant by too much memory?",
            "discussion_vote": "31",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/random-pick-index/discuss/88080/What-on-earth-is-meant-by-too-much-memory"
        },
        {
            "discussion_title": "C++_Time: O(n), Space: O(n)_116ms_96.41%_with clear explanation by probability",
            "discussion_vote": "27",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/random-pick-index/discuss/88071/C%2B%2B_Time%3A-O(n)-Space%3A-O(n)_116ms_96.41_with-clear-explanation-by-probability"
        },
        {
            "discussion_title": "Clean, understandable, O(1) momery, O(n) time, JAVA solution",
            "discussion_vote": "18",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/random-pick-index/discuss/88084/Clean-understandable-O(1)-momery-O(n)-time-JAVA-solution"
        },
        {
            "discussion_title": "Simple Python solution",
            "discussion_vote": "13",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/random-pick-index/discuss/88069/Simple-Python-solution"
        }
    ],
    "399": [
        {
            "discussion_title": "Java AC Solution using graph",
            "discussion_vote": "124",
            "discussion_views": "37.8K",
            "discussion_link": "https://leetcode.com/problems/evaluate-division/discuss/88169/Java-AC-Solution-using-graph"
        },
        {
            "discussion_title": "9 lines \"Floyd\\u2013Warshall\" in Python",
            "discussion_vote": "109",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/evaluate-division/discuss/88175/9-lines-%22Floydu2013Warshall%22-in-Python"
        },
        {
            "discussion_title": "0ms C++ Union-Find Solution [EASY to UNDERSTAND]",
            "discussion_vote": "49",
            "discussion_views": "17.8K",
            "discussion_link": "https://leetcode.com/problems/evaluate-division/discuss/88170/0ms-C%2B%2B-Union-Find-Solution-EASY-to-UNDERSTAND"
        },
        {
            "discussion_title": "Python fast BFS solution with detailed explantion",
            "discussion_vote": "29",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/evaluate-division/discuss/88275/Python-fast-BFS-solution-with-detailed-explantion"
        },
        {
            "discussion_title": "Esay understand Java solution, 3ms",
            "discussion_vote": "29",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/evaluate-division/discuss/88287/Esay-understand-Java-solution-3ms"
        }
    ],
    "400": [
        {
            "discussion_title": "Java solution",
            "discussion_vote": "188",
            "discussion_views": "34.7K",
            "discussion_link": "https://leetcode.com/problems/nth-digit/discuss/88363/Java-solution"
        },
        {
            "discussion_title": "0ms C++ Solution with Detail-Explanation",
            "discussion_vote": "79",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/nth-digit/discuss/88369/0ms-C%2B%2B-Solution-with-Detail-Explanation"
        },
        {
            "discussion_title": "Short Python+Java",
            "discussion_vote": "32",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/nth-digit/discuss/88375/Short-Python%2BJava"
        },
        {
            "discussion_title": "4-liner in Python, and complexity analysis",
            "discussion_vote": "21",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/nth-digit/discuss/88417/4-liner-in-Python-and-complexity-analysis"
        },
        {
            "discussion_title": "Sharing my thinking process",
            "discussion_vote": "16",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/nth-digit/discuss/88372/Sharing-my-thinking-process"
        }
    ],
    "401": [
        {
            "discussion_title": "Simple Python+Java",
            "discussion_vote": "326",
            "discussion_views": "38.1K",
            "discussion_link": "https://leetcode.com/problems/binary-watch/discuss/88458/Simple-Python%2BJava"
        },
        {
            "discussion_title": "Straight-forward 6-line c++ solution, no need to explain",
            "discussion_vote": "135",
            "discussion_views": "15.6K",
            "discussion_link": "https://leetcode.com/problems/binary-watch/discuss/88465/Straight-forward-6-line-c%2B%2B-solution-no-need-to-explain"
        },
        {
            "discussion_title": "3ms Java Solution Using Backtracking and Idea of \"Permutation and Combination\"",
            "discussion_vote": "108",
            "discussion_views": "24.8K",
            "discussion_link": "https://leetcode.com/problems/binary-watch/discuss/88456/3ms-Java-Solution-Using-Backtracking-and-Idea-of-%22Permutation-and-Combination%22"
        },
        {
            "discussion_title": "Just for fun!!!!!!!   java 1ms, beats 100%",
            "discussion_vote": "74",
            "discussion_views": "19.5K",
            "discussion_link": "https://leetcode.com/problems/binary-watch/discuss/88471/Just-for-fun!!!!!!!-java-1ms-beats-100"
        },
        {
            "discussion_title": "straightforward java answer",
            "discussion_vote": "45",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/binary-watch/discuss/88536/straightforward-java-answer"
        }
    ],
    "402": [
        {
            "discussion_title": "Straightforward Java Solution Using Stack",
            "discussion_vote": "103",
            "discussion_views": "18.9K",
            "discussion_link": "https://leetcode.com/problems/remove-k-digits/discuss/88708/Straightforward-Java-Solution-Using-Stack"
        },
        {
            "discussion_title": "A greedy method using stack, O(n) time and O(n) space",
            "discussion_vote": "96",
            "discussion_views": "26.9K",
            "discussion_link": "https://leetcode.com/problems/remove-k-digits/discuss/88660/A-greedy-method-using-stack-O(n)-time-and-O(n)-space"
        },
        {
            "discussion_title": "Two algorithms with detailed explaination",
            "discussion_vote": "54",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/remove-k-digits/discuss/88678/Two-algorithms-with-detailed-explaination"
        },
        {
            "discussion_title": "Short Python, one O(n) and one RegEx",
            "discussion_vote": "25",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/remove-k-digits/discuss/88668/Short-Python-one-O(n)-and-one-RegEx"
        },
        {
            "discussion_title": "My Easy Understandable C++ Solution",
            "discussion_vote": "15",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/remove-k-digits/discuss/88680/My-Easy-Understandable-C%2B%2B-Solution"
        }
    ],
    "403": [
        {
            "discussion_title": "Very easy to understand JAVA solution with explanations",
            "discussion_vote": "90",
            "discussion_views": "22.2K",
            "discussion_link": "https://leetcode.com/problems/frog-jump/discuss/88824/Very-easy-to-understand-JAVA-solution-with-explanations"
        },
        {
            "discussion_title": "Straight-forward 9ms 7-line c++ solution with explanation",
            "discussion_vote": "34",
            "discussion_views": "15.2K",
            "discussion_link": "https://leetcode.com/problems/frog-jump/discuss/88805/Straight-forward-9ms-7-line-c%2B%2B-solution-with-explanation"
        },
        {
            "discussion_title": "JAVA DFS 17ms beat 99.28% so far",
            "discussion_vote": "22",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/frog-jump/discuss/88804/JAVA-DFS-17ms-beat-99.28-so-far"
        },
        {
            "discussion_title": "Python DFS easy understanding using memo",
            "discussion_vote": "14",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/frog-jump/discuss/88873/Python-DFS-easy-understanding-using-memo"
        },
        {
            "discussion_title": "[Python] Documented solution that is easy to understand",
            "discussion_vote": "8",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/frog-jump/discuss/88800/Python-Documented-solution-that-is-easy-to-understand"
        }
    ],
    "404": [
        {
            "discussion_title": "Java iterative and recursive solutions",
            "discussion_vote": "83",
            "discussion_views": "32.9K",
            "discussion_link": "https://leetcode.com/problems/sum-of-left-leaves/discuss/88950/Java-iterative-and-recursive-solutions"
        },
        {
            "discussion_title": "Java Solution using BFS",
            "discussion_vote": "36",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/sum-of-left-leaves/discuss/89060/Java-Solution-using-BFS"
        },
        {
            "discussion_title": "3-line c++ solution",
            "discussion_vote": "34",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/sum-of-left-leaves/discuss/88976/3-line-c%2B%2B-solution"
        },
        {
            "discussion_title": "3 line recursive c++ solution, no need to explain",
            "discussion_vote": "26",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/sum-of-left-leaves/discuss/88951/3-line-recursive-c%2B%2B-solution-no-need-to-explain"
        },
        {
            "discussion_title": "4 Lines Python Recursive AC Solution",
            "discussion_vote": "17",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/sum-of-left-leaves/discuss/88977/4-Lines-Python-Recursive-AC-Solution"
        }
    ],
    "405": [
        {
            "discussion_title": "Simple Java solution with comment",
            "discussion_vote": "102",
            "discussion_views": "21.6K",
            "discussion_link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/discuss/89253/Simple-Java-solution-with-comment"
        },
        {
            "discussion_title": "Concise C++ Solution",
            "discussion_vote": "32",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/discuss/89238/Concise-C%2B%2B-Solution"
        },
        {
            "discussion_title": "easy 10-line python solution with inline explanation",
            "discussion_vote": "24",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/discuss/89261/easy-10-line-python-solution-with-inline-explanation"
        },
        {
            "discussion_title": "1-liner in Python",
            "discussion_vote": "15",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/discuss/89326/1-liner-in-Python"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/discuss/89250/Python-solution"
        }
    ],
    "406": [
        {
            "discussion_title": "Easy concept with Python/C++/Java Solution",
            "discussion_vote": "274",
            "discussion_views": "57.8K",
            "discussion_link": "https://leetcode.com/problems/queue-reconstruction-by-height/discuss/89345/Easy-concept-with-PythonC%2B%2BJava-Solution"
        },
        {
            "discussion_title": "Explanation of the neat Sort+Insert solution",
            "discussion_vote": "147",
            "discussion_views": "25.8K",
            "discussion_link": "https://leetcode.com/problems/queue-reconstruction-by-height/discuss/89359/Explanation-of-the-neat-Sort%2BInsert-solution"
        },
        {
            "discussion_title": "6 lines  Concise C++",
            "discussion_vote": "75",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/queue-reconstruction-by-height/discuss/89348/6-lines-Concise-C%2B%2B"
        },
        {
            "discussion_title": "I don't understand the question. Reconstruct the queue to what?",
            "discussion_vote": "65",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/queue-reconstruction-by-height/discuss/89406/I-don't-understand-the-question.-Reconstruct-the-queue-to-what"
        },
        {
            "discussion_title": "Java solution using Arrays.sort() and \"insert sorting\" idea",
            "discussion_vote": "46",
            "discussion_views": "16.7K",
            "discussion_link": "https://leetcode.com/problems/queue-reconstruction-by-height/discuss/89350/Java-solution-using-Arrays.sort()-and-%22insert-sorting%22-idea"
        }
    ],
    "407": [
        {
            "discussion_title": "Java solution using PriorityQueue",
            "discussion_vote": "142",
            "discussion_views": "29.7K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water-ii/discuss/89461/Java-solution-using-PriorityQueue"
        },
        {
            "discussion_title": "Visualization - No Code",
            "discussion_vote": "89",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water-ii/discuss/89472/Visualization-No-Code"
        },
        {
            "discussion_title": "python solution with heap",
            "discussion_vote": "31",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water-ii/discuss/89466/python-solution-with-heap"
        },
        {
            "discussion_title": "How to get the solution to 2-D \"Trapping Rain Water\" problem from 1-D case",
            "discussion_vote": "30",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water-ii/discuss/89495/How-to-get-the-solution-to-2-D-%22Trapping-Rain-Water%22-problem-from-1-D-case"
        },
        {
            "discussion_title": "Alternative approach using Dijkstra in O(rc max(log r, log c)) time",
            "discussion_vote": "23",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/trapping-rain-water-ii/discuss/89460/Alternative-approach-using-Dijkstra-in-O(rc-max(log-r-log-c))-time"
        }
    ],
    "409": [
        {
            "discussion_title": "Simple HashSet solution Java",
            "discussion_vote": "115",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/longest-palindrome/discuss/89604/Simple-HashSet-solution-Java"
        },
        {
            "discussion_title": "What are the odds? (Python & C++)",
            "discussion_vote": "57",
            "discussion_views": "13.4K",
            "discussion_link": "https://leetcode.com/problems/longest-palindrome/discuss/89587/What-are-the-odds-(Python-and-C%2B%2B)"
        },
        {
            "discussion_title": "JAVA Solution. Simple and Clear, Using int[26]",
            "discussion_vote": "22",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/longest-palindrome/discuss/89606/JAVA-Solution.-Simple-and-Clear-Using-int26"
        },
        {
            "discussion_title": "Simple Java Solution in One Pass",
            "discussion_vote": "16",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/longest-palindrome/discuss/89610/Simple-Java-Solution-in-One-Pass"
        },
        {
            "discussion_title": "Easy to understand accepted solution with explanation",
            "discussion_vote": "11",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/longest-palindrome/discuss/89627/Easy-to-understand-accepted-solution-with-explanation"
        }
    ],
    "410": [
        {
            "discussion_title": "Clear Explanation: 8ms Binary Search Java",
            "discussion_vote": "180",
            "discussion_views": "30.9K",
            "discussion_link": "https://leetcode.com/problems/split-array-largest-sum/discuss/89817/Clear-Explanation%3A-8ms-Binary-Search-Java"
        },
        {
            "discussion_title": "[C++ / Fast / Very clear explanation / Clean Code] Solution with Greedy Algorithm and Binary Search",
            "discussion_vote": "128",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/split-array-largest-sum/discuss/89819/C%2B%2B-Fast-Very-clear-explanation-Clean-Code-Solution-with-Greedy-Algorithm-and-Binary-Search"
        },
        {
            "discussion_title": "DP Java",
            "discussion_vote": "41",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/split-array-largest-sum/discuss/89816/DP-Java"
        },
        {
            "discussion_title": "Java easy binary search solution 8ms",
            "discussion_vote": "32",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/split-array-largest-sum/discuss/89835/Java-easy-binary-search-solution-8ms"
        },
        {
            "discussion_title": "Python solution dp and binary search",
            "discussion_vote": "12",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/split-array-largest-sum/discuss/89821/Python-solution-dp-and-binary-search"
        }
    ],
    "412": [
        {
            "discussion_title": "Java 4ms solution , Not using \"%\" operation",
            "discussion_vote": "126",
            "discussion_views": "31.3K",
            "discussion_link": "https://leetcode.com/problems/fizz-buzz/discuss/89931/Java-4ms-solution-Not-using-%22%22-operation"
        },
        {
            "discussion_title": "Python Golf",
            "discussion_vote": "56",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/fizz-buzz/discuss/89928/Python-Golf"
        },
        {
            "discussion_title": "Java easy iterative solution",
            "discussion_vote": "27",
            "discussion_views": "15.7K",
            "discussion_link": "https://leetcode.com/problems/fizz-buzz/discuss/89941/Java-easy-iterative-solution"
        },
        {
            "discussion_title": "Java, Fuzz Buzz--Follow up(no if else, and extendable)",
            "discussion_vote": "15",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/fizz-buzz/discuss/89936/Java-Fuzz-Buzz-Follow-up(no-if-else-and-extendable)"
        },
        {
            "discussion_title": "One-line c# solution",
            "discussion_vote": "11",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/fizz-buzz/discuss/90037/One-line-c-solution"
        }
    ],
    "413": [
        {
            "discussion_title": "Simple Java solution 9 lines, 2ms",
            "discussion_vote": "164",
            "discussion_views": "21.1K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices/discuss/90058/Simple-Java-solution-9-lines-2ms"
        },
        {
            "discussion_title": "3ms C++ Standard DP Solution with Very Detailed Explanation",
            "discussion_vote": "72",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices/discuss/90093/3ms-C%2B%2B-Standard-DP-Solution-with-Very-Detailed-Explanation"
        },
        {
            "discussion_title": "2ms Java O(n) time, O(1) space solution",
            "discussion_vote": "12",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices/discuss/90057/2ms-Java-O(n)-time-O(1)-space-solution"
        },
        {
            "discussion_title": "Python DP solution",
            "discussion_vote": "7",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices/discuss/90112/Python-DP-solution"
        },
        {
            "discussion_title": "java 2ms O(n) solution using DP with detail explanation",
            "discussion_vote": "6",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices/discuss/90067/java-2ms-O(n)-solution-using-DP-with-detail-explanation"
        }
    ],
    "414": [
        {
            "discussion_title": "Java neat and easy understand solution, O(n) time, O(1) space",
            "discussion_vote": "164",
            "discussion_views": "36.0K",
            "discussion_link": "https://leetcode.com/problems/third-maximum-number/discuss/90202/Java-neat-and-easy-understand-solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Short easy C++ using set",
            "discussion_vote": "56",
            "discussion_views": "18.0K",
            "discussion_link": "https://leetcode.com/problems/third-maximum-number/discuss/90209/Short-easy-C%2B%2B-using-set"
        },
        {
            "discussion_title": "Intuitive and Short Python solution",
            "discussion_vote": "50",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/third-maximum-number/discuss/90207/Intuitive-and-Short-Python-solution"
        },
        {
            "discussion_title": "A python amusing solution, which actually beats 98%...",
            "discussion_vote": "33",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/third-maximum-number/discuss/90201/A-python-amusing-solution-which-actually-beats-98..."
        },
        {
            "discussion_title": "Java PriorityQueue O(n) + O(1)",
            "discussion_vote": "30",
            "discussion_views": "15.7K",
            "discussion_link": "https://leetcode.com/problems/third-maximum-number/discuss/90190/Java-PriorityQueue-O(n)-%2B-O(1)"
        }
    ],
    "415": [
        {
            "discussion_title": "Straightforward Java 8 main lines 25ms",
            "discussion_vote": "102",
            "discussion_views": "27.4K",
            "discussion_link": "https://leetcode.com/problems/add-strings/discuss/90436/Straightforward-Java-8-main-lines-25ms"
        },
        {
            "discussion_title": "C++_Accepted_13ms",
            "discussion_vote": "24",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/add-strings/discuss/90453/C%2B%2B_Accepted_13ms"
        },
        {
            "discussion_title": "straightforward python solution",
            "discussion_vote": "19",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/add-strings/discuss/90474/straightforward-python-solution"
        },
        {
            "discussion_title": "Python: 7-line & 52ms (+ 1-liner for fun)",
            "discussion_vote": "11",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/add-strings/discuss/90449/Python%3A-7-line-and-52ms-(%2B-1-liner-for-fun)"
        },
        {
            "discussion_title": "[JAVA] Simple and Clean with Explanations [29 ms]",
            "discussion_vote": "8",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/add-strings/discuss/90491/JAVA-Simple-and-Clean-with-Explanations-29-ms"
        }
    ],
    "416": [
        {
            "discussion_title": "0/1 knapsack detailed explanation",
            "discussion_vote": "259",
            "discussion_views": "46.9K",
            "discussion_link": "https://leetcode.com/problems/partition-equal-subset-sum/discuss/90592/01-knapsack-detailed-explanation"
        },
        {
            "discussion_title": "Java Solution similar to backpack problem - Easy to understand",
            "discussion_vote": "56",
            "discussion_views": "25.7K",
            "discussion_link": "https://leetcode.com/problems/partition-equal-subset-sum/discuss/90627/Java-Solution-similar-to-backpack-problem-Easy-to-understand"
        },
        {
            "discussion_title": "Simple C++ 4-line solution using a bitset",
            "discussion_vote": "49",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/partition-equal-subset-sum/discuss/90590/Simple-C%2B%2B-4-line-solution-using-a-bitset"
        },
        {
            "discussion_title": "Concise C++ Solution summary with DFS, DP, BIT",
            "discussion_vote": "24",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/partition-equal-subset-sum/discuss/90588/Concise-C%2B%2B-Solution-summary-with-DFS-DP-BIT"
        },
        {
            "discussion_title": "Java Solution similar to 'Subset Sum Problem'",
            "discussion_vote": "16",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/partition-equal-subset-sum/discuss/90639/Java-Solution-similar-to-'Subset-Sum-Problem'"
        }
    ],
    "417": [
        {
            "discussion_title": "Java BFS & DFS from Ocean",
            "discussion_vote": "152",
            "discussion_views": "29.0K",
            "discussion_link": "https://leetcode.com/problems/pacific-atlantic-water-flow/discuss/90733/Java-BFS-and-DFS-from-Ocean"
        },
        {
            "discussion_title": "Python DFS bests 85%. Tips for all DFS in matrix question.",
            "discussion_vote": "61",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/pacific-atlantic-water-flow/discuss/90739/Python-DFS-bests-85.-Tips-for-all-DFS-in-matrix-question."
        },
        {
            "discussion_title": "Not understanding the problem. Could someone please explain?",
            "discussion_vote": "46",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/pacific-atlantic-water-flow/discuss/90758/Not-understanding-the-problem.-Could-someone-please-explain"
        },
        {
            "discussion_title": "Very Concise C++ solution using DFS and bit mask",
            "discussion_vote": "33",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/pacific-atlantic-water-flow/discuss/90747/Very-Concise-C%2B%2B-solution-using-DFS-and-bit-mask"
        },
        {
            "discussion_title": "Simple commented java solution with thinking progress O(n)",
            "discussion_vote": "12",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/pacific-atlantic-water-flow/discuss/90812/Simple-commented-java-solution-with-thinking-progress-O(n)"
        }
    ],
    "419": [
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "185",
            "discussion_views": "29.6K",
            "discussion_link": "https://leetcode.com/problems/battleships-in-a-board/discuss/90902/Simple-Java-Solution"
        },
        {
            "discussion_title": "Share my 7-line code, 1-line core code, 3ms, super easy",
            "discussion_vote": "53",
            "discussion_views": "11.4K",
            "discussion_link": "https://leetcode.com/problems/battleships-in-a-board/discuss/90913/Share-my-7-line-code-1-line-core-code-3ms-super-easy"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "20",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/battleships-in-a-board/discuss/90912/Python-solution"
        },
        {
            "discussion_title": "4ms Java Optimized code",
            "discussion_vote": "15",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/battleships-in-a-board/discuss/90940/4ms-Java-Optimized-code"
        },
        {
            "discussion_title": "Confused with test cases",
            "discussion_vote": "13",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/battleships-in-a-board/discuss/90901/Confused-with-test-cases"
        }
    ],
    "420": [
        {
            "discussion_title": "C++ 0ms O(n) 35 lines solution with detailed explanation",
            "discussion_vote": "29",
            "discussion_views": "9.3K",
            "discussion_link": "https://leetcode.com/problems/strong-password-checker/discuss/91007/C%2B%2B-0ms-O(n)-35-lines-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "O(n) java solution by analyzing changes allowed to fix each problem",
            "discussion_vote": "28",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/strong-password-checker/discuss/91003/O(n)-java-solution-by-analyzing-changes-allowed-to-fix-each-problem"
        },
        {
            "discussion_title": "Simple Python solution",
            "discussion_vote": "22",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/strong-password-checker/discuss/91008/Simple-Python-solution"
        },
        {
            "discussion_title": "JAVA Easy Solution with explanation",
            "discussion_vote": "16",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/strong-password-checker/discuss/91002/JAVA-Easy-Solution-with-explanation"
        },
        {
            "discussion_title": "Java O(n) Greedy solution with super clear explanation",
            "discussion_vote": "5",
            "discussion_views": "694",
            "discussion_link": "https://leetcode.com/problems/strong-password-checker/discuss/91004/Java-O(n)-Greedy-solution-with-super-clear-explanation"
        }
    ],
    "421": [
        {
            "discussion_title": "Java O(n) solution using bit manipulation and HashMap",
            "discussion_vote": "224",
            "discussion_views": "60.7K",
            "discussion_link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/discuss/91049/Java-O(n)-solution-using-bit-manipulation-and-HashMap"
        },
        {
            "discussion_title": "Java O(n) solution using Trie",
            "discussion_vote": "77",
            "discussion_views": "23.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/discuss/91059/Java-O(n)-solution-using-Trie"
        },
        {
            "discussion_title": "Python 6 lines, bit by bit",
            "discussion_vote": "74",
            "discussion_views": "20.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/discuss/91050/Python-6-lines-bit-by-bit"
        },
        {
            "discussion_title": "\u4f7f\u7528\u524d\u7f00\u6811(\u4e8c\u53c9\u6811\u8868\u793a) \u6253\u8d25 92%",
            "discussion_vote": "60",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/discuss/130427/()-92"
        },
        {
            "discussion_title": "C++, O(n) solution, explanation added",
            "discussion_vote": "26",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/discuss/91103/C%2B%2B-O(n)-solution-explanation-added"
        }
    ],
    "423": [
        {
            "discussion_title": "one pass O(n) JAVA Solution, Simple and Clear",
            "discussion_vote": "125",
            "discussion_views": "12.9K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-original-digits-from-english/discuss/91207/one-pass-O(n)-JAVA-Solution-Simple-and-Clear"
        },
        {
            "discussion_title": "Fun fact",
            "discussion_vote": "26",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-original-digits-from-english/discuss/91210/Fun-fact"
        },
        {
            "discussion_title": "Share my simple and easy O(N) solution",
            "discussion_vote": "20",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-original-digits-from-english/discuss/91203/Share-my-simple-and-easy-O(N)-solution"
        },
        {
            "discussion_title": "Straightforward C++ Accepted Solution",
            "discussion_vote": "12",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-original-digits-from-english/discuss/91195/Straightforward-C%2B%2B-Accepted-Solution"
        },
        {
            "discussion_title": "Short Matrix Solution",
            "discussion_vote": "7",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/reconstruct-original-digits-from-english/discuss/91192/Short-Matrix-Solution"
        }
    ],
    "424": [
        {
            "discussion_title": "Java 12 lines O(n) sliding window solution with explanation",
            "discussion_vote": "124",
            "discussion_views": "23.9K",
            "discussion_link": "https://leetcode.com/problems/longest-repeating-character-replacement/discuss/91271/Java-12-lines-O(n)-sliding-window-solution-with-explanation"
        },
        {
            "discussion_title": "Sliding window, similar to finding longest substring with k distinct characters",
            "discussion_vote": "65",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/longest-repeating-character-replacement/discuss/91285/Sliding-window-similar-to-finding-longest-substring-with-k-distinct-characters"
        },
        {
            "discussion_title": "7 lines C++",
            "discussion_vote": "18",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/longest-repeating-character-replacement/discuss/91278/7-lines-C%2B%2B"
        },
        {
            "discussion_title": "Consise Python sliding window",
            "discussion_vote": "14",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/longest-repeating-character-replacement/discuss/91272/Consise-Python-sliding-window"
        },
        {
            "discussion_title": "Java Sliding Window Easy to Understand",
            "discussion_vote": "12",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/longest-repeating-character-replacement/discuss/91286/Java-Sliding-Window-Easy-to-Understand"
        }
    ],
    "427": [
        {
            "discussion_title": "Please correct your Example illustration !!!",
            "discussion_vote": "9",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/construct-quad-tree/discuss/148809/Please-correct-your-Example-illustration-!!!"
        },
        {
            "discussion_title": "Recursive Java Solution",
            "discussion_vote": "8",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/construct-quad-tree/discuss/151684/Recursive-Java-Solution"
        },
        {
            "discussion_title": "Python short & readable DFS solution",
            "discussion_vote": "6",
            "discussion_views": "624",
            "discussion_link": "https://leetcode.com/problems/construct-quad-tree/discuss/148806/Python-short-and-readable-DFS-solution"
        },
        {
            "discussion_title": "Java recursive solution",
            "discussion_vote": "4",
            "discussion_views": "358",
            "discussion_link": "https://leetcode.com/problems/construct-quad-tree/discuss/154565/Java-recursive-solution"
        },
        {
            "discussion_title": "non-leaf nodes seems have to be true value",
            "discussion_vote": "4",
            "discussion_views": "187",
            "discussion_link": "https://leetcode.com/problems/construct-quad-tree/discuss/150426/non-leaf-nodes-seems-have-to-be-true-value"
        }
    ],
    "429": [
        {
            "discussion_title": "Python 5 lines BFS solution ",
            "discussion_vote": "18",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/discuss/148877/Python-5-lines-BFS-solution"
        },
        {
            "discussion_title": "Basic C++ solution using queue. Super easy for beginners.",
            "discussion_vote": "9",
            "discussion_views": "789",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/discuss/159086/Basic-C%2B%2B-solution-using-queue.-Super-easy-for-beginners."
        },
        {
            "discussion_title": "Java Solution",
            "discussion_vote": "9",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/discuss/134911/Java-Solution"
        },
        {
            "discussion_title": "Python iterative solution beat 96%",
            "discussion_vote": "4",
            "discussion_views": "409",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/discuss/162439/Python-iterative-solution-beat-96"
        },
        {
            "discussion_title": "Beat 100% of Java -  DFS (recursive)",
            "discussion_vote": "4",
            "discussion_views": "612",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/discuss/155927/Beat-100-of-Java-DFS-(recursive)"
        }
    ],
    "430": [
        {
            "discussion_title": "Easy Understanding Java beat 95.7% with Explanation",
            "discussion_vote": "30",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/discuss/150321/Easy-Understanding-Java-beat-95.7-with-Explanation"
        },
        {
            "discussion_title": "Java Recursive Solution",
            "discussion_vote": "13",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/discuss/157606/Java-Recursive-Solution"
        },
        {
            "discussion_title": "Python easy solution using stack ",
            "discussion_vote": "10",
            "discussion_views": "764",
            "discussion_link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/discuss/154908/Python-easy-solution-using-stack"
        },
        {
            "discussion_title": "c++, about 10 lines solution",
            "discussion_vote": "10",
            "discussion_views": "725",
            "discussion_link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/discuss/152066/c%2B%2B-about-10-lines-solution"
        },
        {
            "discussion_title": "Python solution with explanation",
            "discussion_vote": "6",
            "discussion_views": "493",
            "discussion_link": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/discuss/152725/Python-solution-with-explanation"
        }
    ],
    "432": [
        {
            "discussion_title": "Java AC all strict O(1) not average O(1), easy to read",
            "discussion_vote": "57",
            "discussion_views": "14.1K",
            "discussion_link": "https://leetcode.com/problems/all-oone-data-structure/discuss/91416/Java-AC-all-strict-O(1)-not-average-O(1)-easy-to-read"
        },
        {
            "discussion_title": "All in O(1), with detailed explantation",
            "discussion_vote": "42",
            "discussion_views": "18.2K",
            "discussion_link": "https://leetcode.com/problems/all-oone-data-structure/discuss/91400/All-in-O(1)-with-detailed-explantation"
        },
        {
            "discussion_title": "C++ solution with comments",
            "discussion_vote": "39",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/all-oone-data-structure/discuss/91398/C%2B%2B-solution-with-comments"
        },
        {
            "discussion_title": "An accepted JAVA solution, detailed explanation.(HashMap + double linked list)",
            "discussion_vote": "19",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/all-oone-data-structure/discuss/91383/An-accepted-JAVA-solution-detailed-explanation.(HashMap-%2B-double-linked-list)"
        },
        {
            "discussion_title": "Python solution with detailed comments",
            "discussion_vote": "14",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/all-oone-data-structure/discuss/91428/Python-solution-with-detailed-comments"
        }
    ],
    "433": [
        {
            "discussion_title": "Java Solution using BFS",
            "discussion_vote": "24",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-genetic-mutation/discuss/91484/Java-Solution-using-BFS"
        },
        {
            "discussion_title": "C++ two end BFS solution, exactly same as 127.Word Ladder",
            "discussion_vote": "6",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/minimum-genetic-mutation/discuss/91604/C%2B%2B-two-end-BFS-solution-exactly-same-as-127.Word-Ladder"
        },
        {
            "discussion_title": "Python Solution using BFS",
            "discussion_vote": "4",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-genetic-mutation/discuss/91489/Python-Solution-using-BFS"
        },
        {
            "discussion_title": "Clear Java solution based on BFS (similar to Word Ladder)",
            "discussion_vote": "4",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/minimum-genetic-mutation/discuss/91495/Clear-Java-solution-based-on-BFS-(similar-to-Word-Ladder)"
        },
        {
            "discussion_title": "C++ BFS (0ms)",
            "discussion_vote": "4",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-genetic-mutation/discuss/91581/C%2B%2B-BFS-(0ms)"
        }
    ],
    "434": [
        {
            "discussion_title": "Clean java solution O(n)",
            "discussion_vote": "56",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/number-of-segments-in-a-string/discuss/91607/Clean-java-solution-O(n)"
        },
        {
            "discussion_title": "one-liners",
            "discussion_vote": "18",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/number-of-segments-in-a-string/discuss/91651/one-liners"
        },
        {
            "discussion_title": "O(n) sentinel value concise solution, C++",
            "discussion_vote": "18",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/number-of-segments-in-a-string/discuss/91638/O(n)-sentinel-value-concise-solution-C%2B%2B"
        },
        {
            "discussion_title": "2-line C++ solution simply using stringstream >> operator",
            "discussion_vote": "8",
            "discussion_views": "485",
            "discussion_link": "https://leetcode.com/problems/number-of-segments-in-a-string/discuss/91688/2-line-C%2B%2B-solution-simply-using-stringstream-greatergreater-operator"
        },
        {
            "discussion_title": "AC Solution Java with trim() and split()",
            "discussion_vote": "5",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-segments-in-a-string/discuss/91616/AC-Solution-Java-with-trim()-and-split()"
        }
    ],
    "435": [
        {
            "discussion_title": "Java: Least is Most",
            "discussion_vote": "93",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/non-overlapping-intervals/discuss/91713/Java%3A-Least-is-Most"
        },
        {
            "discussion_title": "Short Ruby and Python",
            "discussion_vote": "26",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/non-overlapping-intervals/discuss/91721/Short-Ruby-and-Python"
        },
        {
            "discussion_title": "Concise C++ Solution",
            "discussion_vote": "15",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/non-overlapping-intervals/discuss/91700/Concise-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Java Solution with clear explain",
            "discussion_vote": "12",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/non-overlapping-intervals/discuss/91771/Java-Solution-with-clear-explain"
        },
        {
            "discussion_title": "Python greedy solution with explanation",
            "discussion_vote": "9",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/non-overlapping-intervals/discuss/91768/Python-greedy-solution-with-explanation"
        }
    ],
    "436": [
        {
            "discussion_title": "Java clear O(n logn) solution based on TreeMap",
            "discussion_vote": "47",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/find-right-interval/discuss/91789/Java-clear-O(n-logn)-solution-based-on-TreeMap"
        },
        {
            "discussion_title": "C++ map solution",
            "discussion_vote": "30",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/find-right-interval/discuss/91819/C%2B%2B-map-solution"
        },
        {
            "discussion_title": "Python O(nlogn) short solution with explanation",
            "discussion_vote": "21",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/find-right-interval/discuss/91806/Python-O(nlogn)-short-solution-with-explanation"
        },
        {
            "discussion_title": "Java Concise Binary Search",
            "discussion_vote": "17",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/find-right-interval/discuss/91793/Java-Concise-Binary-Search"
        },
        {
            "discussion_title": "2 lines Python / Ruby",
            "discussion_vote": "9",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/find-right-interval/discuss/91872/2-lines-Python-Ruby"
        }
    ],
    "437": [
        {
            "discussion_title": "17 ms O(n) java Prefix sum method",
            "discussion_vote": "251",
            "discussion_views": "52.3K",
            "discussion_link": "https://leetcode.com/problems/path-sum-iii/discuss/91878/17-ms-O(n)-java-Prefix-sum-method"
        },
        {
            "discussion_title": "Simple Java DFS",
            "discussion_vote": "240",
            "discussion_views": "35.4K",
            "discussion_link": "https://leetcode.com/problems/path-sum-iii/discuss/91889/Simple-Java-DFS"
        },
        {
            "discussion_title": "Simple AC Java Solution DFS",
            "discussion_vote": "67",
            "discussion_views": "21.9K",
            "discussion_link": "https://leetcode.com/problems/path-sum-iii/discuss/91884/Simple-AC-Java-Solution-DFS"
        },
        {
            "discussion_title": "Python solution with detailed explanation",
            "discussion_vote": "62",
            "discussion_views": "11.6K",
            "discussion_link": "https://leetcode.com/problems/path-sum-iii/discuss/91892/Python-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Python step-by-step walk through. Easy to understand. Two solutions comparison. : )",
            "discussion_vote": "55",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/path-sum-iii/discuss/141424/Python-step-by-step-walk-through.-Easy-to-understand.-Two-solutions-comparison.-%3A-)"
        }
    ],
    "438": [
        {
            "discussion_title": "Sliding Window algorithm template to solve all the Leetcode substring search problem.",
            "discussion_vote": "487",
            "discussion_views": "62.3K",
            "discussion_link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92007/Sliding-Window-algorithm-template-to-solve-all-the-Leetcode-substring-search-problem."
        },
        {
            "discussion_title": "Shortest/Concise JAVA O(n) Sliding Window Solution",
            "discussion_vote": "159",
            "discussion_views": "66.9K",
            "discussion_link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92015/ShortestConcise-JAVA-O(n)-Sliding-Window-Solution"
        },
        {
            "discussion_title": "O(n) Sliding Window JAVA Solution, Extremely Detailed Explanation",
            "discussion_vote": "57",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92059/O(n)-Sliding-Window-JAVA-Solution-Extremely-Detailed-Explanation"
        },
        {
            "discussion_title": "Python Sliding Window Solution using Counter",
            "discussion_vote": "43",
            "discussion_views": "14.2K",
            "discussion_link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92009/Python-Sliding-Window-Solution-using-Counter"
        },
        {
            "discussion_title": "C++ O(n) sliding window concise solution with explanation",
            "discussion_vote": "41",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/find-all-anagrams-in-a-string/discuss/92027/C%2B%2B-O(n)-sliding-window-concise-solution-with-explanation"
        }
    ],
    "440": [
        {
            "discussion_title": "Concise/Easy-to-understand Java 5ms solution with Explaination",
            "discussion_vote": "129",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/discuss/92242/ConciseEasy-to-understand-Java-5ms-solution-with-Explaination"
        },
        {
            "discussion_title": "C++/Python 0ms O((log n)^2)-time O(1)-space super easy solution with detailed explanations",
            "discussion_vote": "35",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/discuss/92254/C%2B%2BPython-0ms-O((log-n)2)-time-O(1)-space-super-easy-solution-with-detailed-explanations"
        },
        {
            "discussion_title": "Java 7ms denary(trie?) tree solution with detailed explanation",
            "discussion_vote": "5",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/discuss/92248/Java-7ms-denary(trie)-tree-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "It's a denary tree",
            "discussion_vote": "4",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/discuss/92270/It's-a-denary-tree"
        },
        {
            "discussion_title": "what's wrong with my answer??? I AM DEFINITELY RIGHT",
            "discussion_vote": "2",
            "discussion_views": "161",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/discuss/155644/what's-wrong-with-my-answer-I-AM-DEFINITELY-RIGHT"
        }
    ],
    "441": [
        {
            "discussion_title": "[JAVA] Clean Code with Explanations and Running Time [2 Solutions]",
            "discussion_vote": "48",
            "discussion_views": "20.3K",
            "discussion_link": "https://leetcode.com/problems/arranging-coins/discuss/92274/JAVA-Clean-Code-with-Explanations-and-Running-Time-2-Solutions"
        },
        {
            "discussion_title": "Java O(1) Solution - Math Problem",
            "discussion_vote": "27",
            "discussion_views": "15.4K",
            "discussion_link": "https://leetcode.com/problems/arranging-coins/discuss/92298/Java-O(1)-Solution-Math-Problem"
        },
        {
            "discussion_title": "C++ 1 line code",
            "discussion_vote": "18",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/arranging-coins/discuss/92365/C%2B%2B-1-line-code"
        },
        {
            "discussion_title": "[JAVA] Cleaner and easier to understand solution.",
            "discussion_vote": "10",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/arranging-coins/discuss/92281/JAVA-Cleaner-and-easier-to-understand-solution."
        },
        {
            "discussion_title": "O(logn) binary search java solution",
            "discussion_vote": "10",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/arranging-coins/discuss/92304/O(logn)-binary-search-java-solution"
        }
    ],
    "442": [
        {
            "discussion_title": "Java Simple Solution",
            "discussion_vote": "197",
            "discussion_views": "44.4K",
            "discussion_link": "https://leetcode.com/problems/find-all-duplicates-in-an-array/discuss/92387/Java-Simple-Solution"
        },
        {
            "discussion_title": "Python O(n) time O(1) space",
            "discussion_vote": "47",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/find-all-duplicates-in-an-array/discuss/92390/Python-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Very simple C++ solution",
            "discussion_vote": "37",
            "discussion_views": "15.2K",
            "discussion_link": "https://leetcode.com/problems/find-all-duplicates-in-an-array/discuss/92392/Very-simple-C%2B%2B-solution"
        },
        {
            "discussion_title": "C++ beats 98%",
            "discussion_vote": "26",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/find-all-duplicates-in-an-array/discuss/92395/C%2B%2B-beats-98"
        },
        {
            "discussion_title": "Java solution without destroying the input array. O(n) time. O(1) space.",
            "discussion_vote": "17",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/find-all-duplicates-in-an-array/discuss/92448/Java-solution-without-destroying-the-input-array.-O(n)-time.-O(1)-space."
        }
    ],
    "443": [
        {
            "discussion_title": "Simple Easy to Understand Java solution",
            "discussion_vote": "51",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/string-compression/discuss/92559/Simple-Easy-to-Understand-Java-solution"
        },
        {
            "discussion_title": "Python Two Pointers - O(n) time O(1) space",
            "discussion_vote": "13",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/string-compression/discuss/92568/Python-Two-Pointers-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Java O(n), two pointers and a counter",
            "discussion_vote": "11",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/string-compression/discuss/92530/Java-O(n)-two-pointers-and-a-counter"
        },
        {
            "discussion_title": "Python 5-liner, O(N) time, no pointers!",
            "discussion_vote": "11",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/string-compression/discuss/92553/Python-5-liner-O(N)-time-no-pointers!"
        },
        {
            "discussion_title": "Python solution with detailed explanation",
            "discussion_vote": "8",
            "discussion_views": "879",
            "discussion_link": "https://leetcode.com/problems/string-compression/discuss/122241/Python-solution-with-detailed-explanation"
        }
    ],
    "445": [
        {
            "discussion_title": "Easy O(n) Java Solution using Stack",
            "discussion_vote": "185",
            "discussion_views": "44.0K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers-ii/discuss/92623/Easy-O(n)-Java-Solution-using-Stack"
        },
        {
            "discussion_title": "C++ O(1) extra space except for output. Reverse output instead. Is this cheating?",
            "discussion_vote": "48",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers-ii/discuss/92624/C%2B%2B-O(1)-extra-space-except-for-output.-Reverse-output-instead.-Is-this-cheating"
        },
        {
            "discussion_title": "Java O(n) recursive solution by counting the difference of length",
            "discussion_vote": "32",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers-ii/discuss/92643/Java-O(n)-recursive-solution-by-counting-the-difference-of-length"
        },
        {
            "discussion_title": "There is no maximum of INT in python, so.....",
            "discussion_vote": "29",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers-ii/discuss/92627/There-is-no-maximum-of-INT-in-python-so....."
        },
        {
            "discussion_title": "Concise C++ Solution without reverse",
            "discussion_vote": "13",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/add-two-numbers-ii/discuss/92629/Concise-C%2B%2B-Solution-without-reverse"
        }
    ],
    "446": [
        {
            "discussion_title": "Detailed explanation for Java O(n^2) solution",
            "discussion_vote": "123",
            "discussion_views": "11.2K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/discuss/92822/Detailed-explanation-for-Java-O(n2)-solution"
        },
        {
            "discussion_title": "JAVA 15 lines solution",
            "discussion_vote": "26",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/discuss/92830/JAVA-15-lines-solution"
        },
        {
            "discussion_title": "11 line Python O(n^2) solution",
            "discussion_vote": "18",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/discuss/92852/11-line-Python-O(n2)-solution"
        },
        {
            "discussion_title": "C++_DP_Accepted",
            "discussion_vote": "14",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/discuss/92837/C%2B%2B_DP_Accepted"
        },
        {
            "discussion_title": "O(N^2) MLE/TLE in C++? Try this one, Concise and Fast.",
            "discussion_vote": "14",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/discuss/92850/O(N2)-MLETLE-in-C%2B%2B-Try-this-one-Concise-and-Fast."
        }
    ],
    "447": [
        {
            "discussion_title": "Clean java solution: O(n^2) 166ms",
            "discussion_vote": "118",
            "discussion_views": "32.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-boomerangs/discuss/92861/Clean-java-solution%3A-O(n2)-166ms"
        },
        {
            "discussion_title": "Short Python O(n^2) hashmap solution",
            "discussion_vote": "35",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/number-of-boomerangs/discuss/92868/Short-Python-O(n2)-hashmap-solution"
        },
        {
            "discussion_title": "7 lines ~1050 ms C++",
            "discussion_vote": "25",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/number-of-boomerangs/discuss/92872/7-lines-~1050-ms-C%2B%2B"
        },
        {
            "discussion_title": "C++ clean solution O(n^2). Fully commented and explained.",
            "discussion_vote": "21",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/number-of-boomerangs/discuss/92866/C%2B%2B-clean-solution-O(n2).-Fully-commented-and-explained."
        },
        {
            "discussion_title": "Share my straightforward solution with HashMap, O(N^2)",
            "discussion_vote": "21",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-boomerangs/discuss/92870/Share-my-straightforward-solution-with-HashMap-O(N2)"
        }
    ],
    "448": [
        {
            "discussion_title": "Java accepted simple solution",
            "discussion_vote": "352",
            "discussion_views": "70.7K",
            "discussion_link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/discuss/92956/Java-accepted-simple-solution"
        },
        {
            "discussion_title": "Python 4 lines with short explanation",
            "discussion_vote": "73",
            "discussion_views": "19.7K",
            "discussion_link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/discuss/92955/Python-4-lines-with-short-explanation"
        },
        {
            "discussion_title": "5-line Java Easy-understanding",
            "discussion_vote": "70",
            "discussion_views": "29.0K",
            "discussion_link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/discuss/92980/5-line-Java-Easy-understanding"
        },
        {
            "discussion_title": "c++ solution O(1) space",
            "discussion_vote": "56",
            "discussion_views": "21.6K",
            "discussion_link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/discuss/92958/c%2B%2B-solution-O(1)-space"
        },
        {
            "discussion_title": "Simple Java In-place sort solution",
            "discussion_vote": "30",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/discuss/93007/Simple-Java-In-place-sort-solution"
        }
    ],
    "449": [
        {
            "discussion_title": "Java PreOrder + Queue solution",
            "discussion_vote": "69",
            "discussion_views": "34.1K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-bst/discuss/93175/Java-PreOrder-%2B-Queue-solution"
        },
        {
            "discussion_title": "Concise C++ 19ms solution beating 99.4%",
            "discussion_vote": "42",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-bst/discuss/93167/Concise-C%2B%2B-19ms-solution-beating-99.4"
        },
        {
            "discussion_title": "Deserialize from preorder and computed inorder, reusing old solution",
            "discussion_vote": "29",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-bst/discuss/93168/Deserialize-from-preorder-and-computed-inorder-reusing-old-solution"
        },
        {
            "discussion_title": "what's the difference between this and #297 ?",
            "discussion_vote": "23",
            "discussion_views": "13.0K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-bst/discuss/93177/what's-the-difference-between-this-and-297"
        },
        {
            "discussion_title": "Using lower bound and upper bound to deserialize BST",
            "discussion_vote": "21",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/serialize-and-deserialize-bst/discuss/93180/Using-lower-bound-and-upper-bound-to-deserialize-BST"
        }
    ],
    "450": [
        {
            "discussion_title": "Recursive Easy to Understand Java Solution",
            "discussion_vote": "202",
            "discussion_views": "33.2K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-bst/discuss/93296/Recursive-Easy-to-Understand-Java-Solution"
        },
        {
            "discussion_title": "Iterative solution in Java, O(h) time and O(1) space",
            "discussion_vote": "67",
            "discussion_views": "11.2K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-bst/discuss/93298/Iterative-solution-in-Java-O(h)-time-and-O(1)-space"
        },
        {
            "discussion_title": "Very Concise C++ Solution for General Binary Tree not only BST",
            "discussion_vote": "31",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-bst/discuss/93293/Very-Concise-C%2B%2B-Solution-for-General-Binary-Tree-not-only-BST"
        },
        {
            "discussion_title": "Simple Python Solution With Explanation",
            "discussion_vote": "28",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-bst/discuss/93374/Simple-Python-Solution-With-Explanation"
        },
        {
            "discussion_title": "Java Easy to Understand Solution",
            "discussion_vote": "17",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/delete-node-in-a-bst/discuss/93328/Java-Easy-to-Understand-Solution"
        }
    ],
    "451": [
        {
            "discussion_title": "Java O(n) Bucket Sort Solution / O(nlogm) PriorityQueue Solution, easy to understand",
            "discussion_vote": "77",
            "discussion_views": "26.3K",
            "discussion_link": "https://leetcode.com/problems/sort-characters-by-frequency/discuss/93420/Java-O(n)-Bucket-Sort-Solution-O(nlogm)-PriorityQueue-Solution-easy-to-understand"
        },
        {
            "discussion_title": "C++ O(n) solution without sort()",
            "discussion_vote": "71",
            "discussion_views": "21.8K",
            "discussion_link": "https://leetcode.com/problems/sort-characters-by-frequency/discuss/93404/C%2B%2B-O(n)-solution-without-sort()"
        },
        {
            "discussion_title": "O(n) Easy to understand Java Solution",
            "discussion_vote": "36",
            "discussion_views": "24.1K",
            "discussion_link": "https://leetcode.com/problems/sort-characters-by-frequency/discuss/93445/O(n)-Easy-to-understand-Java-Solution"
        },
        {
            "discussion_title": "Concise C++ solution using STL sort",
            "discussion_vote": "28",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/sort-characters-by-frequency/discuss/93409/Concise-C%2B%2B-solution-using-STL-sort"
        },
        {
            "discussion_title": "1 line Python code.",
            "discussion_vote": "17",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/sort-characters-by-frequency/discuss/93410/1-line-Python-code."
        }
    ],
    "452": [
        {
            "discussion_title": "Share my explained Greedy solution",
            "discussion_vote": "102",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/discuss/93703/Share-my-explained-Greedy-solution"
        },
        {
            "discussion_title": "Greedy, Python (132 ms)",
            "discussion_vote": "28",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/discuss/93719/Greedy-Python-(132-ms)"
        },
        {
            "discussion_title": "Java Greedy Soution",
            "discussion_vote": "24",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/discuss/93711/Java-Greedy-Soution"
        },
        {
            "discussion_title": "C++ easy understood solution (sort)",
            "discussion_vote": "18",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/discuss/93695/C%2B%2B-easy-understood-solution-(sort)"
        },
        {
            "discussion_title": "A Concise Template for \"Overlapping Interval Problem\"",
            "discussion_vote": "17",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/discuss/93735/A-Concise-Template-for-%22Overlapping-Interval-Problem%22"
        }
    ],
    "453": [
        {
            "discussion_title": "It is a math question",
            "discussion_vote": "257",
            "discussion_views": "27.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/discuss/93817/It-is-a-math-question"
        },
        {
            "discussion_title": "Java O(n) solution. Short.",
            "discussion_vote": "148",
            "discussion_views": "26.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/discuss/93815/Java-O(n)-solution.-Short."
        },
        {
            "discussion_title": "Simple one-liners",
            "discussion_vote": "82",
            "discussion_views": "13.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/discuss/93822/Simple-one-liners"
        },
        {
            "discussion_title": "What if we are not smart enough to come up with decrease 1. Here is how we do it.",
            "discussion_vote": "27",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/discuss/93828/What-if-we-are-not-smart-enough-to-come-up-with-decrease-1.-Here-is-how-we-do-it."
        },
        {
            "discussion_title": "Four Python solutions with detailed explanation",
            "discussion_vote": "21",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/discuss/93905/Four-Python-solutions-with-detailed-explanation"
        }
    ],
    "454": [
        {
            "discussion_title": "Clean java solution O(n^2)",
            "discussion_vote": "151",
            "discussion_views": "27.1K",
            "discussion_link": "https://leetcode.com/problems/4sum-ii/discuss/93920/Clean-java-solution-O(n2)"
        },
        {
            "discussion_title": "Easy 2 lines O(N^2) Python",
            "discussion_vote": "123",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/4sum-ii/discuss/93917/Easy-2-lines-O(N2)-Python"
        },
        {
            "discussion_title": "Simple Java Solution with Explanation",
            "discussion_vote": "42",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/4sum-ii/discuss/93946/Simple-Java-Solution-with-Explanation"
        },
        {
            "discussion_title": "Concise C++ 11 code beat 99.5%",
            "discussion_vote": "30",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/4sum-ii/discuss/93925/Concise-C%2B%2B-11-code-beat-99.5"
        },
        {
            "discussion_title": "python O(n^2) solution with hashtable",
            "discussion_vote": "11",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/4sum-ii/discuss/93927/python-O(n2)-solution-with-hashtable"
        }
    ],
    "455": [
        {
            "discussion_title": "Simple Greedy Java Solution",
            "discussion_vote": "66",
            "discussion_views": "19.0K",
            "discussion_link": "https://leetcode.com/problems/assign-cookies/discuss/93987/Simple-Greedy-Java-Solution"
        },
        {
            "discussion_title": "Array sort + Two pointer greedy solution O(nlogn)",
            "discussion_vote": "16",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/assign-cookies/discuss/93997/Array-sort-%2B-Two-pointer-greedy-solution-O(nlogn)"
        },
        {
            "discussion_title": "Simple PYTHON O(nlogn)",
            "discussion_vote": "11",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/assign-cookies/discuss/94063/Simple-PYTHON-O(nlogn)"
        },
        {
            "discussion_title": "Easy Understanding C++ solution O(nlogn)",
            "discussion_vote": "6",
            "discussion_views": "692",
            "discussion_link": "https://leetcode.com/problems/assign-cookies/discuss/93991/Easy-Understanding-C%2B%2B-solution-O(nlogn)"
        },
        {
            "discussion_title": "Simple Python Solution",
            "discussion_vote": "6",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/assign-cookies/discuss/94009/Simple-Python-Solution"
        }
    ],
    "456": [
        {
            "discussion_title": "Single pass C++ O(n) space and time solution (8 lines) with detailed explanation.",
            "discussion_vote": "127",
            "discussion_views": "18.4K",
            "discussion_link": "https://leetcode.com/problems/132-pattern/discuss/94071/Single-pass-C%2B%2B-O(n)-space-and-time-solution-(8-lines)-with-detailed-explanation."
        },
        {
            "discussion_title": "Java solutions from O(n^3) to O(n) for \"132\" pattern (updated with one-pass slution)",
            "discussion_vote": "67",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/132-pattern/discuss/94089/Java-solutions-from-O(n3)-to-O(n)-for-%22132%22-pattern-(updated-with-one-pass-slution)"
        },
        {
            "discussion_title": "Java O(n) solution using stack in detail explanation",
            "discussion_vote": "49",
            "discussion_views": "12.6K",
            "discussion_link": "https://leetcode.com/problems/132-pattern/discuss/94077/Java-O(n)-solution-using-stack-in-detail-explanation"
        },
        {
            "discussion_title": "10-line Python Solution",
            "discussion_vote": "13",
            "discussion_views": "914",
            "discussion_link": "https://leetcode.com/problems/132-pattern/discuss/94081/10-line-Python-Solution"
        },
        {
            "discussion_title": "Share my easy and simple solution",
            "discussion_vote": "8",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/132-pattern/discuss/94076/Share-my-easy-and-simple-solution"
        }
    ],
    "457": [
        {
            "discussion_title": "I cannot understand why test case [-2, 1, -1, -2, -2] gives false?",
            "discussion_vote": "55",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/circular-array-loop/discuss/94146/I-cannot-understand-why-test-case-2-1-1-2-2-gives-false"
        },
        {
            "discussion_title": "Java Slow/Fast Pointer Solution",
            "discussion_vote": "53",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/circular-array-loop/discuss/94148/Java-SlowFast-Pointer-Solution"
        },
        {
            "discussion_title": "Why {3, 1, 2} is a loop and {-1, -2, -3, -4, -5} is not?",
            "discussion_vote": "13",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/circular-array-loop/discuss/94152/Why-3-1-2-is-a-loop-and-1-2-3-4-5-is-not"
        },
        {
            "discussion_title": "python 1 pointer O(n) time O(1) space",
            "discussion_vote": "8",
            "discussion_views": "471",
            "discussion_link": "https://leetcode.com/problems/circular-array-loop/discuss/167525/python-1-pointer-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "two pass O(n) solution by marking failed loop by zero",
            "discussion_vote": "7",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/circular-array-loop/discuss/94155/two-pass-O(n)-solution-by-marking-failed-loop-by-zero"
        }
    ],
    "458": [
        {
            "discussion_title": "Another explanation and solution",
            "discussion_vote": "290",
            "discussion_views": "35.3K",
            "discussion_link": "https://leetcode.com/problems/poor-pigs/discuss/94266/Another-explanation-and-solution"
        },
        {
            "discussion_title": "Solution with detailed explanation",
            "discussion_vote": "78",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/poor-pigs/discuss/94273/Solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Why is the difficulty of this problem easy?",
            "discussion_vote": "53",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/poor-pigs/discuss/94299/Why-is-the-difficulty-of-this-problem-easy"
        },
        {
            "discussion_title": "Why should pig die?",
            "discussion_vote": "26",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/poor-pigs/discuss/94281/Why-should-pig-die"
        },
        {
            "discussion_title": "Major flaw in current algorithm [FIXED]",
            "discussion_vote": "21",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/poor-pigs/discuss/94292/Major-flaw-in-current-algorithm-FIXED"
        }
    ],
    "459": [
        {
            "discussion_title": "Easy python solution with explaination",
            "discussion_vote": "215",
            "discussion_views": "28.0K",
            "discussion_link": "https://leetcode.com/problems/repeated-substring-pattern/discuss/94334/Easy-python-solution-with-explaination"
        },
        {
            "discussion_title": "Java Simple Solution with Explanation",
            "discussion_vote": "145",
            "discussion_views": "46.6K",
            "discussion_link": "https://leetcode.com/problems/repeated-substring-pattern/discuss/94352/Java-Simple-Solution-with-Explanation"
        },
        {
            "discussion_title": "Simple Java solution, 2 lines",
            "discussion_vote": "46",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/repeated-substring-pattern/discuss/94344/Simple-Java-solution-2-lines"
        },
        {
            "discussion_title": "C++ O(n) using KMP, 32ms, 8 lines of code with brief explanation.",
            "discussion_vote": "43",
            "discussion_views": "13.6K",
            "discussion_link": "https://leetcode.com/problems/repeated-substring-pattern/discuss/94397/C%2B%2B-O(n)-using-KMP-32ms-8-lines-of-code-with-brief-explanation."
        },
        {
            "discussion_title": "Java & O(n)",
            "discussion_vote": "41",
            "discussion_views": "20.9K",
            "discussion_link": "https://leetcode.com/problems/repeated-substring-pattern/discuss/94340/Java-and-O(n)"
        }
    ],
    "460": [
        {
            "discussion_title": "JAVA O(1) very easy solution using 3 HashMaps and LinkedHashSet",
            "discussion_vote": "116",
            "discussion_views": "27.2K",
            "discussion_link": "https://leetcode.com/problems/lfu-cache/discuss/94521/JAVA-O(1)-very-easy-solution-using-3-HashMaps-and-LinkedHashSet"
        },
        {
            "discussion_title": "Java O(1) Accept Solution Using HashMap, DoubleLinkedList and LinkedHashSet",
            "discussion_vote": "62",
            "discussion_views": "38.5K",
            "discussion_link": "https://leetcode.com/problems/lfu-cache/discuss/94515/Java-O(1)-Accept-Solution-Using-HashMap-DoubleLinkedList-and-LinkedHashSet"
        },
        {
            "discussion_title": "Concise C++ O(1) solution using 3 hash maps with explanation",
            "discussion_vote": "42",
            "discussion_views": "15.7K",
            "discussion_link": "https://leetcode.com/problems/lfu-cache/discuss/94516/Concise-C%2B%2B-O(1)-solution-using-3-hash-maps-with-explanation"
        },
        {
            "discussion_title": "Java O(1) Solution Using Two HashMap and One DoubleLinkedList",
            "discussion_vote": "23",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/lfu-cache/discuss/94547/Java-O(1)-Solution-Using-Two-HashMap-and-One-DoubleLinkedList"
        },
        {
            "discussion_title": "Java solutions of three different ways. PriorityQueue : O(capacity)  TreeMap : O(log(capacity)) DoubleLinkedList  : O(1)",
            "discussion_vote": "20",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/lfu-cache/discuss/94657/Java-solutions-of-three-different-ways.-PriorityQueue-%3A-O(capacity)-TreeMap-%3A-O(log(capacity))-DoubleLinkedList-%3A-O(1)"
        }
    ],
    "461": [
        {
            "discussion_title": "Java 1 Line Solution :D",
            "discussion_vote": "180",
            "discussion_views": "69.7K",
            "discussion_link": "https://leetcode.com/problems/hamming-distance/discuss/94698/Java-1-Line-Solution-%3AD"
        },
        {
            "discussion_title": "My C++ solution using bit manipulation",
            "discussion_vote": "117",
            "discussion_views": "30.6K",
            "discussion_link": "https://leetcode.com/problems/hamming-distance/discuss/94705/My-C%2B%2B-solution-using-bit-manipulation"
        },
        {
            "discussion_title": "Python 1 line 49ms",
            "discussion_vote": "66",
            "discussion_views": "29.9K",
            "discussion_link": "https://leetcode.com/problems/hamming-distance/discuss/94697/Python-1-line-49ms"
        },
        {
            "discussion_title": "Java 3-Line Solution",
            "discussion_vote": "40",
            "discussion_views": "34.0K",
            "discussion_link": "https://leetcode.com/problems/hamming-distance/discuss/94693/Java-3-Line-Solution"
        },
        {
            "discussion_title": "Javascript one line solution",
            "discussion_vote": "29",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/hamming-distance/discuss/94704/Javascript-one-line-solution"
        }
    ],
    "462": [
        {
            "discussion_title": "Java(just like meeting point problem)",
            "discussion_vote": "75",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/discuss/94937/Java(just-like-meeting-point-problem)"
        },
        {
            "discussion_title": "2 lines Python, 2 ways",
            "discussion_vote": "30",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/discuss/94923/2-lines-Python-2-ways"
        },
        {
            "discussion_title": "Java O(n) Time using QuickSelect",
            "discussion_vote": "21",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/discuss/94917/Java-O(n)-Time-using-QuickSelect"
        },
        {
            "discussion_title": "O(n) solution with detailed explanation.",
            "discussion_vote": "18",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/discuss/94930/O(n)-solution-with-detailed-explanation."
        },
        {
            "discussion_title": "Why median is better than average?",
            "discussion_vote": "10",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/discuss/94932/Why-median-is-better-than-average"
        }
    ],
    "463": [
        {
            "discussion_title": "clear and easy java solution",
            "discussion_vote": "226",
            "discussion_views": "49.8K",
            "discussion_link": "https://leetcode.com/problems/island-perimeter/discuss/95001/clear-and-easy-java-solution"
        },
        {
            "discussion_title": "Short Python",
            "discussion_vote": "69",
            "discussion_views": "20.3K",
            "discussion_link": "https://leetcode.com/problems/island-perimeter/discuss/95007/Short-Python"
        },
        {
            "discussion_title": "Java 9 line solution, add 4 for each land and remove 2 for each internal edge",
            "discussion_vote": "65",
            "discussion_views": "15.3K",
            "discussion_link": "https://leetcode.com/problems/island-perimeter/discuss/94992/Java-9-line-solution-add-4-for-each-land-and-remove-2-for-each-internal-edge"
        },
        {
            "discussion_title": "C++ solution with explanation",
            "discussion_vote": "54",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/island-perimeter/discuss/95126/C%2B%2B-solution-with-explanation"
        },
        {
            "discussion_title": "Easy to read Python solution",
            "discussion_vote": "41",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/island-perimeter/discuss/95003/Easy-to-read-Python-solution"
        }
    ],
    "464": [
        {
            "discussion_title": "Java solution using HashMap with detailed explanation",
            "discussion_vote": "168",
            "discussion_views": "44.9K",
            "discussion_link": "https://leetcode.com/problems/can-i-win/discuss/95277/Java-solution-using-HashMap-with-detailed-explanation"
        },
        {
            "discussion_title": "Python solution, easy to understand",
            "discussion_vote": "26",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/can-i-win/discuss/95292/Python-solution-easy-to-understand"
        },
        {
            "discussion_title": "7-liner C++ beat 98.4%, DFS with early termination check (detailed explanation)",
            "discussion_vote": "18",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/can-i-win/discuss/95320/7-liner-C%2B%2B-beat-98.4-DFS-with-early-termination-check-(detailed-explanation)"
        },
        {
            "discussion_title": "brute force and memoization",
            "discussion_vote": "11",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/can-i-win/discuss/95283/brute-force-and-memoization"
        },
        {
            "discussion_title": "Java easy strightforward solution with explanation",
            "discussion_vote": "10",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/can-i-win/discuss/95293/Java-easy-strightforward-solution-with-explanation"
        }
    ],
    "466": [
        {
            "discussion_title": "Ugly Java brute force solution, but accepted. 1088ms.",
            "discussion_vote": "40",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/count-the-repetitions/discuss/95401/Ugly-Java-brute-force-solution-but-accepted.-1088ms."
        },
        {
            "discussion_title": "C++ solution inspired by @70664914 with organized explanation",
            "discussion_vote": "37",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/count-the-repetitions/discuss/95398/C%2B%2B-solution-inspired-by-%4070664914-with-organized-explanation"
        },
        {
            "discussion_title": "C++ 0ms O(str1.length*str2.length)",
            "discussion_vote": "18",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/count-the-repetitions/discuss/95397/C%2B%2B-0ms-O(str1.length*str2.length)"
        },
        {
            "discussion_title": "Easy-understanding Java Solution with detailed explanation, 21ms!",
            "discussion_vote": "16",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/count-the-repetitions/discuss/95408/Easy-understanding-Java-Solution-with-detailed-explanation-21ms!"
        },
        {
            "discussion_title": "Very clean and short 7ms Java solution based on @70664914 's idea",
            "discussion_vote": "6",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/count-the-repetitions/discuss/95402/Very-clean-and-short-7ms-Java-solution-based-on-%4070664914-'s-idea"
        }
    ],
    "467": [
        {
            "discussion_title": "Concise Java solution using DP",
            "discussion_vote": "195",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/discuss/95439/Concise-Java-solution-using-DP"
        },
        {
            "discussion_title": "C++ Concise Solution",
            "discussion_vote": "19",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/discuss/95448/C%2B%2B-Concise-Solution"
        },
        {
            "discussion_title": "Python Concise Solution",
            "discussion_vote": "6",
            "discussion_views": "394",
            "discussion_link": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/discuss/95441/Python-Concise-Solution"
        },
        {
            "discussion_title": "Evolve from brute force to optimal",
            "discussion_vote": "6",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/discuss/95454/Evolve-from-brute-force-to-optimal"
        },
        {
            "discussion_title": "Concise O(n) 6-liner in Python",
            "discussion_vote": "6",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/discuss/95463/Concise-O(n)-6-liner-in-Python"
        }
    ],
    "468": [
        {
            "discussion_title": "Java Simple Solution",
            "discussion_vote": "42",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/validate-ip-address/discuss/95491/Java-Simple-Solution"
        },
        {
            "discussion_title": "Python easy understand solution",
            "discussion_vote": "21",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/validate-ip-address/discuss/95484/Python-easy-understand-solution"
        },
        {
            "discussion_title": "C++ solution straightforward string processing",
            "discussion_vote": "19",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/validate-ip-address/discuss/95565/C%2B%2B-solution-straightforward-string-processing"
        },
        {
            "discussion_title": "Java Simple Solution with RegExp",
            "discussion_vote": "15",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/validate-ip-address/discuss/95504/Java-Simple-Solution-with-RegExp"
        },
        {
            "discussion_title": "Short RegExp solution",
            "discussion_vote": "9",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/validate-ip-address/discuss/95482/Short-RegExp-solution"
        }
    ],
    "472": [
        {
            "discussion_title": "Java DP Solution",
            "discussion_vote": "64",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/concatenated-words/discuss/95652/Java-DP-Solution"
        },
        {
            "discussion_title": "102ms java Trie + DFS solution. With explanation, easy to understand.",
            "discussion_vote": "27",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/concatenated-words/discuss/95644/102ms-java-Trie-%2B-DFS-solution.-With-explanation-easy-to-understand."
        },
        {
            "discussion_title": "Simple Java Trie + DFS solution 144ms",
            "discussion_vote": "13",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/concatenated-words/discuss/95636/Simple-Java-Trie-%2B-DFS-solution-144ms"
        },
        {
            "discussion_title": "C++ 772 ms dp solution",
            "discussion_vote": "12",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/concatenated-words/discuss/95677/C%2B%2B-772-ms-dp-solution"
        },
        {
            "discussion_title": "20 line C++ 169 ms Beats 100% & Why I think this problem is not properly judged.",
            "discussion_vote": "9",
            "discussion_views": "728",
            "discussion_link": "https://leetcode.com/problems/concatenated-words/discuss/95654/20-line-C%2B%2B-169-ms-Beats-100-and-Why-I-think-this-problem-is-not-properly-judged."
        }
    ],
    "473": [
        {
            "discussion_title": "Java DFS Solution with Explanation",
            "discussion_vote": "60",
            "discussion_views": "17.9K",
            "discussion_link": "https://leetcode.com/problems/matchsticks-to-square/discuss/95729/Java-DFS-Solution-with-Explanation"
        },
        {
            "discussion_title": "cpp 6ms solution with DFS",
            "discussion_vote": "39",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/matchsticks-to-square/discuss/95744/cpp-6ms-solution-with-DFS"
        },
        {
            "discussion_title": "Java DFS solution with various optimizations (sorting, sequential-partition, DP)",
            "discussion_vote": "21",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/matchsticks-to-square/discuss/95752/Java-DFS-solution-with-various-optimizations-(sorting-sequential-partition-DP)"
        },
        {
            "discussion_title": "C++ bit masking + DP solution with detailed comments",
            "discussion_vote": "10",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/matchsticks-to-square/discuss/95746/C%2B%2B-bit-masking-%2B-DP-solution-with-detailed-comments"
        },
        {
            "discussion_title": "Python DFS solution",
            "discussion_vote": "8",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/matchsticks-to-square/discuss/95732/Python-DFS-solution"
        }
    ],
    "474": [
        {
            "discussion_title": "c++ DP solution with comments",
            "discussion_vote": "85",
            "discussion_views": "18.1K",
            "discussion_link": "https://leetcode.com/problems/ones-and-zeroes/discuss/95814/c%2B%2B-DP-solution-with-comments"
        },
        {
            "discussion_title": "0-1 knapsack detailed explanation.",
            "discussion_vote": "49",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/ones-and-zeroes/discuss/95807/0-1-knapsack-detailed-explanation."
        },
        {
            "discussion_title": "Have you graduated from primary school?",
            "discussion_vote": "34",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/ones-and-zeroes/discuss/95815/Have-you-graduated-from-primary-school"
        },
        {
            "discussion_title": "Java Iterative DP Solution - O(mn) Space",
            "discussion_vote": "33",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/ones-and-zeroes/discuss/95811/Java-Iterative-DP-Solution-O(mn)-Space"
        },
        {
            "discussion_title": "0-1 knapsack in python",
            "discussion_vote": "18",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/ones-and-zeroes/discuss/95808/0-1-knapsack-in-python"
        }
    ],
    "475": [
        {
            "discussion_title": "Short and Clean Java Binary Search Solution",
            "discussion_vote": "101",
            "discussion_views": "27.6K",
            "discussion_link": "https://leetcode.com/problems/heaters/discuss/95886/Short-and-Clean-Java-Binary-Search-Solution"
        },
        {
            "discussion_title": "Simple Java Solution with 2 Pointers",
            "discussion_vote": "74",
            "discussion_views": "15.4K",
            "discussion_link": "https://leetcode.com/problems/heaters/discuss/95881/Simple-Java-Solution-with-2-Pointers"
        },
        {
            "discussion_title": "Short Python",
            "discussion_vote": "48",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/heaters/discuss/95875/Short-Python"
        },
        {
            "discussion_title": "C++ clean solution with explanation",
            "discussion_vote": "31",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/heaters/discuss/95887/C%2B%2B-clean-solution-with-explanation"
        },
        {
            "discussion_title": "10 lines python with easy understanding",
            "discussion_vote": "15",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/heaters/discuss/95878/10-lines-python-with-easy-understanding"
        }
    ],
    "476": [
        {
            "discussion_title": "3 line C++",
            "discussion_vote": "113",
            "discussion_views": "29.2K",
            "discussion_link": "https://leetcode.com/problems/number-complement/discuss/96017/3-line-C%2B%2B"
        },
        {
            "discussion_title": "Java 1 line bit manipulation solution",
            "discussion_vote": "71",
            "discussion_views": "38.6K",
            "discussion_link": "https://leetcode.com/problems/number-complement/discuss/95992/Java-1-line-bit-manipulation-solution"
        },
        {
            "discussion_title": "Java, very simple code and self-evident, explanation",
            "discussion_vote": "55",
            "discussion_views": "15.0K",
            "discussion_link": "https://leetcode.com/problems/number-complement/discuss/96018/Java-very-simple-code-and-self-evident-explanation"
        },
        {
            "discussion_title": "Simple Python",
            "discussion_vote": "49",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/number-complement/discuss/96009/Simple-Python"
        },
        {
            "discussion_title": "maybe fewest operations",
            "discussion_vote": "47",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/number-complement/discuss/96103/maybe-fewest-operations"
        }
    ],
    "477": [
        {
            "discussion_title": "Java O(n) time O(1) Space",
            "discussion_vote": "168",
            "discussion_views": "27.9K",
            "discussion_link": "https://leetcode.com/problems/total-hamming-distance/discuss/96226/Java-O(n)-time-O(1)-Space"
        },
        {
            "discussion_title": "Share my O(n) C++ bitwise solution with thinking process and explanation",
            "discussion_vote": "100",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/total-hamming-distance/discuss/96243/Share-my-O(n)-C%2B%2B-bitwise-solution-with-thinking-process-and-explanation"
        },
        {
            "discussion_title": "Python via Strings",
            "discussion_vote": "40",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/total-hamming-distance/discuss/96229/Python-via-Strings"
        },
        {
            "discussion_title": "Java Solution with Explanation",
            "discussion_vote": "26",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/total-hamming-distance/discuss/96222/Java-Solution-with-Explanation"
        },
        {
            "discussion_title": "Python Explanation",
            "discussion_vote": "19",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/total-hamming-distance/discuss/96228/Python-Explanation"
        }
    ],
    "478": [
        {
            "discussion_title": "Polar Coordinates 10 lines",
            "discussion_vote": "29",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/generate-random-point-in-a-circle/discuss/154037/Polar-Coordinates-10-lines"
        },
        {
            "discussion_title": "How is the solution verified?",
            "discussion_vote": "9",
            "discussion_views": "335",
            "discussion_link": "https://leetcode.com/problems/generate-random-point-in-a-circle/discuss/162295/How-is-the-solution-verified"
        },
        {
            "discussion_title": "Explanation with Graphs why using Math.sqrt()",
            "discussion_vote": "6",
            "discussion_views": "690",
            "discussion_link": "https://leetcode.com/problems/generate-random-point-in-a-circle/discuss/155650/Explanation-with-Graphs-why-using-Math.sqrt()"
        },
        {
            "discussion_title": "Very simple Python solution",
            "discussion_vote": "5",
            "discussion_views": "431",
            "discussion_link": "https://leetcode.com/problems/generate-random-point-in-a-circle/discuss/154092/Very-simple-Python-solution"
        },
        {
            "discussion_title": "Python Solution without using Rejection Sampling",
            "discussion_vote": "4",
            "discussion_views": "290",
            "discussion_link": "https://leetcode.com/problems/generate-random-point-in-a-circle/discuss/154850/Python-Solution-without-using-Rejection-Sampling"
        }
    ],
    "479": [
        {
            "discussion_title": "I don't feel like this is a easy question",
            "discussion_vote": "154",
            "discussion_views": "20.7K",
            "discussion_link": "https://leetcode.com/problems/largest-palindrome-product/discuss/96290/I-don't-feel-like-this-is-a-easy-question"
        },
        {
            "discussion_title": "Java Solution using assumed max palindrom",
            "discussion_vote": "44",
            "discussion_views": "26.2K",
            "discussion_link": "https://leetcode.com/problems/largest-palindrome-product/discuss/96297/Java-Solution-using-assumed-max-palindrom"
        },
        {
            "discussion_title": "Java solutions with two different approaches",
            "discussion_vote": "36",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/largest-palindrome-product/discuss/96306/Java-solutions-with-two-different-approaches"
        },
        {
            "discussion_title": "Trickiness depending on language you use",
            "discussion_vote": "31",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/largest-palindrome-product/discuss/96331/Trickiness-depending-on-language-you-use"
        },
        {
            "discussion_title": "Java Solution with explanation",
            "discussion_vote": "31",
            "discussion_views": "17.1K",
            "discussion_link": "https://leetcode.com/problems/largest-palindrome-product/discuss/96303/Java-Solution-with-explanation"
        }
    ],
    "480": [
        {
            "discussion_title": "O(n log k) C++ using multiset and updating middle-iterator",
            "discussion_vote": "55",
            "discussion_views": "16.1K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-median/discuss/96340/O(n-log-k)-C%2B%2B-using-multiset-and-updating-middle-iterator"
        },
        {
            "discussion_title": "Java solution using two PriorityQueues",
            "discussion_vote": "38",
            "discussion_views": "12.9K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-median/discuss/96348/Java-solution-using-two-PriorityQueues"
        },
        {
            "discussion_title": "Easy to understand O(nlogk) Java solution using TreeMap",
            "discussion_vote": "29",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-median/discuss/96353/Easy-to-understand-O(nlogk)-Java-solution-using-TreeMap"
        },
        {
            "discussion_title": "Java using two Tree Sets - O(n logk)",
            "discussion_vote": "21",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-median/discuss/96346/Java-using-two-Tree-Sets-O(n-logk)"
        },
        {
            "discussion_title": "Easy Python O(nk)",
            "discussion_vote": "17",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/sliding-window-median/discuss/96355/Easy-Python-O(nk)"
        }
    ],
    "481": [
        {
            "discussion_title": "Simple Java solution using one array and two pointers",
            "discussion_vote": "62",
            "discussion_views": "13.5K",
            "discussion_link": "https://leetcode.com/problems/magical-string/discuss/96413/Simple-Java-solution-using-one-array-and-two-pointers"
        },
        {
            "discussion_title": "Short C++",
            "discussion_vote": "37",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/magical-string/discuss/96408/Short-C%2B%2B"
        },
        {
            "discussion_title": "Is the magical string unique?",
            "discussion_vote": "19",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/magical-string/discuss/96412/Is-the-magical-string-unique"
        },
        {
            "discussion_title": "O(log n) space using recursive generators",
            "discussion_vote": "7",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/magical-string/discuss/96432/O(log-n)-space-using-recursive-generators"
        },
        {
            "discussion_title": "Very Straightforward and simple Java solution O(n)",
            "discussion_vote": "7",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/magical-string/discuss/96419/Very-Straightforward-and-simple-Java-solution-O(n)"
        }
    ],
    "482": [
        {
            "discussion_title": "Java 5 lines clean solution",
            "discussion_vote": "94",
            "discussion_views": "19.5K",
            "discussion_link": "https://leetcode.com/problems/license-key-formatting/discuss/96512/Java-5-lines-clean-solution"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "18",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/license-key-formatting/discuss/96497/Python-solution"
        },
        {
            "discussion_title": "Easy to understand using StringBuilder",
            "discussion_vote": "15",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/license-key-formatting/discuss/96528/Easy-to-understand-using-StringBuilder"
        },
        {
            "discussion_title": "4-line C++ concise solution to scan string backward",
            "discussion_vote": "13",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/license-key-formatting/discuss/96506/4-line-C%2B%2B-concise-solution-to-scan-string-backward"
        },
        {
            "discussion_title": "beats 100% python3 submission",
            "discussion_vote": "11",
            "discussion_views": "577",
            "discussion_link": "https://leetcode.com/problems/license-key-formatting/discuss/131978/beats-100-python3-submission"
        }
    ],
    "483": [
        {
            "discussion_title": "Python solution with detailed mathematical explanation and derivation",
            "discussion_vote": "31",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/smallest-good-base/discuss/96587/Python-solution-with-detailed-mathematical-explanation-and-derivation"
        },
        {
            "discussion_title": "3ms, AC, C++, long long int + binary search",
            "discussion_vote": "28",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/smallest-good-base/discuss/96590/3ms-AC-C%2B%2B-long-long-int-%2B-binary-search"
        },
        {
            "discussion_title": "Java solution with hand-writing explain",
            "discussion_vote": "23",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/smallest-good-base/discuss/96589/Java-solution-with-hand-writing-explain"
        },
        {
            "discussion_title": "Java O((logn)^2) binary search solution",
            "discussion_vote": "15",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/smallest-good-base/discuss/96591/Java-O((logn)2)-binary-search-solution"
        },
        {
            "discussion_title": "Short Python O(log(N))",
            "discussion_vote": "7",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/smallest-good-base/discuss/96598/Short-Python-O(log(N))"
        }
    ],
    "485": [
        {
            "discussion_title": "Java 4 lines concise solution with explanation",
            "discussion_vote": "59",
            "discussion_views": "23.6K",
            "discussion_link": "https://leetcode.com/problems/max-consecutive-ones/discuss/96693/Java-4-lines-concise-solution-with-explanation"
        },
        {
            "discussion_title": "Easy Java Solution",
            "discussion_vote": "28",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/max-consecutive-ones/discuss/96715/Easy-Java-Solution"
        },
        {
            "discussion_title": "Simple C Solution with easy explanation",
            "discussion_vote": "17",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/max-consecutive-ones/discuss/96700/Simple-C-Solution-with-easy-explanation"
        },
        {
            "discussion_title": "Simple Python",
            "discussion_vote": "15",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/max-consecutive-ones/discuss/96712/Simple-Python"
        },
        {
            "discussion_title": "Simple C++ code",
            "discussion_vote": "6",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/max-consecutive-ones/discuss/96742/Simple-C%2B%2B-code"
        }
    ],
    "486": [
        {
            "discussion_title": "JAVA 9 lines DP solution, easy to understand with improvement to O(N) space complexity.",
            "discussion_vote": "222",
            "discussion_views": "21.4K",
            "discussion_link": "https://leetcode.com/problems/predict-the-winner/discuss/96828/JAVA-9-lines-DP-solution-easy-to-understand-with-improvement-to-O(N)-space-complexity."
        },
        {
            "discussion_title": "Java '1 Line' Recursive Solution O(n^2) Time and O(n) Space",
            "discussion_vote": "105",
            "discussion_views": "17.8K",
            "discussion_link": "https://leetcode.com/problems/predict-the-winner/discuss/96838/Java-'1-Line'-Recursive-Solution-O(n2)-Time-and-O(n)-Space"
        },
        {
            "discussion_title": "DP O(n^2)  + MIT OCW solution explanation",
            "discussion_vote": "42",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/predict-the-winner/discuss/96829/DP-O(n2)-%2B-MIT-OCW-solution-explanation"
        },
        {
            "discussion_title": "C++ DP solution with explanation",
            "discussion_vote": "24",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/predict-the-winner/discuss/96832/C%2B%2B-DP-solution-with-explanation"
        },
        {
            "discussion_title": "java DP solution with explanation",
            "discussion_vote": "13",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/predict-the-winner/discuss/96901/java-DP-solution-with-explanation"
        }
    ],
    "488": [
        {
            "discussion_title": "Standard test program is wrong?",
            "discussion_vote": "76",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/zuma-game/discuss/97007/Standard-test-program-is-wrong"
        },
        {
            "discussion_title": "\"short\" java solution, beats 98%",
            "discussion_vote": "27",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/zuma-game/discuss/97010/%22short%22-java-solution-beats-98"
        },
        {
            "discussion_title": "StraightForward Recursive Java Solution beat 97%",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/zuma-game/discuss/97027/StraightForward-Recursive-Java-Solution-beat-97"
        },
        {
            "discussion_title": "Concise 3ms C++ Solution",
            "discussion_vote": "6",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/zuma-game/discuss/97053/Concise-3ms-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Recursive java solution",
            "discussion_vote": "6",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/zuma-game/discuss/97012/Recursive-java-solution"
        }
    ],
    "491": [
        {
            "discussion_title": "Java solution beats 100%",
            "discussion_vote": "50",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/increasing-subsequences/discuss/97147/Java-solution-beats-100"
        },
        {
            "discussion_title": "Java 20 lines backtracking solution using set, beats 100%.",
            "discussion_vote": "45",
            "discussion_views": "17.7K",
            "discussion_link": "https://leetcode.com/problems/increasing-subsequences/discuss/97130/Java-20-lines-backtracking-solution-using-set-beats-100."
        },
        {
            "discussion_title": "Simple Python",
            "discussion_vote": "24",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/increasing-subsequences/discuss/97127/Simple-Python"
        },
        {
            "discussion_title": "C++ dfs solution using unordered_set",
            "discussion_vote": "21",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/increasing-subsequences/discuss/97124/C%2B%2B-dfs-solution-using-unordered_set"
        },
        {
            "discussion_title": "Clean 20ms solution",
            "discussion_vote": "19",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/increasing-subsequences/discuss/97148/Clean-20ms-solution"
        }
    ],
    "492": [
        {
            "discussion_title": "3 line Clean and easy understand solution",
            "discussion_vote": "52",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/construct-the-rectangle/discuss/97210/3-line-Clean-and-easy-understand-solution"
        },
        {
            "discussion_title": "Simple Java Solution, Beats 100%",
            "discussion_vote": "10",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/construct-the-rectangle/discuss/97217/Simple-Java-Solution-Beats-100"
        },
        {
            "discussion_title": "Simple Python",
            "discussion_vote": "9",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/construct-the-rectangle/discuss/97218/Simple-Python"
        },
        {
            "discussion_title": "3 line C++ clean solution with Explanation",
            "discussion_vote": "8",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/construct-the-rectangle/discuss/97244/3-line-C%2B%2B-clean-solution-with-Explanation"
        },
        {
            "discussion_title": "Python solution (linear time, constant space) with explanation",
            "discussion_vote": "4",
            "discussion_views": "798",
            "discussion_link": "https://leetcode.com/problems/construct-the-rectangle/discuss/97230/Python-solution-(linear-time-constant-space)-with-explanation"
        }
    ],
    "493": [
        {
            "discussion_title": "General principles behind problems similar to \"Reverse Pairs\"",
            "discussion_vote": "437",
            "discussion_views": "24.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-pairs/discuss/97268/General-principles-behind-problems-similar-to-%22Reverse-Pairs%22"
        },
        {
            "discussion_title": "Very Short and Clear MergeSort & BST Java Solutions",
            "discussion_vote": "62",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-pairs/discuss/97280/Very-Short-and-Clear-MergeSort-and-BST-Java-Solutions"
        },
        {
            "discussion_title": "C++ with iterators",
            "discussion_vote": "16",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/reverse-pairs/discuss/97287/C%2B%2B-with-iterators"
        },
        {
            "discussion_title": "Clean Java Solution using Enhanced Binary Search Tree",
            "discussion_vote": "13",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-pairs/discuss/97272/Clean-Java-Solution-using-Enhanced-Binary-Search-Tree"
        },
        {
            "discussion_title": "Java merge sort solution, O(nlog(n))",
            "discussion_vote": "10",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/reverse-pairs/discuss/97315/Java-merge-sort-solution-O(nlog(n))"
        }
    ],
    "494": [
        {
            "discussion_title": "Java (15 ms) C++ (3 ms) O(ns) iterative DP solution using subset sum with explanation",
            "discussion_vote": "370",
            "discussion_views": "53.0K",
            "discussion_link": "https://leetcode.com/problems/target-sum/discuss/97334/Java-(15-ms)-C%2B%2B-(3-ms)-O(ns)-iterative-DP-solution-using-subset-sum-with-explanation"
        },
        {
            "discussion_title": "Short Java DP Solution with Explanation",
            "discussion_vote": "99",
            "discussion_views": "27.7K",
            "discussion_link": "https://leetcode.com/problems/target-sum/discuss/97335/Short-Java-DP-Solution-with-Explanation"
        },
        {
            "discussion_title": "Java simple DFS with memorization",
            "discussion_vote": "38",
            "discussion_views": "14.5K",
            "discussion_link": "https://leetcode.com/problems/target-sum/discuss/97333/Java-simple-DFS-with-memorization"
        },
        {
            "discussion_title": "Python DP",
            "discussion_vote": "29",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/target-sum/discuss/97343/Python-DP"
        },
        {
            "discussion_title": "Java Short DFS Solution",
            "discussion_vote": "23",
            "discussion_views": "9.9K",
            "discussion_link": "https://leetcode.com/problems/target-sum/discuss/97371/Java-Short-DFS-Solution"
        }
    ],
    "495": [
        {
            "discussion_title": "Python Solution for Teemo",
            "discussion_vote": "40",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/teemo-attacking/discuss/97475/Python-Solution-for-Teemo"
        },
        {
            "discussion_title": "O(n) Java Solution using same idea of merge intervals",
            "discussion_vote": "25",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/teemo-attacking/discuss/97465/O(n)-Java-Solution-using-same-idea-of-merge-intervals"
        },
        {
            "discussion_title": "Simple question obscured by unnecessary story",
            "discussion_vote": "15",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/teemo-attacking/discuss/97502/Simple-question-obscured-by-unnecessary-story"
        },
        {
            "discussion_title": "Java 7 lines O(n) solution",
            "discussion_vote": "14",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/teemo-attacking/discuss/97451/Java-7-lines-O(n)-solution"
        },
        {
            "discussion_title": "Easy to understand Java solution",
            "discussion_vote": "8",
            "discussion_views": "621",
            "discussion_link": "https://leetcode.com/problems/teemo-attacking/discuss/97584/Easy-to-understand-Java-solution"
        }
    ],
    "496": [
        {
            "discussion_title": "Java 10 lines linear time complexity O(n) with explanation",
            "discussion_vote": "368",
            "discussion_views": "49.1K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-i/discuss/97595/Java-10-lines-linear-time-complexity-O(n)-with-explanation"
        },
        {
            "discussion_title": "C++ stack + unordered_map",
            "discussion_vote": "79",
            "discussion_views": "11.9K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-i/discuss/97613/C%2B%2B-stack-%2B-unordered_map"
        },
        {
            "discussion_title": "Python Solution with O(n)",
            "discussion_vote": "40",
            "discussion_views": "12.1K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-i/discuss/97604/Python-Solution-with-O(n)"
        },
        {
            "discussion_title": "Meh, 1000 is small",
            "discussion_vote": "33",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-i/discuss/97616/Meh-1000-is-small"
        },
        {
            "discussion_title": "Whys is it -1 for findNums[2] = 2 instead of 4.",
            "discussion_vote": "25",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-i/discuss/97594/Whys-is-it-1-for-findNums2-2-instead-of-4."
        }
    ],
    "497": [
        {
            "discussion_title": "Java randomly pick a rectangle then pick a point inside",
            "discussion_vote": "8",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/discuss/154130/Java-randomly-pick-a-rectangle-then-pick-a-point-inside"
        },
        {
            "discussion_title": "Python weighted probability solution",
            "discussion_vote": "5",
            "discussion_views": "812",
            "discussion_link": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/discuss/154147/Python-weighted-probability-solution"
        },
        {
            "discussion_title": "Java TreeMap solution only one random per pick",
            "discussion_vote": "2",
            "discussion_views": "183",
            "discussion_link": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/discuss/155452/Java-TreeMap-solution-only-one-random-per-pick"
        },
        {
            "discussion_title": "C++ solution using reservoir sampling with explanation - concise and easy to understand",
            "discussion_vote": "1",
            "discussion_views": "174",
            "discussion_link": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/discuss/170503/C%2B%2B-solution-using-reservoir-sampling-with-explanation-concise-and-easy-to-understand"
        },
        {
            "discussion_title": "Is [1,0,3,0] a valid rectangle?",
            "discussion_vote": "1",
            "discussion_views": "56",
            "discussion_link": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/discuss/164527/Is-1030-a-valid-rectangle"
        }
    ],
    "498": [
        {
            "discussion_title": "Java 15 lines without using boolean",
            "discussion_vote": "119",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/diagonal-traverse/discuss/97711/Java-15-lines-without-using-boolean"
        },
        {
            "discussion_title": "Concise Java Solution",
            "discussion_vote": "91",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/diagonal-traverse/discuss/97712/Concise-Java-Solution"
        },
        {
            "discussion_title": "Simply Python Solution",
            "discussion_vote": "27",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/diagonal-traverse/discuss/97767/Simply-Python-Solution"
        },
        {
            "discussion_title": "C++ without paying too much attention on direction switch",
            "discussion_vote": "23",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/diagonal-traverse/discuss/97733/C%2B%2B-without-paying-too-much-attention-on-direction-switch"
        },
        {
            "discussion_title": "sorting and normal Python",
            "discussion_vote": "17",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/diagonal-traverse/discuss/97719/sorting-and-normal-Python"
        }
    ],
    "500": [
        {
            "discussion_title": "Java 1-Line Solution via Regex and Stream",
            "discussion_vote": "79",
            "discussion_views": "29.4K",
            "discussion_link": "https://leetcode.com/problems/keyboard-row/discuss/97871/Java-1-Line-Solution-via-Regex-and-Stream"
        },
        {
            "discussion_title": "Easy understand solution in 7 lines for everyone",
            "discussion_vote": "67",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/keyboard-row/discuss/97913/Easy-understand-solution-in-7-lines-for-everyone"
        },
        {
            "discussion_title": "Short Easy Java with Explanation",
            "discussion_vote": "48",
            "discussion_views": "28.7K",
            "discussion_link": "https://leetcode.com/problems/keyboard-row/discuss/97870/Short-Easy-Java-with-Explanation"
        },
        {
            "discussion_title": "one-liner Ruby + Python",
            "discussion_vote": "38",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/keyboard-row/discuss/97888/one-liner-Ruby-%2B-Python"
        },
        {
            "discussion_title": "Solution in python using set",
            "discussion_vote": "30",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/keyboard-row/discuss/97881/Solution-in-python-using-set"
        }
    ],
    "501": [
        {
            "discussion_title": "Proper O(1) space",
            "discussion_vote": "171",
            "discussion_views": "43.7K",
            "discussion_link": "https://leetcode.com/problems/find-mode-in-binary-search-tree/discuss/98101/Proper-O(1)-space"
        },
        {
            "discussion_title": "Java 4ms Beats 100% Extra O(1) solution - No Map",
            "discussion_vote": "60",
            "discussion_views": "22.0K",
            "discussion_link": "https://leetcode.com/problems/find-mode-in-binary-search-tree/discuss/98100/Java-4ms-Beats-100-Extra-O(1)-solution-No-Map"
        },
        {
            "discussion_title": "11-liner C++ O(N) time O(1) extra space In-Order Traversal (detailed explanation)",
            "discussion_vote": "17",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/find-mode-in-binary-search-tree/discuss/98107/11-liner-C%2B%2B-O(N)-time-O(1)-extra-space-In-Order-Traversal-(detailed-explanation)"
        },
        {
            "discussion_title": "What does \"mode\" mean?",
            "discussion_vote": "15",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/find-mode-in-binary-search-tree/discuss/98126/What-does-%22mode%22-mean"
        },
        {
            "discussion_title": "Java AC Solution",
            "discussion_vote": "14",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/find-mode-in-binary-search-tree/discuss/98103/Java-AC-Solution"
        }
    ],
    "502": [
        {
            "discussion_title": "Very Simple (Greedy) Java Solution using two PriorityQueues",
            "discussion_vote": "66",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/ipo/discuss/98210/Very-Simple-(Greedy)-Java-Solution-using-two-PriorityQueues"
        },
        {
            "discussion_title": "Python solution by priority queue with explanation",
            "discussion_vote": "11",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/ipo/discuss/98216/Python-solution-by-priority-queue-with-explanation"
        },
        {
            "discussion_title": "8-liner C++ 42ms beat 98% greedy algorithm (detailed explanation)",
            "discussion_vote": "7",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/ipo/discuss/98213/8-liner-C%2B%2B-42ms-beat-98-greedy-algorithm-(detailed-explanation)"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "6",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/ipo/discuss/98223/Python-solution"
        },
        {
            "discussion_title": "Why does Greedy solution work for this; why not Dynamic Programming ?",
            "discussion_vote": "3",
            "discussion_views": "355",
            "discussion_link": "https://leetcode.com/problems/ipo/discuss/142490/Why-does-Greedy-solution-work-for-this-why-not-Dynamic-Programming"
        }
    ],
    "503": [
        {
            "discussion_title": "Java 10 lines and C++ 12 lines linear time complexity O(n) with explanation",
            "discussion_vote": "129",
            "discussion_views": "19.2K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-ii/discuss/98273/Java-10-lines-and-C%2B%2B-12-lines-linear-time-complexity-O(n)-with-explanation"
        },
        {
            "discussion_title": "Typical ways to solve circular array problems. Java solution.",
            "discussion_vote": "45",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-ii/discuss/98262/Typical-ways-to-solve-circular-array-problems.-Java-solution."
        },
        {
            "discussion_title": "Python 6 lines solution using stack",
            "discussion_vote": "28",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-ii/discuss/98270/Python-6-lines-solution-using-stack"
        },
        {
            "discussion_title": "NO STACK: O(n) time complexity and O(1) space complexity using DP",
            "discussion_vote": "9",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-ii/discuss/98264/NO-STACK%3A-O(n)-time-complexity-and-O(1)-space-complexity-using-DP"
        },
        {
            "discussion_title": "Python solution with detailed explanation",
            "discussion_vote": "6",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-ii/discuss/98328/Python-solution-with-detailed-explanation"
        }
    ],
    "504": [
        {
            "discussion_title": "Simple Java, oneliner Ruby",
            "discussion_vote": "25",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/base-7/discuss/98347/Simple-Java-oneliner-Ruby"
        },
        {
            "discussion_title": "Python easy understand solution",
            "discussion_vote": "22",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/base-7/discuss/98364/Python-easy-understand-solution"
        },
        {
            "discussion_title": "3-liner C++ to build string backward + 1-liner recursive solutions",
            "discussion_vote": "13",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/base-7/discuss/98385/3-liner-C%2B%2B-to-build-string-backward-%2B-1-liner-recursive-solutions"
        },
        {
            "discussion_title": "Verbose Java Solution",
            "discussion_vote": "12",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/base-7/discuss/98363/Verbose-Java-Solution"
        },
        {
            "discussion_title": "3ms C++ 3 lines Solution",
            "discussion_vote": "4",
            "discussion_views": "349",
            "discussion_link": "https://leetcode.com/problems/base-7/discuss/98351/3ms-C%2B%2B-3-lines-Solution"
        }
    ],
    "506": [
        {
            "discussion_title": "Easy Java Solution, Sorting.",
            "discussion_vote": "44",
            "discussion_views": "20.9K",
            "discussion_link": "https://leetcode.com/problems/relative-ranks/discuss/98468/Easy-Java-Solution-Sorting."
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "37",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/relative-ranks/discuss/98472/Python-solution"
        },
        {
            "discussion_title": "Simple Sorting O(n log n) solution",
            "discussion_vote": "19",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/relative-ranks/discuss/98505/Simple-Sorting-O(n-log-n)-solution"
        },
        {
            "discussion_title": "C++ Easy to Understand",
            "discussion_vote": "13",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/relative-ranks/discuss/98524/C%2B%2B-Easy-to-Understand"
        },
        {
            "discussion_title": "Java 6ms solution O(n) without sorting",
            "discussion_vote": "10",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/relative-ranks/discuss/98492/Java-6ms-solution-O(n)-without-sorting"
        }
    ],
    "508": [
        {
            "discussion_title": "Verbose Java solution, postOrder traverse, HashMap (18ms)",
            "discussion_vote": "42",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/most-frequent-subtree-sum/discuss/98664/Verbose-Java-solution-postOrder-traverse-HashMap-(18ms)"
        },
        {
            "discussion_title": "Python easy understand solution",
            "discussion_vote": "38",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/most-frequent-subtree-sum/discuss/98675/Python-easy-understand-solution"
        },
        {
            "discussion_title": "Short Clean C++ O(n)  Solution",
            "discussion_vote": "19",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/most-frequent-subtree-sum/discuss/98671/Short-Clean-C%2B%2B-O(n)-Solution"
        },
        {
            "discussion_title": "Java divide and conquer",
            "discussion_vote": "11",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/most-frequent-subtree-sum/discuss/98707/Java-divide-and-conquer"
        },
        {
            "discussion_title": "Short Easy Java",
            "discussion_vote": "9",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/most-frequent-subtree-sum/discuss/98662/Short-Easy-Java"
        }
    ],
    "513": [
        {
            "discussion_title": "Right-to-Left BFS (Python + Java)",
            "discussion_vote": "187",
            "discussion_views": "18.3K",
            "discussion_link": "https://leetcode.com/problems/find-bottom-left-tree-value/discuss/98779/Right-to-Left-BFS-(Python-%2B-Java)"
        },
        {
            "discussion_title": "Simple Java Solution, beats 100.0%!",
            "discussion_vote": "44",
            "discussion_views": "14.4K",
            "discussion_link": "https://leetcode.com/problems/find-bottom-left-tree-value/discuss/98802/Simple-Java-Solution-beats-100.0!"
        },
        {
            "discussion_title": "Verbose Java Solution, Binary tree level order traversal",
            "discussion_vote": "34",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/find-bottom-left-tree-value/discuss/98786/Verbose-Java-Solution-Binary-tree-level-order-traversal"
        },
        {
            "discussion_title": "C++ recursive solution (beats 100%) with basic explanation",
            "discussion_vote": "13",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/find-bottom-left-tree-value/discuss/98843/C%2B%2B-recursive-solution-(beats-100)-with-basic-explanation"
        },
        {
            "discussion_title": "my BFS solution for python",
            "discussion_vote": "8",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/find-bottom-left-tree-value/discuss/98817/my-BFS-solution-for-python"
        }
    ],
    "514": [
        {
            "discussion_title": "Concise Java DP Solution",
            "discussion_vote": "56",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/freedom-trail/discuss/98902/Concise-Java-DP-Solution"
        },
        {
            "discussion_title": "Evolve from brute force to dp",
            "discussion_vote": "15",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/freedom-trail/discuss/98929/Evolve-from-brute-force-to-dp"
        },
        {
            "discussion_title": "Shared my C++ dp solution ,19ms",
            "discussion_vote": "12",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/freedom-trail/discuss/98920/Shared-my-C%2B%2B-dp-solution-19ms"
        },
        {
            "discussion_title": "Java Clear Solution, dfs+memoization",
            "discussion_vote": "12",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/freedom-trail/discuss/98897/Java-Clear-Solution-dfs%2Bmemoization"
        },
        {
            "discussion_title": "Super clear DFS + memorization solution",
            "discussion_vote": "10",
            "discussion_views": "700",
            "discussion_link": "https://leetcode.com/problems/freedom-trail/discuss/98916/Super-clear-DFS-%2B-memorization-solution"
        }
    ],
    "515": [
        {
            "discussion_title": "9ms JAVA DFS solution",
            "discussion_vote": "49",
            "discussion_views": "14.7K",
            "discussion_link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/discuss/98971/9ms-JAVA-DFS-solution"
        },
        {
            "discussion_title": "Python BFS",
            "discussion_vote": "35",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/discuss/99000/Python-BFS"
        },
        {
            "discussion_title": "Java BFS",
            "discussion_vote": "19",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/discuss/98976/Java-BFS"
        },
        {
            "discussion_title": "1-liner Python, Divide and conquer",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/discuss/99045/1-liner-Python-Divide-and-conquer"
        },
        {
            "discussion_title": "C++ a different approach (12ms beats 100%)",
            "discussion_vote": "9",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/discuss/99035/C%2B%2B-a-different-approach-(12ms-beats-100)"
        }
    ],
    "516": [
        {
            "discussion_title": "Straight forward Java DP solution",
            "discussion_vote": "164",
            "discussion_views": "40.8K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-subsequence/discuss/99101/Straight-forward-Java-DP-solution"
        },
        {
            "discussion_title": "Evolve from brute force to dp",
            "discussion_vote": "69",
            "discussion_views": "9.3K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-subsequence/discuss/99111/Evolve-from-brute-force-to-dp"
        },
        {
            "discussion_title": "What is the meaning of example 1?",
            "discussion_vote": "25",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-subsequence/discuss/99110/What-is-the-meaning-of-example-1"
        },
        {
            "discussion_title": "Python DP O(n) space O(n^2) time",
            "discussion_vote": "21",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-subsequence/discuss/99129/Python-DP-O(n)-space-O(n2)-time"
        },
        {
            "discussion_title": "Fast and concise Python solution that actually gets AC",
            "discussion_vote": "20",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/longest-palindromic-subsequence/discuss/99153/Fast-and-concise-Python-solution-that-actually-gets-AC"
        }
    ],
    "517": [
        {
            "discussion_title": "Super Short & Easy Java O(n) Solution",
            "discussion_vote": "93",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/super-washing-machines/discuss/99185/Super-Short-and-Easy-Java-O(n)-Solution"
        },
        {
            "discussion_title": "C++ 16ms O(n) solution (with trivial proof)",
            "discussion_vote": "71",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/super-washing-machines/discuss/99181/C%2B%2B-16ms-O(n)-solution-(with-trivial-proof)"
        },
        {
            "discussion_title": "Very intuitive O(n) solution",
            "discussion_vote": "36",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/super-washing-machines/discuss/99177/Very-intuitive-O(n)-solution"
        },
        {
            "discussion_title": "Java O(n) DP Solution",
            "discussion_vote": "26",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/super-washing-machines/discuss/99188/Java-O(n)-DP-Solution"
        },
        {
            "discussion_title": "Easy understand solution O(n) time and O(1) space",
            "discussion_vote": "16",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/super-washing-machines/discuss/99187/Easy-understand-solution-O(n)-time-and-O(1)-space"
        }
    ],
    "518": [
        {
            "discussion_title": "Knapsack problem - Java solution with thinking process O(nm) Time and O(m) Space",
            "discussion_vote": "149",
            "discussion_views": "23.0K",
            "discussion_link": "https://leetcode.com/problems/coin-change-2/discuss/99212/Knapsack-problem-Java-solution-with-thinking-process-O(nm)-Time-and-O(m)-Space"
        },
        {
            "discussion_title": "Video explaining how dynamic programming works with the Coin Change problem",
            "discussion_vote": "64",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/coin-change-2/discuss/99222/Video-explaining-how-dynamic-programming-works-with-the-Coin-Change-problem"
        },
        {
            "discussion_title": "Logical Thinking with Clear Java Code",
            "discussion_vote": "28",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/coin-change-2/discuss/141076/Logical-Thinking-with-Clear-Java-Code"
        },
        {
            "discussion_title": "python O(n) space dp solution",
            "discussion_vote": "22",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/coin-change-2/discuss/99210/python-O(n)-space-dp-solution"
        },
        {
            "discussion_title": "C# - DFS with memorization - of course DP is better",
            "discussion_vote": "11",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/coin-change-2/discuss/99239/C-DFS-with-memorization-of-course-DP-is-better"
        }
    ],
    "519": [
        {
            "discussion_title": "Java AC Solution, call Least times of Random.nextInt() function",
            "discussion_vote": "12",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/random-flip-matrix/discuss/154053/Java-AC-Solution-call-Least-times-of-Random.nextInt()-function"
        },
        {
            "discussion_title": "Step By Step Algorithm Explanation",
            "discussion_vote": "6",
            "discussion_views": "620",
            "discussion_link": "https://leetcode.com/problems/random-flip-matrix/discuss/155341/Step-By-Step-Algorithm-Explanation"
        },
        {
            "discussion_title": "Python solution based on random shuffle with explanation",
            "discussion_vote": "4",
            "discussion_views": "309",
            "discussion_link": "https://leetcode.com/problems/random-flip-matrix/discuss/154429/Python-solution-based-on-random-shuffle-with-explanation"
        },
        {
            "discussion_title": "Shuffle",
            "discussion_vote": "3",
            "discussion_views": "637",
            "discussion_link": "https://leetcode.com/problems/random-flip-matrix/discuss/154156/Shuffle"
        },
        {
            "discussion_title": "c++ solution",
            "discussion_vote": "2",
            "discussion_views": "138",
            "discussion_link": "https://leetcode.com/problems/random-flip-matrix/discuss/177809/c%2B%2B-solution"
        }
    ],
    "520": [
        {
            "discussion_title": "3 Lines",
            "discussion_vote": "73",
            "discussion_views": "18.3K",
            "discussion_link": "https://leetcode.com/problems/detect-capital/discuss/99248/3-Lines"
        },
        {
            "discussion_title": "Python has useful methods...",
            "discussion_vote": "65",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/detect-capital/discuss/99249/Python-has-useful-methods..."
        },
        {
            "discussion_title": "Java 1-Liner",
            "discussion_vote": "41",
            "discussion_views": "14.1K",
            "discussion_link": "https://leetcode.com/problems/detect-capital/discuss/99298/Java-1-Liner"
        },
        {
            "discussion_title": "Simple Java Solution O(n) time O(1) space",
            "discussion_vote": "26",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/detect-capital/discuss/99274/Simple-Java-Solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Java short solution using built-in String methods",
            "discussion_vote": "21",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/detect-capital/discuss/99279/Java-short-solution-using-built-in-String-methods"
        }
    ],
    "521": [
        {
            "discussion_title": "I feel this problem is just perfect for April Fools' day",
            "discussion_vote": "197",
            "discussion_views": "25.7K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-i/discuss/99410/I-feel-this-problem-is-just-perfect-for-April-Fools'-day"
        },
        {
            "discussion_title": "Java 1-liner",
            "discussion_vote": "27",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-i/discuss/99409/Java-1-liner"
        },
        {
            "discussion_title": "Python, Simple Explanation",
            "discussion_vote": "14",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-i/discuss/99403/Python-Simple-Explanation"
        },
        {
            "discussion_title": "This is a silly question",
            "discussion_vote": "5",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-i/discuss/99405/This-is-a-silly-question"
        },
        {
            "discussion_title": "This is a boring word game",
            "discussion_vote": "3",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-i/discuss/99411/This-is-a-boring-word-game"
        }
    ],
    "522": [
        {
            "discussion_title": "Python, Simple Explanation",
            "discussion_vote": "31",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/discuss/99453/Python-Simple-Explanation"
        },
        {
            "discussion_title": "Java(15ms) - Sort + check subsequence",
            "discussion_vote": "30",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/discuss/99443/Java(15ms)-Sort-%2B-check-subsequence"
        },
        {
            "discussion_title": "Java Hashing Solution",
            "discussion_vote": "14",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/discuss/99449/Java-Hashing-Solution"
        },
        {
            "discussion_title": "hashmap + sort solution, c++",
            "discussion_vote": "11",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/discuss/99498/hashmap-%2B-sort-solution-c%2B%2B"
        },
        {
            "discussion_title": "JAVA 13 lines 5ms beats 100% with explaination",
            "discussion_vote": "5",
            "discussion_views": "549",
            "discussion_link": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/discuss/144926/JAVA-13-lines-5ms-beats-100-with-explaination"
        }
    ],
    "523": [
        {
            "discussion_title": "Java O(n) time O(k) space",
            "discussion_vote": "245",
            "discussion_views": "41.4K",
            "discussion_link": "https://leetcode.com/problems/continuous-subarray-sum/discuss/99499/Java-O(n)-time-O(k)-space"
        },
        {
            "discussion_title": "Need to pay attention to a lot of corner cases...",
            "discussion_vote": "34",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/continuous-subarray-sum/discuss/99503/Need-to-pay-attention-to-a-lot-of-corner-cases..."
        },
        {
            "discussion_title": "Concise C++ solution, use set instead of map",
            "discussion_vote": "31",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/continuous-subarray-sum/discuss/99506/Concise-C%2B%2B-solution-use-set-instead-of-map"
        },
        {
            "discussion_title": "Share my O(n) C++ accumulation-modulo solution with thinking process and explanation",
            "discussion_vote": "26",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/continuous-subarray-sum/discuss/99545/Share-my-O(n)-C%2B%2B-accumulation-modulo-solution-with-thinking-process-and-explanation"
        },
        {
            "discussion_title": "Math behind the solutions",
            "discussion_vote": "15",
            "discussion_views": "762",
            "discussion_link": "https://leetcode.com/problems/continuous-subarray-sum/discuss/150330/Math-behind-the-solutions"
        }
    ],
    "524": [
        {
            "discussion_title": "Short Java Solutions - Sorting Dictionary and Without Sorting",
            "discussion_vote": "56",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/discuss/99588/Short-Java-Solutions-Sorting-Dictionary-and-Without-Sorting"
        },
        {
            "discussion_title": "Short Python solutions",
            "discussion_vote": "31",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/discuss/99590/Short-Python-solutions"
        },
        {
            "discussion_title": "Python Simple (Two pointer)",
            "discussion_vote": "19",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/discuss/99583/Python-Simple-(Two-pointer)"
        },
        {
            "discussion_title": "10 lines solutions for c++",
            "discussion_vote": "11",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/discuss/99585/10-lines-solutions-for-c%2B%2B"
        },
        {
            "discussion_title": "Easy Java Solution, isSubSequence",
            "discussion_vote": "6",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/discuss/99597/Easy-Java-Solution-isSubSequence"
        }
    ],
    "525": [
        {
            "discussion_title": "Easy Java O(n) Solution, PreSum + HashMap",
            "discussion_vote": "139",
            "discussion_views": "21.1K",
            "discussion_link": "https://leetcode.com/problems/contiguous-array/discuss/99646/Easy-Java-O(n)-Solution-PreSum-%2B-HashMap"
        },
        {
            "discussion_title": "Python O(n) Solution with Visual Explanation",
            "discussion_vote": "110",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/contiguous-array/discuss/99655/Python-O(n)-Solution-with-Visual-Explanation"
        },
        {
            "discussion_title": "One pass,use a HashMap to record 0-1 count difference",
            "discussion_vote": "42",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/contiguous-array/discuss/99652/One-passuse-a-HashMap-to-record-0-1-count-difference"
        },
        {
            "discussion_title": "Python and Java with little tricks (incl. a oneliner :-)",
            "discussion_vote": "16",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/contiguous-array/discuss/99658/Python-and-Java-with-little-tricks-(incl.-a-oneliner-%3A-)"
        },
        {
            "discussion_title": "Share my DP&Map solution, one pass",
            "discussion_vote": "10",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/contiguous-array/discuss/99688/Share-my-DPandMap-solution-one-pass"
        }
    ],
    "526": [
        {
            "discussion_title": "Java Solution, Backtracking",
            "discussion_vote": "70",
            "discussion_views": "18.9K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement/discuss/99707/Java-Solution-Backtracking"
        },
        {
            "discussion_title": "Java 6ms beats 98% back tracking (swap) starting from the back",
            "discussion_vote": "36",
            "discussion_views": "5.7K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement/discuss/99711/Java-6ms-beats-98-back-tracking-(swap)-starting-from-the-back"
        },
        {
            "discussion_title": "My C++ elegant solution with back-tracking",
            "discussion_vote": "20",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement/discuss/99714/My-C%2B%2B-elegant-solution-with-back-tracking"
        },
        {
            "discussion_title": "Python recursion + DP 66ms",
            "discussion_vote": "17",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement/discuss/99717/Python-recursion-%2B-DP-66ms"
        },
        {
            "discussion_title": "Easy Python, ~230ms",
            "discussion_vote": "16",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement/discuss/99738/Easy-Python-~230ms"
        }
    ],
    "528": [
        {
            "discussion_title": "Please someone explain this question?",
            "discussion_vote": "50",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-weight/discuss/154370/Please-someone-explain-this-question"
        },
        {
            "discussion_title": "Java accumulated freq sum & binary search",
            "discussion_vote": "33",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-weight/discuss/154044/Java-accumulated-freq-sum-and-binary-search"
        },
        {
            "discussion_title": "JAVA 8 lines TreeMap",
            "discussion_vote": "17",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-weight/discuss/154024/JAVA-8-lines-TreeMap"
        },
        {
            "discussion_title": "Very easy solution based on uniform sampling with explanation",
            "discussion_vote": "13",
            "discussion_views": "977",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-weight/discuss/154432/Very-easy-solution-based-on-uniform-sampling-with-explanation"
        },
        {
            "discussion_title": "C++ concise binary search solution",
            "discussion_vote": "8",
            "discussion_views": "788",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-weight/discuss/154772/C%2B%2B-concise-binary-search-solution"
        }
    ],
    "529": [
        {
            "discussion_title": "Java Solution, DFS + BFS",
            "discussion_vote": "59",
            "discussion_views": "15.3K",
            "discussion_link": "https://leetcode.com/problems/minesweeper/discuss/99826/Java-Solution-DFS-%2B-BFS"
        },
        {
            "discussion_title": "Straight forward Java solution",
            "discussion_vote": "14",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/minesweeper/discuss/99841/Straight-forward-Java-solution"
        },
        {
            "discussion_title": "10 line python solution",
            "discussion_vote": "8",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/minesweeper/discuss/99897/10-line-python-solution"
        },
        {
            "discussion_title": "C++ DFS solution, easy to understand",
            "discussion_vote": "8",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/minesweeper/discuss/99899/C%2B%2B-DFS-solution-easy-to-understand"
        },
        {
            "discussion_title": "Simple Python (DFS)",
            "discussion_vote": "5",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/minesweeper/discuss/99832/Simple-Python-(DFS)"
        }
    ],
    "530": [
        {
            "discussion_title": "Two Solutions, in-order traversal and a more general way using TreeSet",
            "discussion_vote": "96",
            "discussion_views": "24.9K",
            "discussion_link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/discuss/99905/Two-Solutions-in-order-traversal-and-a-more-general-way-using-TreeSet"
        },
        {
            "discussion_title": "Java O(n) Time Inorder Traversal Solution",
            "discussion_vote": "22",
            "discussion_views": "10.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/discuss/99941/Java-O(n)-Time-Inorder-Traversal-Solution"
        },
        {
            "discussion_title": "C++ 7 lines, O(n) run-time O(h) memory",
            "discussion_vote": "21",
            "discussion_views": "8.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/discuss/99938/C%2B%2B-7-lines-O(n)-run-time-O(h)-memory"
        },
        {
            "discussion_title": "Python Inorder Solution",
            "discussion_vote": "14",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/discuss/99926/Python-Inorder-Solution"
        },
        {
            "discussion_title": "Java No In-order Traverse Solution,  just pass upper bound and lower bound",
            "discussion_vote": "12",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/discuss/99918/Java-No-In-order-Traverse-Solution-just-pass-upper-bound-and-lower-bound"
        }
    ],
    "532": [
        {
            "discussion_title": "Java O(n) solution - one Hashmap, easy to understand",
            "discussion_vote": "137",
            "discussion_views": "28.5K",
            "discussion_link": "https://leetcode.com/problems/k-diff-pairs-in-an-array/discuss/100098/Java-O(n)-solution-one-Hashmap-easy-to-understand"
        },
        {
            "discussion_title": "1-liner in Python, O(n) time",
            "discussion_vote": "33",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/k-diff-pairs-in-an-array/discuss/100116/1-liner-in-Python-O(n)-time"
        },
        {
            "discussion_title": "Two-pointer Approach",
            "discussion_vote": "29",
            "discussion_views": "15.2K",
            "discussion_link": "https://leetcode.com/problems/k-diff-pairs-in-an-array/discuss/100104/Two-pointer-Approach"
        },
        {
            "discussion_title": "Easy Understood Python Solution",
            "discussion_vote": "28",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/k-diff-pairs-in-an-array/discuss/100135/Easy-Understood-Python-Solution"
        },
        {
            "discussion_title": "[C++] [Java] Clean Code with Explanation [set] [map]",
            "discussion_vote": "17",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/k-diff-pairs-in-an-array/discuss/100151/C%2B%2B-Java-Clean-Code-with-Explanation-set-map"
        }
    ],
    "537": [
        {
            "discussion_title": "c++ using stringstream",
            "discussion_vote": "44",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/complex-number-multiplication/discuss/100440/c%2B%2B-using-stringstream"
        },
        {
            "discussion_title": "Java 3-liner",
            "discussion_vote": "26",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/complex-number-multiplication/discuss/100430/Java-3-liner"
        },
        {
            "discussion_title": "Java - (a1+b1)*(a2+b2) = (a1a2 + b1b2 + (a1b2+b1a2))",
            "discussion_vote": "23",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/complex-number-multiplication/discuss/100431/Java-(a1%2Bb1)*(a2%2Bb2)-(a1a2-%2B-b1b2-%2B-(a1b2%2Bb1a2))"
        },
        {
            "discussion_title": "python simple 3 lines solution",
            "discussion_vote": "19",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/complex-number-multiplication/discuss/100500/python-simple-3-lines-solution"
        },
        {
            "discussion_title": "2 lines Python",
            "discussion_vote": "6",
            "discussion_views": "723",
            "discussion_link": "https://leetcode.com/problems/complex-number-multiplication/discuss/100493/2-lines-Python"
        }
    ],
    "538": [
        {
            "discussion_title": "Java Recursive O(n) time",
            "discussion_vote": "69",
            "discussion_views": "22.3K",
            "discussion_link": "https://leetcode.com/problems/convert-bst-to-greater-tree/discuss/100506/Java-Recursive-O(n)-time"
        },
        {
            "discussion_title": "c++ solution beats 100%",
            "discussion_vote": "24",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/convert-bst-to-greater-tree/discuss/100610/c%2B%2B-solution-beats-100"
        },
        {
            "discussion_title": "Java Solution, 7 liner, reversed traversal",
            "discussion_vote": "14",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/convert-bst-to-greater-tree/discuss/100543/Java-Solution-7-liner-reversed-traversal"
        },
        {
            "discussion_title": "Java Three O(n) Methods: Recursive, Iterative, and Morris Traversal",
            "discussion_vote": "12",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/convert-bst-to-greater-tree/discuss/100516/Java-Three-O(n)-Methods%3A-Recursive-Iterative-and-Morris-Traversal"
        },
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "8",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/convert-bst-to-greater-tree/discuss/100555/Python-Simple-with-Explanation"
        }
    ],
    "539": [
        {
            "discussion_title": "Verbose Java Solution, Bucket",
            "discussion_vote": "54",
            "discussion_views": "11.3K",
            "discussion_link": "https://leetcode.com/problems/minimum-time-difference/discuss/100640/Verbose-Java-Solution-Bucket"
        },
        {
            "discussion_title": "Java 10 liner solution. Simplest so far",
            "discussion_vote": "19",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/minimum-time-difference/discuss/100636/Java-10-liner-solution.-Simplest-so-far"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "11",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/minimum-time-difference/discuss/100637/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "[C++] Clean Code",
            "discussion_vote": "10",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-time-difference/discuss/100660/C%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Java sorting with a sentinel node",
            "discussion_vote": "9",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-time-difference/discuss/100643/Java-sorting-with-a-sentinel-node"
        }
    ],
    "540": [
        {
            "discussion_title": "Java Binary Search, short (7l), O(log(n)) w/ explanations",
            "discussion_vote": "101",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/single-element-in-a-sorted-array/discuss/100754/Java-Binary-Search-short-(7l)-O(log(n))-w-explanations"
        },
        {
            "discussion_title": "Java Binary Search O(log(n)) Shorter Than Others",
            "discussion_vote": "60",
            "discussion_views": "17.4K",
            "discussion_link": "https://leetcode.com/problems/single-element-in-a-sorted-array/discuss/100759/Java-Binary-Search-O(log(n))-Shorter-Than-Others"
        },
        {
            "discussion_title": "Short, compare nums[i] with nums[i^1]",
            "discussion_vote": "28",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/single-element-in-a-sorted-array/discuss/100732/Short-compare-numsi-with-numsi1"
        },
        {
            "discussion_title": "Java Code by using binary search O(log(n))",
            "discussion_vote": "16",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/single-element-in-a-sorted-array/discuss/100763/Java-Code-by-using-binary-search-O(log(n))"
        },
        {
            "discussion_title": "C++ binary search",
            "discussion_vote": "8",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/single-element-in-a-sorted-array/discuss/100766/C%2B%2B-binary-search"
        }
    ],
    "541": [
        {
            "discussion_title": "Java Concise Solution",
            "discussion_vote": "62",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/reverse-string-ii/discuss/100866/Java-Concise-Solution"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "26",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/reverse-string-ii/discuss/100890/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "[C++][Java] Clean Code",
            "discussion_vote": "21",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-string-ii/discuss/100887/C%2B%2BJava-Clean-Code"
        },
        {
            "discussion_title": "1 line simple recursive Python",
            "discussion_vote": "17",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-string-ii/discuss/100870/1-line-simple-recursive-Python"
        },
        {
            "discussion_title": "One line C++",
            "discussion_vote": "12",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/reverse-string-ii/discuss/100893/One-line-C%2B%2B"
        }
    ],
    "542": [
        {
            "discussion_title": "Java Solution, BFS",
            "discussion_vote": "81",
            "discussion_views": "21.8K",
            "discussion_link": "https://leetcode.com/problems/01-matrix/discuss/101021/Java-Solution-BFS"
        },
        {
            "discussion_title": "Short solution - Each path needs at most one turn",
            "discussion_vote": "21",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/01-matrix/discuss/101102/Short-solution-Each-path-needs-at-most-one-turn"
        },
        {
            "discussion_title": "Java 33ms solution with two sweeps in O(n)",
            "discussion_vote": "19",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/01-matrix/discuss/101039/Java-33ms-solution-with-two-sweeps-in-O(n)"
        },
        {
            "discussion_title": "Simple Java solution beat 99% (use DP)",
            "discussion_vote": "17",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/01-matrix/discuss/101051/Simple-Java-solution-beat-99-(use-DP)"
        },
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "11",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/01-matrix/discuss/101080/Python-Simple-with-Explanation"
        }
    ],
    "543": [
        {
            "discussion_title": "Java Solution, MaxDepth",
            "discussion_vote": "109",
            "discussion_views": "42.3K",
            "discussion_link": "https://leetcode.com/problems/diameter-of-binary-tree/discuss/101132/Java-Solution-MaxDepth"
        },
        {
            "discussion_title": "Simple Python",
            "discussion_vote": "41",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/diameter-of-binary-tree/discuss/101145/Simple-Python"
        },
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "21",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/diameter-of-binary-tree/discuss/101118/Python-Simple-with-Explanation"
        },
        {
            "discussion_title": "[543. Diameter of Binary Tree] C++_Recursive_with brief explanation",
            "discussion_vote": "19",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/diameter-of-binary-tree/discuss/101115/543.-Diameter-of-Binary-Tree-C%2B%2B_Recursive_with-brief-explanation"
        },
        {
            "discussion_title": "Java easy to understand solution",
            "discussion_vote": "18",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/diameter-of-binary-tree/discuss/101120/Java-easy-to-understand-solution"
        }
    ],
    "546": [
        {
            "discussion_title": "Java top-down and bottom-up DP solutions",
            "discussion_vote": "189",
            "discussion_views": "15.2K",
            "discussion_link": "https://leetcode.com/problems/remove-boxes/discuss/101310/Java-top-down-and-bottom-up-DP-solutions"
        },
        {
            "discussion_title": "Memoization DFS C++",
            "discussion_vote": "43",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/remove-boxes/discuss/101312/Memoization-DFS-C%2B%2B"
        },
        {
            "discussion_title": "Java DP + Memorization 60ms",
            "discussion_vote": "14",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/remove-boxes/discuss/101325/Java-DP-%2B-Memorization-60ms"
        },
        {
            "discussion_title": "Python, Fast DP with Explanation",
            "discussion_vote": "10",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/remove-boxes/discuss/101311/Python-Fast-DP-with-Explanation"
        },
        {
            "discussion_title": "C++ 29ms dp solution!",
            "discussion_vote": "5",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/remove-boxes/discuss/101314/C%2B%2B-29ms-dp-solution!"
        }
    ],
    "547": [
        {
            "discussion_title": "Neat DFS java solution",
            "discussion_vote": "74",
            "discussion_views": "21.5K",
            "discussion_link": "https://leetcode.com/problems/friend-circles/discuss/101338/Neat-DFS-java-solution"
        },
        {
            "discussion_title": "Java solution, Union Find",
            "discussion_vote": "58",
            "discussion_views": "16.9K",
            "discussion_link": "https://leetcode.com/problems/friend-circles/discuss/101336/Java-solution-Union-Find"
        },
        {
            "discussion_title": "Python, Simple Explanation",
            "discussion_vote": "25",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/friend-circles/discuss/101349/Python-Simple-Explanation"
        },
        {
            "discussion_title": "Oneliners :-P",
            "discussion_vote": "24",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/friend-circles/discuss/101340/Oneliners-%3A-P"
        },
        {
            "discussion_title": "[C++] Clean Code - DFS|UnionFind",
            "discussion_vote": "20",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/friend-circles/discuss/101354/C%2B%2B-Clean-Code-DFSorUnionFind"
        }
    ],
    "551": [
        {
            "discussion_title": "Java 1-liner",
            "discussion_vote": "39",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-i/discuss/101553/Java-1-liner"
        },
        {
            "discussion_title": "C++ very simple solution",
            "discussion_vote": "27",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-i/discuss/101556/C%2B%2B-very-simple-solution"
        },
        {
            "discussion_title": "Java Simple without Regex 3 lines",
            "discussion_vote": "18",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-i/discuss/101552/Java-Simple-without-Regex-3-lines"
        },
        {
            "discussion_title": "Java O(N) solution - Accepted",
            "discussion_vote": "12",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-i/discuss/101599/Java-O(N)-solution-Accepted"
        },
        {
            "discussion_title": "Python 1 liner without regex",
            "discussion_vote": "8",
            "discussion_views": "930",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-i/discuss/101613/Python-1-liner-without-regex"
        }
    ],
    "552": [
        {
            "discussion_title": "Share my O(n) C++ DP solution with thinking process and explanation",
            "discussion_vote": "151",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-ii/discuss/101643/Share-my-O(n)-C%2B%2B-DP-solution-with-thinking-process-and-explanation"
        },
        {
            "discussion_title": "Improving the runtime from O(n) to O(log n)",
            "discussion_vote": "79",
            "discussion_views": "10.4K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-ii/discuss/101633/Improving-the-runtime-from-O(n)-to-O(log-n)"
        },
        {
            "discussion_title": "Simple Java O(n) solution",
            "discussion_vote": "29",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-ii/discuss/101638/Simple-Java-O(n)-solution"
        },
        {
            "discussion_title": "Python DP with explanation",
            "discussion_vote": "28",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-ii/discuss/101634/Python-DP-with-explanation"
        },
        {
            "discussion_title": "O(n) time O(1) space solution",
            "discussion_vote": "9",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/student-attendance-record-ii/discuss/101671/O(n)-time-O(1)-space-solution"
        }
    ],
    "553": [
        {
            "discussion_title": "Easy to understand simple O(n) solution with explanation",
            "discussion_vote": "66",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/optimal-division/discuss/101687/Easy-to-understand-simple-O(n)-solution-with-explanation"
        },
        {
            "discussion_title": "Java Solution, Backtracking",
            "discussion_vote": "29",
            "discussion_views": "6.3K",
            "discussion_link": "https://leetcode.com/problems/optimal-division/discuss/101697/Java-Solution-Backtracking"
        },
        {
            "discussion_title": "Brute force with memory in case of your interviewer forbid tricky solution",
            "discussion_vote": "14",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/optimal-division/discuss/101684/Brute-force-with-memory-in-case-of-your-interviewer-forbid-tricky-solution"
        },
        {
            "discussion_title": "O(n) very easy Java solution.",
            "discussion_vote": "11",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/optimal-division/discuss/101683/O(n)-very-easy-Java-solution."
        },
        {
            "discussion_title": "Python, Straightforward with Explanation (Insightful Approach)",
            "discussion_vote": "9",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/optimal-division/discuss/101701/Python-Straightforward-with-Explanation-(Insightful-Approach)"
        }
    ],
    "554": [
        {
            "discussion_title": "I DON'T THINK THERE IS A BETTER PERSON THAN ME TO ANSWER THIS QUESTION",
            "discussion_vote": "248",
            "discussion_views": "15.8K",
            "discussion_link": "https://leetcode.com/problems/brick-wall/discuss/101728/I-DON'T-THINK-THERE-IS-A-BETTER-PERSON-THAN-ME-TO-ANSWER-THIS-QUESTION"
        },
        {
            "discussion_title": "C++ 6 lines (hash map)",
            "discussion_vote": "16",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/brick-wall/discuss/101738/C%2B%2B-6-lines-(hash-map)"
        },
        {
            "discussion_title": "Clear Python Solution",
            "discussion_vote": "10",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/brick-wall/discuss/101726/Clear-Python-Solution"
        },
        {
            "discussion_title": "Neat Java Solution O(n) using hashmap",
            "discussion_vote": "7",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/brick-wall/discuss/101752/Neat-Java-Solution-O(n)-using-hashmap"
        },
        {
            "discussion_title": "Verbose Java Solution, PriorityQueue",
            "discussion_vote": "6",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/brick-wall/discuss/101794/Verbose-Java-Solution-PriorityQueue"
        }
    ],
    "556": [
        {
            "discussion_title": "Simple Java solution (4ms) with explanation.",
            "discussion_vote": "58",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-iii/discuss/101824/Simple-Java-solution-(4ms)-with-explanation."
        },
        {
            "discussion_title": "C++ 4 lines (next_permutation)",
            "discussion_vote": "16",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-iii/discuss/101815/C%2B%2B-4-lines-(next_permutation)"
        },
        {
            "discussion_title": "[C++] Solution with explanation",
            "discussion_vote": "7",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-iii/discuss/101825/C%2B%2B-Solution-with-explanation"
        },
        {
            "discussion_title": "Java Solution like Next Permutation Problem O(n)",
            "discussion_vote": "5",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-iii/discuss/101843/Java-Solution-like-Next-Permutation-Problem-O(n)"
        },
        {
            "discussion_title": "Easy Python3 beats 100%",
            "discussion_vote": "4",
            "discussion_views": "399",
            "discussion_link": "https://leetcode.com/problems/next-greater-element-iii/discuss/117208/Easy-Python3-beats-100"
        }
    ],
    "557": [
        {
            "discussion_title": "1 line Ruby / Python",
            "discussion_vote": "32",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string-iii/discuss/101909/1-line-Ruby-Python"
        },
        {
            "discussion_title": "short java code without explanation",
            "discussion_vote": "22",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string-iii/discuss/101905/short-java-code-without-explanation"
        },
        {
            "discussion_title": "[C++] [Java] Clean Code",
            "discussion_vote": "19",
            "discussion_views": "16.6K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string-iii/discuss/101906/C%2B%2B-Java-Clean-Code"
        },
        {
            "discussion_title": "Easiest Java Solution (9ms) - Similar to Reverse Words in a String II",
            "discussion_vote": "17",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string-iii/discuss/101963/Easiest-Java-Solution-(9ms)-Similar-to-Reverse-Words-in-a-String-II"
        },
        {
            "discussion_title": "C++ Solution",
            "discussion_vote": "12",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/reverse-words-in-a-string-iii/discuss/102105/C%2B%2B-Solution"
        }
    ],
    "558": [
        {
            "discussion_title": "Python simple & short & readable AC solution",
            "discussion_vote": "7",
            "discussion_views": "503",
            "discussion_link": "https://leetcode.com/problems/quad-tree-intersection/discuss/151802/Python-simple-and-short-and-readable-AC-solution"
        },
        {
            "discussion_title": "[FIXED] Incorrect test cases",
            "discussion_vote": "5",
            "discussion_views": "627",
            "discussion_link": "https://leetcode.com/problems/quad-tree-intersection/discuss/148732/FIXED-Incorrect-test-cases"
        },
        {
            "discussion_title": "C++ 10 line beat 100%",
            "discussion_vote": "4",
            "discussion_views": "293",
            "discussion_link": "https://leetcode.com/problems/quad-tree-intersection/discuss/152730/C%2B%2B-10-line-beat-100"
        },
        {
            "discussion_title": "Java concise code beat 100%",
            "discussion_vote": "3",
            "discussion_views": "537",
            "discussion_link": "https://leetcode.com/problems/quad-tree-intersection/discuss/157532/Java-concise-code-beat-100"
        },
        {
            "discussion_title": "Python solution to a badly worded question",
            "discussion_vote": "3",
            "discussion_views": "215",
            "discussion_link": "https://leetcode.com/problems/quad-tree-intersection/discuss/153964/Python-solution-to-a-badly-worded-question"
        }
    ],
    "559": [
        {
            "discussion_title": "[Solution] Python, C++, Simple, with explanation",
            "discussion_vote": "9",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/discuss/151804/Solution-Python-C%2B%2B-Simple-with-explanation"
        },
        {
            "discussion_title": "Java Top down DFS solutions",
            "discussion_vote": "7",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/discuss/148544/Java-Top-down-DFS-solutions"
        },
        {
            "discussion_title": "Java BFS Iterative Solution",
            "discussion_vote": "5",
            "discussion_views": "142",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/discuss/183060/Java-BFS-Iterative-Solution"
        },
        {
            "discussion_title": "DFS & BFS solutions in C++.",
            "discussion_vote": "5",
            "discussion_views": "431",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/discuss/167010/DFS-and-BFS-solutions-in-C%2B%2B."
        },
        {
            "discussion_title": "Java solution with explain, same logic with Maximum Depth of binary tree",
            "discussion_vote": "5",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/discuss/152659/Java-solution-with-explain-same-logic-with-Maximum-Depth-of-binary-tree"
        }
    ],
    "560": [
        {
            "discussion_title": "Java Solution, PreSum + HashMap",
            "discussion_vote": "168",
            "discussion_views": "28.9K",
            "discussion_link": "https://leetcode.com/problems/subarray-sum-equals-k/discuss/102106/Java-Solution-PreSum-%2B-HashMap"
        },
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "36",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/subarray-sum-equals-k/discuss/102111/Python-Simple-with-Explanation"
        },
        {
            "discussion_title": "C++ prefix sum + map",
            "discussion_vote": "17",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/subarray-sum-equals-k/discuss/102121/C%2B%2B-prefix-sum-%2B-map"
        },
        {
            "discussion_title": "Three Approaches With Explanation",
            "discussion_vote": "13",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/subarray-sum-equals-k/discuss/134689/Three-Approaches-With-Explanation"
        },
        {
            "discussion_title": "Super Simple Python",
            "discussion_vote": "12",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/subarray-sum-equals-k/discuss/102119/Super-Simple-Python"
        }
    ],
    "561": [
        {
            "discussion_title": "Java Solution, Sorting. And rough proof of algorithm.",
            "discussion_vote": "184",
            "discussion_views": "40.2K",
            "discussion_link": "https://leetcode.com/problems/array-partition-i/discuss/102170/Java-Solution-Sorting.-And-rough-proof-of-algorithm."
        },
        {
            "discussion_title": "Please explain: The question doesn't make sense.",
            "discussion_vote": "91",
            "discussion_views": "21.1K",
            "discussion_link": "https://leetcode.com/problems/array-partition-i/discuss/102175/Please-explain%3A-The-question-doesn't-make-sense."
        },
        {
            "discussion_title": "Java O(n) beats 100%",
            "discussion_vote": "39",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/array-partition-i/discuss/102180/Java-O(n)-beats-100"
        },
        {
            "discussion_title": "c++ code O(n),beats 100%",
            "discussion_vote": "37",
            "discussion_views": "21.8K",
            "discussion_link": "https://leetcode.com/problems/array-partition-i/discuss/102160/c%2B%2B-code-O(n)beats-100"
        },
        {
            "discussion_title": "Python 1 line (sorting is accepted)",
            "discussion_vote": "31",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/array-partition-i/discuss/102161/Python-1-line-(sorting-is-accepted)"
        }
    ],
    "563": [
        {
            "discussion_title": "Java Solution, post-order traversal",
            "discussion_vote": "29",
            "discussion_views": "12.3K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-tilt/discuss/102334/Java-Solution-post-order-traversal"
        },
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "21",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-tilt/discuss/102321/Python-Simple-with-Explanation"
        },
        {
            "discussion_title": "Simple Java Solution  -- without Global Variable",
            "discussion_vote": "16",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-tilt/discuss/102327/Simple-Java-Solution-without-Global-Variable"
        },
        {
            "discussion_title": "Python straightforward solution",
            "discussion_vote": "10",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-tilt/discuss/102369/Python-straightforward-solution"
        },
        {
            "discussion_title": "Java Solution, no globle varible, Easy and clean",
            "discussion_vote": "8",
            "discussion_views": "978",
            "discussion_link": "https://leetcode.com/problems/binary-tree-tilt/discuss/102352/Java-Solution-no-globle-varible-Easy-and-clean"
        }
    ],
    "564": [
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "66",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/find-the-closest-palindrome/discuss/102391/Python-Simple-with-Explanation"
        },
        {
            "discussion_title": "Java solution with full explaination",
            "discussion_vote": "25",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/find-the-closest-palindrome/discuss/102390/Java-solution-with-full-explaination"
        },
        {
            "discussion_title": "Java solution with detailed proof",
            "discussion_vote": "18",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/find-the-closest-palindrome/discuss/102389/Java-solution-with-detailed-proof"
        },
        {
            "discussion_title": "C++ short solution, only need to compare 5 numbers",
            "discussion_vote": "16",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/find-the-closest-palindrome/discuss/102396/C%2B%2B-short-solution-only-need-to-compare-5-numbers"
        },
        {
            "discussion_title": "Concise Java Solution",
            "discussion_vote": "11",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/find-the-closest-palindrome/discuss/102400/Concise-Java-Solution"
        }
    ],
    "565": [
        {
            "discussion_title": "[C++] [Java] Clean Code - O(N)",
            "discussion_vote": "49",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/array-nesting/discuss/102432/C%2B%2B-Java-Clean-Code-O(N)"
        },
        {
            "discussion_title": "This is actually DFS",
            "discussion_vote": "16",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/array-nesting/discuss/102472/This-is-actually-DFS"
        },
        {
            "discussion_title": "Python solution",
            "discussion_vote": "11",
            "discussion_views": "563",
            "discussion_link": "https://leetcode.com/problems/array-nesting/discuss/102473/Python-solution"
        },
        {
            "discussion_title": "Short Python",
            "discussion_vote": "11",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/array-nesting/discuss/102449/Short-Python"
        },
        {
            "discussion_title": "Java O(n) Time O(1) Space",
            "discussion_vote": "7",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/array-nesting/discuss/102443/Java-O(n)-Time-O(1)-Space"
        }
    ],
    "566": [
        {
            "discussion_title": "Java Concise O(nm) time",
            "discussion_vote": "80",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/reshape-the-matrix/discuss/102491/Java-Concise-O(nm)-time"
        },
        {
            "discussion_title": "One loop",
            "discussion_vote": "49",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/reshape-the-matrix/discuss/102513/One-loop"
        },
        {
            "discussion_title": "Python Solutions",
            "discussion_vote": "24",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/reshape-the-matrix/discuss/102500/Python-Solutions"
        },
        {
            "discussion_title": "Easy Java Solution",
            "discussion_vote": "17",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/reshape-the-matrix/discuss/102511/Easy-Java-Solution"
        },
        {
            "discussion_title": "C solution",
            "discussion_vote": "15",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/reshape-the-matrix/discuss/102563/C-solution"
        }
    ],
    "567": [
        {
            "discussion_title": "Java Solution, Sliding Window",
            "discussion_vote": "92",
            "discussion_views": "17.0K",
            "discussion_link": "https://leetcode.com/problems/permutation-in-string/discuss/102588/Java-Solution-Sliding-Window"
        },
        {
            "discussion_title": "8 lines slide window solution in Java",
            "discussion_vote": "42",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/permutation-in-string/discuss/102590/8-lines-slide-window-solution-in-Java"
        },
        {
            "discussion_title": "Python, Simple with Explanation",
            "discussion_vote": "14",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/permutation-in-string/discuss/102594/Python-Simple-with-Explanation"
        },
        {
            "discussion_title": "Sliding Window in Java, very similar to Find All Anagrams in a String",
            "discussion_vote": "10",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/permutation-in-string/discuss/102598/Sliding-Window-in-Java-very-similar-to-Find-All-Anagrams-in-a-String"
        },
        {
            "discussion_title": "Java Solution Two pointers",
            "discussion_vote": "8",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/permutation-in-string/discuss/102642/Java-Solution-Two-pointers"
        }
    ],
    "572": [
        {
            "discussion_title": "Java Solution, tree traversal",
            "discussion_vote": "82",
            "discussion_views": "28.2K",
            "discussion_link": "https://leetcode.com/problems/subtree-of-another-tree/discuss/102724/Java-Solution-tree-traversal"
        },
        {
            "discussion_title": "Easy O(n) java solution using preorder traversal",
            "discussion_vote": "41",
            "discussion_views": "13.0K",
            "discussion_link": "https://leetcode.com/problems/subtree-of-another-tree/discuss/102760/Easy-O(n)-java-solution-using-preorder-traversal"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation (O(ST) and O(S+T) approaches)",
            "discussion_vote": "37",
            "discussion_views": "8.6K",
            "discussion_link": "https://leetcode.com/problems/subtree-of-another-tree/discuss/102741/Python-Straightforward-with-Explanation-(O(ST)-and-O(S%2BT)-approaches)"
        },
        {
            "discussion_title": "Short Python by converting into strings",
            "discussion_vote": "20",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/subtree-of-another-tree/discuss/102729/Short-Python-by-converting-into-strings"
        },
        {
            "discussion_title": "Java Concise O(n+m) Time O(n+m) Space",
            "discussion_vote": "16",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/subtree-of-another-tree/discuss/102736/Java-Concise-O(n%2Bm)-Time-O(n%2Bm)-Space"
        }
    ],
    "575": [
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "40",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/distribute-candies/discuss/102868/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java Solution, 3 lines, HashSet",
            "discussion_vote": "34",
            "discussion_views": "12.9K",
            "discussion_link": "https://leetcode.com/problems/distribute-candies/discuss/102879/Java-Solution-3-lines-HashSet"
        },
        {
            "discussion_title": "C++, bitset, beats 99.60%",
            "discussion_vote": "15",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/distribute-candies/discuss/102870/C%2B%2B-bitset-beats-99.60"
        },
        {
            "discussion_title": "[C++] Clean Code - 2 Solutions: Set and Sort",
            "discussion_vote": "11",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/distribute-candies/discuss/102924/C%2B%2B-Clean-Code-2-Solutions%3A-Set-and-Sort"
        },
        {
            "discussion_title": "1-line JavaScript O(n) solution using Set",
            "discussion_vote": "9",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/distribute-candies/discuss/102866/1-line-JavaScript-O(n)-solution-using-Set"
        }
    ],
    "576": [
        {
            "discussion_title": "Java Solution, DP with space compression",
            "discussion_vote": "32",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/out-of-boundary-paths/discuss/102967/Java-Solution-DP-with-space-compression"
        },
        {
            "discussion_title": "C++ 6 lines DP O(N * m * n), 6 ms",
            "discussion_vote": "29",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/out-of-boundary-paths/discuss/102966/C%2B%2B-6-lines-DP-O(N-*-m-*-n)-6-ms"
        },
        {
            "discussion_title": "Clean Code - 8 Solutions (6 C++ & 2 java)",
            "discussion_vote": "9",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/out-of-boundary-paths/discuss/102971/Clean-Code-8-Solutions-(6-C%2B%2B-and-2-java)"
        },
        {
            "discussion_title": "Java DFS with memorization",
            "discussion_vote": "8",
            "discussion_views": "681",
            "discussion_link": "https://leetcode.com/problems/out-of-boundary-paths/discuss/119394/Java-DFS-with-memorization"
        },
        {
            "discussion_title": "Fast Python solution using NumPy",
            "discussion_vote": "6",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/out-of-boundary-paths/discuss/103001/Fast-Python-solution-using-NumPy"
        }
    ],
    "581": [
        {
            "discussion_title": "Java O(n) Time O(1) Space",
            "discussion_vote": "186",
            "discussion_views": "26.9K",
            "discussion_link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/discuss/103057/Java-O(n)-Time-O(1)-Space"
        },
        {
            "discussion_title": "Ideas behind the O(n) two-pass and one-pass solutions",
            "discussion_vote": "128",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/discuss/103066/Ideas-behind-the-O(n)-two-pass-and-one-pass-solutions"
        },
        {
            "discussion_title": "Java Solution, Sort.",
            "discussion_vote": "40",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/discuss/103070/Java-Solution-Sort."
        },
        {
            "discussion_title": "Python 2 lines Sort Solution",
            "discussion_vote": "28",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/discuss/103052/Python-2-lines-Sort-Solution"
        },
        {
            "discussion_title": "C++ O(n) solution",
            "discussion_vote": "12",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/discuss/103081/C%2B%2B-O(n)-solution"
        }
    ],
    "583": [
        {
            "discussion_title": "Java DP Solution (Longest Common Subsequence)",
            "discussion_vote": "59",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/delete-operation-for-two-strings/discuss/103214/Java-DP-Solution-(Longest-Common-Subsequence)"
        },
        {
            "discussion_title": "Java DP Solution, same as Edit Distance",
            "discussion_vote": "22",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/delete-operation-for-two-strings/discuss/103217/Java-DP-Solution-same-as-Edit-Distance"
        },
        {
            "discussion_title": "Longest Common Subsequence DP Java Solution",
            "discussion_vote": "14",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/delete-operation-for-two-strings/discuss/103259/Longest-Common-Subsequence-DP-Java-Solution"
        },
        {
            "discussion_title": "Python DP solution",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/delete-operation-for-two-strings/discuss/103246/Python-DP-solution"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/delete-operation-for-two-strings/discuss/103267/Python-Straightforward-with-Explanation"
        }
    ],
    "587": [
        {
            "discussion_title": "Java Solution, Convex Hull Algorithm - Gift wrapping aka Jarvis march",
            "discussion_vote": "22",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/erect-the-fence/discuss/103299/Java-Solution-Convex-Hull-Algorithm-Gift-wrapping-aka-Jarvis-march"
        },
        {
            "discussion_title": "Java Graham scan with adapted sorting to deal with collinear points",
            "discussion_vote": "19",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/erect-the-fence/discuss/103302/Java-Graham-scan-with-adapted-sorting-to-deal-with-collinear-points"
        },
        {
            "discussion_title": "C++ and Python easy wiki solution",
            "discussion_vote": "12",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/erect-the-fence/discuss/103306/C%2B%2B-and-Python-easy-wiki-solution"
        },
        {
            "discussion_title": "Python, AM Chain with Explanation",
            "discussion_vote": "11",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/erect-the-fence/discuss/103320/Python-AM-Chain-with-Explanation"
        },
        {
            "discussion_title": "c++ Graham Scan/Monotone Chain dealing with collinear cases",
            "discussion_vote": "5",
            "discussion_views": "942",
            "discussion_link": "https://leetcode.com/problems/erect-the-fence/discuss/103307/c%2B%2B-Graham-ScanMonotone-Chain-dealing-with-collinear-cases"
        }
    ],
    "589": [
        {
            "discussion_title": "Java Iterative and Recursive Solutions",
            "discussion_vote": "16",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/discuss/147955/Java-Iterative-and-Recursive-Solutions"
        },
        {
            "discussion_title": "Python short iterative solution beats 100% // 66 ms faster than fastest !",
            "discussion_vote": "10",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/discuss/148867/Python-short-iterative-solution-beats-100-66-ms-faster-than-fastest-!"
        },
        {
            "discussion_title": "C++ simple 10-line iterative solution, beat 100%!",
            "discussion_vote": "5",
            "discussion_views": "614",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/discuss/150297/C%2B%2B-simple-10-line-iterative-solution-beat-100!"
        },
        {
            "discussion_title": "C++ 44ms beats 100% both iterative and recursive",
            "discussion_vote": "4",
            "discussion_views": "325",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/discuss/149093/C%2B%2B-44ms-beats-100-both-iterative-and-recursive"
        },
        {
            "discussion_title": "Java Time O(N) and space O(N) recursive / iterative solution using helper method",
            "discussion_vote": "2",
            "discussion_views": "305",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/discuss/169079/Java-Time-O(N)-and-space-O(N)-recursive-iterative-solution-using-helper-method"
        }
    ],
    "590": [
        {
            "discussion_title": "Java Iterative and Recursive Solutions",
            "discussion_vote": "19",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/discuss/147959/Java-Iterative-and-Recursive-Solutions"
        },
        {
            "discussion_title": "C++ super easy 11-line solution, beats 100%!",
            "discussion_vote": "16",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/discuss/150339/C%2B%2B-super-easy-11-line-solution-beats-100!"
        },
        {
            "discussion_title": "Python iterative and recursive solution with explanation ",
            "discussion_vote": "9",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/discuss/155806/Python-iterative-and-recursive-solution-with-explanation"
        },
        {
            "discussion_title": "Python 1 Line",
            "discussion_vote": "5",
            "discussion_views": "392",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/discuss/159844/Python-1-Line"
        },
        {
            "discussion_title": "Python 6 lines BFS solution",
            "discussion_vote": "4",
            "discussion_views": "490",
            "discussion_link": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/discuss/148880/Python-6-lines-BFS-solution"
        }
    ],
    "591": [
        {
            "discussion_title": "Java Solution: Use startsWith and indexOf",
            "discussion_vote": "39",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/tag-validator/discuss/103368/Java-Solution%3A-Use-startsWith-and-indexOf"
        },
        {
            "discussion_title": "Short Python, accepted but not sure if correct",
            "discussion_vote": "18",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/tag-validator/discuss/103370/Short-Python-accepted-but-not-sure-if-correct"
        },
        {
            "discussion_title": "Java Solution, 7 lines, Regular Expression",
            "discussion_vote": "13",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/tag-validator/discuss/103364/Java-Solution-7-lines-Regular-Expression"
        },
        {
            "discussion_title": "[C++] Clean Code - Recursive Parser",
            "discussion_vote": "12",
            "discussion_views": "904",
            "discussion_link": "https://leetcode.com/problems/tag-validator/discuss/103374/C%2B%2B-Clean-Code-Recursive-Parser"
        },
        {
            "discussion_title": "Clean C++ Solution",
            "discussion_vote": "4",
            "discussion_views": "372",
            "discussion_link": "https://leetcode.com/problems/tag-validator/discuss/103373/Clean-C%2B%2B-Solution"
        }
    ],
    "592": [
        {
            "discussion_title": "Small simple C++/Java/Python",
            "discussion_vote": "39",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/fraction-addition-and-subtraction/discuss/103384/Small-simple-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "Concise Java Solution",
            "discussion_vote": "17",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/fraction-addition-and-subtraction/discuss/103388/Concise-Java-Solution"
        },
        {
            "discussion_title": "Python easy understood 2-line solution",
            "discussion_vote": "12",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/fraction-addition-and-subtraction/discuss/103387/Python-easy-understood-2-line-solution"
        },
        {
            "discussion_title": "Java Solution, Fraction Addition and GCD",
            "discussion_vote": "12",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/fraction-addition-and-subtraction/discuss/103408/Java-Solution-Fraction-Addition-and-GCD"
        },
        {
            "discussion_title": "C++ clean code",
            "discussion_vote": "5",
            "discussion_views": "476",
            "discussion_link": "https://leetcode.com/problems/fraction-addition-and-subtraction/discuss/103394/C%2B%2B-clean-code"
        }
    ],
    "593": [
        {
            "discussion_title": "C++ 3 lines (unordered_set)",
            "discussion_vote": "43",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/valid-square/discuss/103442/C%2B%2B-3-lines-(unordered_set)"
        },
        {
            "discussion_title": "Simple Java Solution - Square distances",
            "discussion_vote": "15",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/valid-square/discuss/103435/Simple-Java-Solution-Square-distances"
        },
        {
            "discussion_title": "4 Liner Java",
            "discussion_vote": "12",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/valid-square/discuss/103432/4-Liner-Java"
        },
        {
            "discussion_title": "A general solution to find combination of squares in n points in O(n^2) time",
            "discussion_vote": "6",
            "discussion_views": "840",
            "discussion_link": "https://leetcode.com/problems/valid-square/discuss/103433/A-general-solution-to-find-combination-of-squares-in-n-points-in-O(n2)-time"
        },
        {
            "discussion_title": "Share my simple Python solution",
            "discussion_vote": "5",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/valid-square/discuss/103426/Share-my-simple-Python-solution"
        }
    ],
    "594": [
        {
            "discussion_title": "Simple Java HashMap Solution",
            "discussion_vote": "41",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/longest-harmonious-subsequence/discuss/103497/Simple-Java-HashMap-Solution"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "28",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/longest-harmonious-subsequence/discuss/103534/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Three C++ Solution run time with explanation",
            "discussion_vote": "11",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/longest-harmonious-subsequence/discuss/103499/Three-C%2B%2B-Solution-run-time-with-explanation"
        },
        {
            "discussion_title": "Short Python using Counter",
            "discussion_vote": "6",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/longest-harmonious-subsequence/discuss/103496/Short-Python-using-Counter"
        },
        {
            "discussion_title": "Java Solution, HashMap",
            "discussion_vote": "5",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/longest-harmonious-subsequence/discuss/103541/Java-Solution-HashMap"
        }
    ],
    "595": [
        {
            "discussion_title": "Union and OR and the Explanation",
            "discussion_vote": "60",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/big-countries/discuss/103561/Union-and-OR-and-the-Explanation"
        },
        {
            "discussion_title": "Easy AC",
            "discussion_vote": "6",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/big-countries/discuss/103567/Easy-AC"
        },
        {
            "discussion_title": "Description and author's solution are inconsistent",
            "discussion_vote": "4",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/big-countries/discuss/103562/Description-and-author's-solution-are-inconsistent"
        },
        {
            "discussion_title": "Obvious solution: Runtime: 1724 ms, faster than 92.81% of MySQL online submissions",
            "discussion_vote": "1",
            "discussion_views": "113",
            "discussion_link": "https://leetcode.com/problems/big-countries/discuss/193247/Obvious-solution%3A-Runtime%3A-1724-ms-faster-than-92.81-of-MySQL-online-submissions"
        },
        {
            "discussion_title": "For those wondering the units",
            "discussion_vote": "1",
            "discussion_views": "361",
            "discussion_link": "https://leetcode.com/problems/big-countries/discuss/103558/For-those-wondering-the-units"
        }
    ],
    "596": [
        {
            "discussion_title": "All the same",
            "discussion_vote": "6",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/classes-more-than-5-students/discuss/103571/All-the-same"
        },
        {
            "discussion_title": "my solution",
            "discussion_vote": "5",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/classes-more-than-5-students/discuss/103575/my-solution"
        },
        {
            "discussion_title": "My first mysql Solution, ",
            "discussion_vote": "3",
            "discussion_views": "320",
            "discussion_link": "https://leetcode.com/problems/classes-more-than-5-students/discuss/153073/My-first-mysql-Solution"
        },
        {
            "discussion_title": "can not be more simpler",
            "discussion_vote": "3",
            "discussion_views": "341",
            "discussion_link": "https://leetcode.com/problems/classes-more-than-5-students/discuss/146087/can-not-be-more-simpler"
        },
        {
            "discussion_title": "Concise solution using distinct and having.",
            "discussion_vote": "3",
            "discussion_views": "365",
            "discussion_link": "https://leetcode.com/problems/classes-more-than-5-students/discuss/128777/Concise-solution-using-distinct-and-having."
        }
    ],
    "598": [
        {
            "discussion_title": "Java Solution, find Min",
            "discussion_vote": "17",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/range-addition-ii/discuss/103595/Java-Solution-find-Min"
        },
        {
            "discussion_title": "Python solution , beat 100%",
            "discussion_vote": "14",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/range-addition-ii/discuss/103610/Python-solution-beat-100"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "7",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/range-addition-ii/discuss/103612/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java simple solution",
            "discussion_vote": "4",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/range-addition-ii/discuss/103633/Java-simple-solution"
        },
        {
            "discussion_title": "C++ short solution",
            "discussion_vote": "3",
            "discussion_views": "989",
            "discussion_link": "https://leetcode.com/problems/range-addition-ii/discuss/103638/C%2B%2B-short-solution"
        }
    ],
    "599": [
        {
            "discussion_title": "Java O(n+m) Time O(n) Space",
            "discussion_vote": "35",
            "discussion_views": "11.5K",
            "discussion_link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/discuss/103654/Java-O(n%2Bm)-Time-O(n)-Space"
        },
        {
            "discussion_title": "UCSD Students?",
            "discussion_vote": "27",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/discuss/103704/UCSD-Students"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "10",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/discuss/103745/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "C++ 9 lines hash table easy to understand",
            "discussion_vote": "7",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/discuss/103674/C%2B%2B-9-lines-hash-table-easy-to-understand"
        },
        {
            "discussion_title": "Bug Report",
            "discussion_vote": "1",
            "discussion_views": "34",
            "discussion_link": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/discuss/176851/Bug-Report"
        }
    ],
    "600": [
        {
            "discussion_title": "Java Solution, DP",
            "discussion_vote": "40",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/discuss/103749/Java-Solution-DP"
        },
        {
            "discussion_title": "C++, Non-DP, O(32) Fibonacci solution",
            "discussion_vote": "28",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/discuss/103754/C%2B%2B-Non-DP-O(32)-Fibonacci-solution"
        },
        {
            "discussion_title": "C++ 4 lines DP/Fibonacci 6 ms",
            "discussion_vote": "9",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/discuss/103766/C%2B%2B-4-lines-DPFibonacci-6-ms"
        },
        {
            "discussion_title": "Java O(1) time O(1) space DP Solution",
            "discussion_vote": "8",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/discuss/103751/Java-O(1)-time-O(1)-space-DP-Solution"
        },
        {
            "discussion_title": "python dp solution easily understood",
            "discussion_vote": "5",
            "discussion_views": "877",
            "discussion_link": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/discuss/103755/python-dp-solution-easily-understood"
        }
    ],
    "601": [
        {
            "discussion_title": "A simple solution",
            "discussion_vote": "26",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/human-traffic-of-stadium/discuss/103781/A-simple-solution"
        },
        {
            "discussion_title": "solution using join",
            "discussion_vote": "6",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/human-traffic-of-stadium/discuss/103792/solution-using-join"
        },
        {
            "discussion_title": "I don't understand the problem",
            "discussion_vote": "4",
            "discussion_views": "369",
            "discussion_link": "https://leetcode.com/problems/human-traffic-of-stadium/discuss/135050/I-don't-understand-the-problem"
        },
        {
            "discussion_title": "Wrong testcase",
            "discussion_vote": "3",
            "discussion_views": "231",
            "discussion_link": "https://leetcode.com/problems/human-traffic-of-stadium/discuss/114033/Wrong-testcase"
        },
        {
            "discussion_title": "A solution with union, join and where",
            "discussion_vote": "2",
            "discussion_views": "534",
            "discussion_link": "https://leetcode.com/problems/human-traffic-of-stadium/discuss/103787/A-solution-with-union-join-and-where"
        }
    ],
    "605": [
        {
            "discussion_title": "Java - Greedy solution - O(flowerbed) - beats 100%",
            "discussion_vote": "47",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/can-place-flowers/discuss/103898/Java-Greedy-solution-O(flowerbed)-beats-100"
        },
        {
            "discussion_title": "[Java] Very easy solution",
            "discussion_vote": "37",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/can-place-flowers/discuss/103883/Java-Very-easy-solution"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "15",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/can-place-flowers/discuss/103890/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "simplest c++ code",
            "discussion_vote": "14",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/can-place-flowers/discuss/103933/simplest-c%2B%2B-code"
        },
        {
            "discussion_title": "[C++][Java] Clean Code",
            "discussion_vote": "8",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/can-place-flowers/discuss/103893/C%2B%2BJava-Clean-Code"
        }
    ],
    "606": [
        {
            "discussion_title": "Java Solution, Tree Traversal",
            "discussion_vote": "42",
            "discussion_views": "15.3K",
            "discussion_link": "https://leetcode.com/problems/construct-string-from-binary-tree/discuss/103992/Java-Solution-Tree-Traversal"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "36",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/construct-string-from-binary-tree/discuss/104000/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java simple recursion",
            "discussion_vote": "20",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/construct-string-from-binary-tree/discuss/104036/Java-simple-recursion"
        },
        {
            "discussion_title": "[Java/C++] 1 liner",
            "discussion_vote": "18",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/construct-string-from-binary-tree/discuss/104098/JavaC%2B%2B-1-liner"
        },
        {
            "discussion_title": "Python Simple Solution",
            "discussion_vote": "9",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/construct-string-from-binary-tree/discuss/103984/Python-Simple-Solution"
        }
    ],
    "609": [
        {
            "discussion_title": "C++ clean solution, answers to follow up",
            "discussion_vote": "74",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-file-in-system/discuss/104123/C%2B%2B-clean-solution-answers-to-follow-up"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "15",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-file-in-system/discuss/104122/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java Solution, HashMap",
            "discussion_vote": "13",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-file-in-system/discuss/104134/Java-Solution-HashMap"
        },
        {
            "discussion_title": "Straight forward solution with a tiny bit of Java8",
            "discussion_vote": "11",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-file-in-system/discuss/104154/Straight-forward-solution-with-a-tiny-bit-of-Java8"
        },
        {
            "discussion_title": "Follow up questions discussion",
            "discussion_vote": "8",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-file-in-system/discuss/104120/Follow-up-questions-discussion"
        }
    ],
    "611": [
        {
            "discussion_title": "Java O(n^2) Time O(1) Space",
            "discussion_vote": "109",
            "discussion_views": "12.8K",
            "discussion_link": "https://leetcode.com/problems/valid-triangle-number/discuss/104174/Java-O(n2)-Time-O(1)-Space"
        },
        {
            "discussion_title": "Java Solution, 3 pointers",
            "discussion_vote": "22",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/valid-triangle-number/discuss/104169/Java-Solution-3-pointers"
        },
        {
            "discussion_title": "O(N^2) solution for C++ & Python",
            "discussion_vote": "17",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/valid-triangle-number/discuss/104177/O(N2)-solution-for-C%2B%2B-and-Python"
        },
        {
            "discussion_title": "A similar O(n^2) solution to 3-Sum ",
            "discussion_vote": "10",
            "discussion_views": "754",
            "discussion_link": "https://leetcode.com/problems/valid-triangle-number/discuss/128135/A-similar-O(n2)-solution-to-3-Sum"
        },
        {
            "discussion_title": "Can this problem  possibly be solved by python?",
            "discussion_vote": "7",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/valid-triangle-number/discuss/104164/Can-this-problem-possibly-be-solved-by-python"
        }
    ],
    "617": [
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "70",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/merge-two-binary-trees/discuss/104302/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java Solution, 6 lines, Tree Traversal",
            "discussion_vote": "70",
            "discussion_views": "28.4K",
            "discussion_link": "https://leetcode.com/problems/merge-two-binary-trees/discuss/104299/Java-Solution-6-lines-Tree-Traversal"
        },
        {
            "discussion_title": "Short Recursive Solution w/ Python & C++",
            "discussion_vote": "29",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/merge-two-binary-trees/discuss/104301/Short-Recursive-Solution-w-Python-and-C%2B%2B"
        },
        {
            "discussion_title": "[Java/C++] Clean Code - Unique Node | Shared Node - 5 liner",
            "discussion_vote": "17",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/merge-two-binary-trees/discuss/104308/JavaC%2B%2B-Clean-Code-Unique-Node-or-Shared-Node-5-liner"
        },
        {
            "discussion_title": "Java One Recursive Solution and Two Iterative Solutions (DFS and BFS) with Explanations",
            "discussion_vote": "11",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/merge-two-binary-trees/discuss/104331/Java-One-Recursive-Solution-and-Two-Iterative-Solutions-(DFS-and-BFS)-with-Explanations"
        }
    ],
    "620": [
        {
            "discussion_title": "My solution",
            "discussion_vote": "10",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/not-boring-movies/discuss/104483/My-solution"
        },
        {
            "discussion_title": "Judge parity using '&'",
            "discussion_vote": "1",
            "discussion_views": "64",
            "discussion_link": "https://leetcode.com/problems/not-boring-movies/discuss/175214/Judge-parity-using-'and'"
        },
        {
            "discussion_title": "My first post of SQL questions! : )",
            "discussion_vote": "1",
            "discussion_views": "554",
            "discussion_link": "https://leetcode.com/problems/not-boring-movies/discuss/125600/My-first-post-of-SQL-questions!-%3A-)"
        },
        {
            "discussion_title": "The problem description could be worded better",
            "discussion_vote": "1",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/not-boring-movies/discuss/104489/The-problem-description-could-be-worded-better"
        },
        {
            "discussion_title": "A slightly different way of solving this sql using CASE",
            "discussion_vote": "0",
            "discussion_views": "31",
            "discussion_link": "https://leetcode.com/problems/not-boring-movies/discuss/191259/A-slightly-different-way-of-solving-this-sql-using-CASE"
        }
    ],
    "621": [
        {
            "discussion_title": "concise Java Solution O(N) time O(26) space",
            "discussion_vote": "176",
            "discussion_views": "44.7K",
            "discussion_link": "https://leetcode.com/problems/task-scheduler/discuss/104496/concise-Java-Solution-O(N)-time-O(26)-space"
        },
        {
            "discussion_title": "Java O(n) time O(1) space 1 pass, no sorting solution with detailed explanation",
            "discussion_vote": "118",
            "discussion_views": "9.6K",
            "discussion_link": "https://leetcode.com/problems/task-scheduler/discuss/104500/Java-O(n)-time-O(1)-space-1-pass-no-sorting-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Java PriorityQueue solution - Similar problem Rearrange string K distance apart",
            "discussion_vote": "74",
            "discussion_views": "18.8K",
            "discussion_link": "https://leetcode.com/problems/task-scheduler/discuss/104501/Java-PriorityQueue-solution-Similar-problem-Rearrange-string-K-distance-apart"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "54",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/task-scheduler/discuss/104507/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "C++ 8lines O(n)",
            "discussion_vote": "52",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/task-scheduler/discuss/104504/C%2B%2B-8lines-O(n)"
        }
    ],
    "622": [
        {
            "discussion_title": "Concise Java using array",
            "discussion_vote": "28",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/design-circular-queue/discuss/149420/Concise-Java-using-array"
        },
        {
            "discussion_title": "Python short & simple AC doubly linked list solution",
            "discussion_vote": "7",
            "discussion_views": "815",
            "discussion_link": "https://leetcode.com/problems/design-circular-queue/discuss/148837/Python-short-and-simple-AC-doubly-linked-list-solution"
        },
        {
            "discussion_title": "Straightforward Implementation in C++ [20ms]",
            "discussion_vote": "5",
            "discussion_views": "749",
            "discussion_link": "https://leetcode.com/problems/design-circular-queue/discuss/153529/Straightforward-Implementation-in-C%2B%2B-20ms"
        },
        {
            "discussion_title": "Java Solution with Explanation",
            "discussion_vote": "3",
            "discussion_views": "230",
            "discussion_link": "https://leetcode.com/problems/design-circular-queue/discuss/175023/Java-Solution-with-Explanation"
        },
        {
            "discussion_title": "Simple Java solution using Doubly Linked List",
            "discussion_vote": "3",
            "discussion_views": "332",
            "discussion_link": "https://leetcode.com/problems/design-circular-queue/discuss/166325/Simple-Java-solution-using-Doubly-Linked-List"
        }
    ],
    "623": [
        {
            "discussion_title": "[C++] [Java] 10 line Solution - no helper",
            "discussion_vote": "24",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/add-one-row-to-tree/discuss/104555/C%2B%2B-Java-10-line-Solution-no-helper"
        },
        {
            "discussion_title": "Java, three methods, one BFS and two DFS",
            "discussion_vote": "17",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/add-one-row-to-tree/discuss/104547/Java-three-methods-one-BFS-and-two-DFS"
        },
        {
            "discussion_title": "Short Python BFS",
            "discussion_vote": "9",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/add-one-row-to-tree/discuss/104582/Short-Python-BFS"
        },
        {
            "discussion_title": "Simple Java solution - O(N)",
            "discussion_vote": "6",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/add-one-row-to-tree/discuss/104584/Simple-Java-solution-O(N)"
        },
        {
            "discussion_title": "Simple C++ solution",
            "discussion_vote": "2",
            "discussion_views": "649",
            "discussion_link": "https://leetcode.com/problems/add-one-row-to-tree/discuss/104604/Simple-C%2B%2B-solution"
        }
    ],
    "626": [
        {
            "discussion_title": "4 line solution using if statement",
            "discussion_vote": "27",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/exchange-seats/discuss/104698/4-line-solution-using-if-statement"
        },
        {
            "discussion_title": "Using two UNION operators",
            "discussion_vote": "23",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/exchange-seats/discuss/104707/Using-two-UNION-operators"
        },
        {
            "discussion_title": "A solution without using union and order by",
            "discussion_vote": "9",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/exchange-seats/discuss/104702/A-solution-without-using-union-and-order-by"
        },
        {
            "discussion_title": "simple case solution",
            "discussion_vote": "8",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/exchange-seats/discuss/104699/simple-case-solution"
        },
        {
            "discussion_title": "A Simple Solution",
            "discussion_vote": "3",
            "discussion_views": "385",
            "discussion_link": "https://leetcode.com/problems/exchange-seats/discuss/151977/A-Simple-Solution"
        }
    ],
    "627": [
        {
            "discussion_title": "Accept solution with xor",
            "discussion_vote": "73",
            "discussion_views": "12.7K",
            "discussion_link": "https://leetcode.com/problems/swap-salary/discuss/104713/Accept-solution-with-xor"
        },
        {
            "discussion_title": "Short and Simple",
            "discussion_vote": "21",
            "discussion_views": "13.7K",
            "discussion_link": "https://leetcode.com/problems/swap-salary/discuss/104716/Short-and-Simple"
        },
        {
            "discussion_title": "Simple and short with IF",
            "discussion_vote": "15",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/swap-salary/discuss/104722/Simple-and-short-with-IF"
        },
        {
            "discussion_title": "Solution using ASCII code",
            "discussion_vote": "9",
            "discussion_views": "253",
            "discussion_link": "https://leetcode.com/problems/swap-salary/discuss/172698/Solution-using-ASCII-code"
        },
        {
            "discussion_title": "the solution with multiplication and division of ascii codes",
            "discussion_vote": "4",
            "discussion_views": "169",
            "discussion_link": "https://leetcode.com/problems/swap-salary/discuss/179858/the-solution-with-multiplication-and-division-of-ascii-codes"
        }
    ],
    "628": [
        {
            "discussion_title": "Java O(1) space O(n) time solution beat 100%",
            "discussion_vote": "90",
            "discussion_views": "18.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-three-numbers/discuss/104729/Java-O(1)-space-O(n)-time-solution-beat-100"
        },
        {
            "discussion_title": "Java Easy AC...",
            "discussion_vote": "26",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-three-numbers/discuss/104755/Java-Easy-AC..."
        },
        {
            "discussion_title": "Python concise solution, O(N) and 1 line",
            "discussion_vote": "24",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-three-numbers/discuss/104739/Python-concise-solution-O(N)-and-1-line"
        },
        {
            "discussion_title": "Share my python solution: one pass, O(n) time O(1) space",
            "discussion_vote": "12",
            "discussion_views": "654",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-three-numbers/discuss/104761/Share-my-python-solution%3A-one-pass-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "General solution for any K ",
            "discussion_vote": "7",
            "discussion_views": "452",
            "discussion_link": "https://leetcode.com/problems/maximum-product-of-three-numbers/discuss/128740/General-solution-for-any-K"
        }
    ],
    "629": [
        {
            "discussion_title": "Java DP O(nk) solution",
            "discussion_vote": "59",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/k-inverse-pairs-array/discuss/104815/Java-DP-O(nk)-solution"
        },
        {
            "discussion_title": "Shared my C++ O(n * k) solution with explanation",
            "discussion_vote": "18",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/k-inverse-pairs-array/discuss/104825/Shared-my-C%2B%2B-O(n-*-k)-solution-with-explanation"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "16",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/k-inverse-pairs-array/discuss/104822/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Python concise solution",
            "discussion_vote": "5",
            "discussion_views": "653",
            "discussion_link": "https://leetcode.com/problems/k-inverse-pairs-array/discuss/104824/Python-concise-solution"
        },
        {
            "discussion_title": "java,DP.Thank you so much @GardenAAA for your advice.",
            "discussion_vote": "5",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/k-inverse-pairs-array/discuss/104834/javaDP.Thank-you-so-much-%40GardenAAA-for-your-advice."
        }
    ],
    "630": [
        {
            "discussion_title": "Short Java code using PriorityQueue",
            "discussion_vote": "51",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-iii/discuss/104845/Short-Java-code-using-PriorityQueue"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "42",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-iii/discuss/104847/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "C++ 13 lines With Explanation",
            "discussion_vote": "13",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-iii/discuss/104840/C%2B%2B-13-lines-With-Explanation"
        },
        {
            "discussion_title": "C++ Short & Elegant O(nlogn) Time, O(k) Space Solution",
            "discussion_vote": "10",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/course-schedule-iii/discuss/104844/C%2B%2B-Short-and-Elegant-O(nlogn)-Time-O(k)-Space-Solution"
        },
        {
            "discussion_title": "C++ short code using priority queue, O(NlogN)",
            "discussion_vote": "2",
            "discussion_views": "294",
            "discussion_link": "https://leetcode.com/problems/course-schedule-iii/discuss/149263/C%2B%2B-short-code-using-priority-queue-O(NlogN)"
        }
    ],
    "632": [
        {
            "discussion_title": "Java Code using PriorityQueue. similar to merge k array",
            "discussion_vote": "58",
            "discussion_views": "12.6K",
            "discussion_link": "https://leetcode.com/problems/smallest-range/discuss/104893/Java-Code-using-PriorityQueue.-similar-to-merge-k-array"
        },
        {
            "discussion_title": "Python, Heap-based solution",
            "discussion_vote": "47",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/smallest-range/discuss/104904/Python-Heap-based-solution"
        },
        {
            "discussion_title": "Clean C++ priority_queue solution using iterators",
            "discussion_vote": "24",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/smallest-range/discuss/104886/Clean-C%2B%2B-priority_queue-solution-using-iterators"
        },
        {
            "discussion_title": "Java 8, Sliding window",
            "discussion_vote": "10",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/smallest-range/discuss/104920/Java-8-Sliding-window"
        },
        {
            "discussion_title": "Java Solution with maxHeap&minHeap",
            "discussion_vote": "7",
            "discussion_views": "912",
            "discussion_link": "https://leetcode.com/problems/smallest-range/discuss/104918/Java-Solution-with-maxHeapandminHeap"
        }
    ],
    "633": [
        {
            "discussion_title": "Java Two Pointers Solution",
            "discussion_vote": "62",
            "discussion_views": "11.7K",
            "discussion_link": "https://leetcode.com/problems/sum-of-square-numbers/discuss/104930/Java-Two-Pointers-Solution"
        },
        {
            "discussion_title": "HashSet, Java, quick solution, one for loop",
            "discussion_vote": "19",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/sum-of-square-numbers/discuss/104932/HashSet-Java-quick-solution-one-for-loop"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "15",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/sum-of-square-numbers/discuss/104973/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Fermat",
            "discussion_vote": "9",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/sum-of-square-numbers/discuss/104935/Fermat"
        },
        {
            "discussion_title": "C++ very simple O(1) space solution",
            "discussion_vote": "7",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/sum-of-square-numbers/discuss/104970/C%2B%2B-very-simple-O(1)-space-solution"
        }
    ],
    "636": [
        {
            "discussion_title": "Java Stack Solution O(n) Time O(n) Space",
            "discussion_vote": "44",
            "discussion_views": "13.2K",
            "discussion_link": "https://leetcode.com/problems/exclusive-time-of-functions/discuss/105062/Java-Stack-Solution-O(n)-Time-O(n)-Space"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "36",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/exclusive-time-of-functions/discuss/105100/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "How is function 1 executing 4 units of time?",
            "discussion_vote": "32",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/exclusive-time-of-functions/discuss/105084/How-is-function-1-executing-4-units-of-time"
        },
        {
            "discussion_title": "C++ O(n) stack with explaination",
            "discussion_vote": "21",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/exclusive-time-of-functions/discuss/105103/C%2B%2B-O(n)-stack-with-explaination"
        },
        {
            "discussion_title": "Java clean solution with normalized time explained",
            "discussion_vote": "11",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/exclusive-time-of-functions/discuss/105101/Java-clean-solution-with-normalized-time-explained"
        }
    ],
    "637": [
        {
            "discussion_title": "Java BFS Solution",
            "discussion_vote": "58",
            "discussion_views": "14.9K",
            "discussion_link": "https://leetcode.com/problems/average-of-levels-in-binary-tree/discuss/105107/Java-BFS-Solution"
        },
        {
            "discussion_title": "A good problem to practice (BFS + DFS)",
            "discussion_vote": "30",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/average-of-levels-in-binary-tree/discuss/105131/A-good-problem-to-practice-(BFS-%2B-DFS)"
        },
        {
            "discussion_title": "C++ simple and clear BFS solution",
            "discussion_vote": "24",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/average-of-levels-in-binary-tree/discuss/105178/C%2B%2B-simple-and-clear-BFS-solution"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "22",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/average-of-levels-in-binary-tree/discuss/105108/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "\"one-liner\"",
            "discussion_vote": "12",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/average-of-levels-in-binary-tree/discuss/105127/%22one-liner%22"
        }
    ],
    "638": [
        {
            "discussion_title": "Very Easy to understand JAVA Solution beats 95% with explanation",
            "discussion_vote": "49",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/shopping-offers/discuss/105212/Very-Easy-to-understand-JAVA-Solution-beats-95-with-explanation"
        },
        {
            "discussion_title": "Concise c++ DFS solution, 6ms",
            "discussion_vote": "26",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/shopping-offers/discuss/105252/Concise-c%2B%2B-DFS-solution-6ms"
        },
        {
            "discussion_title": "Simple Java recursive solution",
            "discussion_vote": "22",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/shopping-offers/discuss/105194/Simple-Java-recursive-solution"
        },
        {
            "discussion_title": "Java DFS + DP",
            "discussion_vote": "19",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/shopping-offers/discuss/105211/Java-DFS-%2B-DP"
        },
        {
            "discussion_title": "Python dfs with memorization.",
            "discussion_vote": "17",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/shopping-offers/discuss/105204/Python-dfs-with-memorization."
        }
    ],
    "639": [
        {
            "discussion_title": "Java O(N) by General Solution for all DP problems",
            "discussion_vote": "88",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/decode-ways-ii/discuss/105258/Java-O(N)-by-General-Solution-for-all-DP-problems"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "52",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/decode-ways-ii/discuss/105274/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java DP, O(n) time and O(1) space",
            "discussion_vote": "36",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/decode-ways-ii/discuss/105275/Java-DP-O(n)-time-and-O(1)-space"
        },
        {
            "discussion_title": "C++, DP, O(n) time O(1) space",
            "discussion_vote": "16",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/decode-ways-ii/discuss/105265/C%2B%2B-DP-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Python 6-lines DP solution",
            "discussion_vote": "14",
            "discussion_views": "746",
            "discussion_link": "https://leetcode.com/problems/decode-ways-ii/discuss/105262/Python-6-lines-DP-solution"
        }
    ],
    "640": [
        {
            "discussion_title": "Concise Java Solution",
            "discussion_vote": "41",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/solve-the-equation/discuss/105311/Concise-Java-Solution"
        },
        {
            "discussion_title": "Simple 2-liner (and more)",
            "discussion_vote": "27",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/solve-the-equation/discuss/105362/Simple-2-liner-(and-more)"
        },
        {
            "discussion_title": "C++, Two pointers, concise solution",
            "discussion_vote": "18",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/solve-the-equation/discuss/105351/C%2B%2B-Two-pointers-concise-solution"
        },
        {
            "discussion_title": "Python Regex Solution explained",
            "discussion_vote": "8",
            "discussion_views": "997",
            "discussion_link": "https://leetcode.com/problems/solve-the-equation/discuss/105366/Python-Regex-Solution-explained"
        },
        {
            "discussion_title": "Clear Java Code with Detailed Example",
            "discussion_vote": "7",
            "discussion_views": "270",
            "discussion_link": "https://leetcode.com/problems/solve-the-equation/discuss/150021/Clear-Java-Code-with-Detailed-Example"
        }
    ],
    "641": [
        {
            "discussion_title": "c++ 99% ring buffer no edge cases. fb interviewer really loves it. easy to impl in 4mins. cheers!",
            "discussion_vote": "8",
            "discussion_views": "810",
            "discussion_link": "https://leetcode.com/problems/design-circular-deque/discuss/155209/c%2B%2B-99-ring-buffer-no-edge-cases.-fb-interviewer-really-loves-it.-easy-to-impl-in-4mins.-cheers!"
        },
        {
            "discussion_title": "Java doubly LinkedList  solution, very straightforward",
            "discussion_vote": "3",
            "discussion_views": "630",
            "discussion_link": "https://leetcode.com/problems/design-circular-deque/discuss/149371/Java-doubly-LinkedList-solution-very-straightforward"
        },
        {
            "discussion_title": "Is the example return value correct, and why Circular?",
            "discussion_vote": "2",
            "discussion_views": "119",
            "discussion_link": "https://leetcode.com/problems/design-circular-deque/discuss/165536/Is-the-example-return-value-correct-and-why-Circular"
        },
        {
            "discussion_title": "Straightforward w/ Array in Java(corner cases)",
            "discussion_vote": "2",
            "discussion_views": "236",
            "discussion_link": "https://leetcode.com/problems/design-circular-deque/discuss/161228/Straightforward-w-Array-in-Java(corner-cases)"
        },
        {
            "discussion_title": "python3, using list, easy to understand",
            "discussion_vote": "1",
            "discussion_views": "171",
            "discussion_link": "https://leetcode.com/problems/design-circular-deque/discuss/154055/python3-using-list-easy-to-understand"
        }
    ],
    "643": [
        {
            "discussion_title": "Java solution, Sum of Sliding window",
            "discussion_vote": "34",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-average-subarray-i/discuss/105432/Java-solution-Sum-of-Sliding-window"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "14",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-average-subarray-i/discuss/105469/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "2 lines Python, 2 versions",
            "discussion_vote": "8",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-average-subarray-i/discuss/105435/2-lines-Python-2-versions"
        },
        {
            "discussion_title": "C++ simple sliding-window solution",
            "discussion_vote": "7",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-average-subarray-i/discuss/105428/C%2B%2B-simple-sliding-window-solution"
        },
        {
            "discussion_title": "Simple Java solution - sliding window",
            "discussion_vote": "7",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/maximum-average-subarray-i/discuss/105473/Simple-Java-solution-sliding-window"
        }
    ],
    "645": [
        {
            "discussion_title": "Java O(n) Time O(1) Space",
            "discussion_vote": "49",
            "discussion_views": "10.5K",
            "discussion_link": "https://leetcode.com/problems/set-mismatch/discuss/105507/Java-O(n)-Time-O(1)-Space"
        },
        {
            "discussion_title": "[C++] 6 lines solution with explanation",
            "discussion_vote": "25",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/set-mismatch/discuss/105515/C%2B%2B-6-lines-solution-with-explanation"
        },
        {
            "discussion_title": "XOR, one pass",
            "discussion_vote": "24",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/set-mismatch/discuss/105513/XOR-one-pass"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "18",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/set-mismatch/discuss/105552/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Simple Java O(n) solution - HashSet",
            "discussion_vote": "14",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/set-mismatch/discuss/105528/Simple-Java-O(n)-solution-HashSet"
        }
    ],
    "646": [
        {
            "discussion_title": "easy dp",
            "discussion_vote": "43",
            "discussion_views": "12.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-pair-chain/discuss/105602/easy-dp"
        },
        {
            "discussion_title": "4-Liner Python Greedy",
            "discussion_vote": "34",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-pair-chain/discuss/105607/4-Liner-Python-Greedy"
        },
        {
            "discussion_title": "Java O(nlog(n)) Time O(1) Space",
            "discussion_vote": "28",
            "discussion_views": "9.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-pair-chain/discuss/105610/Java-O(nlog(n))-Time-O(1)-Space"
        },
        {
            "discussion_title": "[C++] Clean Code",
            "discussion_vote": "19",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-pair-chain/discuss/105617/C%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "[Java] Very Simple without DP",
            "discussion_vote": "13",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-pair-chain/discuss/105623/Java-Very-Simple-without-DP"
        }
    ],
    "647": [
        {
            "discussion_title": "Java solution, 8 lines, extendPalindrome",
            "discussion_vote": "142",
            "discussion_views": "33.9K",
            "discussion_link": "https://leetcode.com/problems/palindromic-substrings/discuss/105689/Java-solution-8-lines-extendPalindrome"
        },
        {
            "discussion_title": "Very Simple Java Solution with Detail Explanation",
            "discussion_vote": "72",
            "discussion_views": "16.5K",
            "discussion_link": "https://leetcode.com/problems/palindromic-substrings/discuss/105688/Very-Simple-Java-Solution-with-Detail-Explanation"
        },
        {
            "discussion_title": "Java DP solution based on longest palindromic substring",
            "discussion_vote": "50",
            "discussion_views": "13.3K",
            "discussion_link": "https://leetcode.com/problems/palindromic-substrings/discuss/105707/Java-DP-solution-based-on-longest-palindromic-substring"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation (Bonus O(N) solution)",
            "discussion_vote": "35",
            "discussion_views": "13.3K",
            "discussion_link": "https://leetcode.com/problems/palindromic-substrings/discuss/105687/Python-Straightforward-with-Explanation-(Bonus-O(N)-solution)"
        },
        {
            "discussion_title": "[Java/C++] 6 lines solution - NO DP",
            "discussion_vote": "32",
            "discussion_views": "9.5K",
            "discussion_link": "https://leetcode.com/problems/palindromic-substrings/discuss/105691/JavaC%2B%2B-6-lines-solution-NO-DP"
        }
    ],
    "648": [
        {
            "discussion_title": "Java Simple/Classical Trie question/solution (Beat 96%)",
            "discussion_vote": "30",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/replace-words/discuss/105767/Java-SimpleClassical-Trie-questionsolution-(Beat-96)"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation (Prefix hash, Trie solutions)",
            "discussion_vote": "14",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/replace-words/discuss/105755/Python-Straightforward-with-Explanation-(Prefix-hash-Trie-solutions)"
        },
        {
            "discussion_title": "Java solution, 12 lines, HashSet",
            "discussion_vote": "11",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/replace-words/discuss/105757/Java-solution-12-lines-HashSet"
        },
        {
            "discussion_title": "Simple Java 8 and Trie based solution",
            "discussion_vote": "8",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/replace-words/discuss/105795/Simple-Java-8-and-Trie-based-solution"
        },
        {
            "discussion_title": "Easy Python Solution, 6 Lines",
            "discussion_vote": "6",
            "discussion_views": "730",
            "discussion_link": "https://leetcode.com/problems/replace-words/discuss/105811/Easy-Python-Solution-6-Lines"
        }
    ],
    "649": [
        {
            "discussion_title": "[Java/C++] Very simple greedy solution with explanation",
            "discussion_vote": "53",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/dota2-senate/discuss/105858/JavaC%2B%2B-Very-simple-greedy-solution-with-explanation"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "12",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/dota2-senate/discuss/105879/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java solution, Greedy",
            "discussion_vote": "7",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/dota2-senate/discuss/105889/Java-solution-Greedy"
        },
        {
            "discussion_title": "C++, O(n) solution",
            "discussion_vote": "5",
            "discussion_views": "702",
            "discussion_link": "https://leetcode.com/problems/dota2-senate/discuss/105860/C%2B%2B-O(n)-solution"
        },
        {
            "discussion_title": "Confusion about the logic",
            "discussion_vote": "3",
            "discussion_views": "972",
            "discussion_link": "https://leetcode.com/problems/dota2-senate/discuss/105870/Confusion-about-the-logic"
        }
    ],
    "650": [
        {
            "discussion_title": "Java DP Solution",
            "discussion_vote": "68",
            "discussion_views": "17.1K",
            "discussion_link": "https://leetcode.com/problems/2-keys-keyboard/discuss/105899/Java-DP-Solution"
        },
        {
            "discussion_title": "Loop best case log(n), no DP, no extra space, no recursion, with explanation",
            "discussion_vote": "60",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/2-keys-keyboard/discuss/105897/Loop-best-case-log(n)-no-DP-no-extra-space-no-recursion-with-explanation"
        },
        {
            "discussion_title": "Very Simple Java Solution With Detail Explanation",
            "discussion_vote": "52",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/2-keys-keyboard/discuss/105908/Very-Simple-Java-Solution-With-Detail-Explanation"
        },
        {
            "discussion_title": "[Java/C++] Clean Code with Explanation - 4 lines, No DP",
            "discussion_vote": "31",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/2-keys-keyboard/discuss/105928/JavaC%2B%2B-Clean-Code-with-Explanation-4-lines-No-DP"
        },
        {
            "discussion_title": "Java solutions from naive-DP to optimized-DP to non-DP",
            "discussion_vote": "25",
            "discussion_views": "913",
            "discussion_link": "https://leetcode.com/problems/2-keys-keyboard/discuss/105932/Java-solutions-from-naive-DP-to-optimized-DP-to-non-DP"
        }
    ],
    "652": [
        {
            "discussion_title": "Java Concise Postorder Traversal Solution",
            "discussion_vote": "94",
            "discussion_views": "21.2K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-subtrees/discuss/106011/Java-Concise-Postorder-Traversal-Solution"
        },
        {
            "discussion_title": "O(n) time and space, lots of analysis",
            "discussion_vote": "59",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-subtrees/discuss/106016/O(n)-time-and-space-lots-of-analysis"
        },
        {
            "discussion_title": "[C++] [Java] Clean Code",
            "discussion_vote": "37",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-subtrees/discuss/106055/C%2B%2B-Java-Clean-Code"
        },
        {
            "discussion_title": "Python easy understand solution",
            "discussion_vote": "17",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-subtrees/discuss/106020/Python-easy-understand-solution"
        },
        {
            "discussion_title": "Verbose Java solution, tree traversal",
            "discussion_vote": "13",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/find-duplicate-subtrees/discuss/106021/Verbose-Java-solution-tree-traversal"
        }
    ],
    "653": [
        {
            "discussion_title": "[Java/C++] Three simple methods - choose one you like",
            "discussion_vote": "96",
            "discussion_views": "24.2K",
            "discussion_link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/discuss/106059/JavaC%2B%2B-Three-simple-methods-choose-one-you-like"
        },
        {
            "discussion_title": "[C++] Clean Code - O(n) time O(lg n) space - BinaryTree Iterator",
            "discussion_vote": "37",
            "discussion_views": "7.7K",
            "discussion_link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/discuss/106063/C%2B%2B-Clean-Code-O(n)-time-O(lg-n)-space-BinaryTree-Iterator"
        },
        {
            "discussion_title": "Java Simple AC with Time O(n) Space O(log n) in Average",
            "discussion_vote": "32",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/discuss/106061/Java-Simple-AC-with-Time-O(n)-Space-O(log-n)-in-Average"
        },
        {
            "discussion_title": "C++/Python Straight Forward Solution",
            "discussion_vote": "26",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/discuss/106067/C%2B%2BPython-Straight-Forward-Solution"
        },
        {
            "discussion_title": "Java Code - O(n) time / O(lg(n)) space using DFS + Stack",
            "discussion_vote": "14",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/discuss/106110/Java-Code-O(n)-time-O(lg(n))-space-using-DFS-%2B-Stack"
        }
    ],
    "654": [
        {
            "discussion_title": "C++ O(N) solution",
            "discussion_vote": "80",
            "discussion_views": "14.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-binary-tree/discuss/106146/C%2B%2B-O(N)-solution"
        },
        {
            "discussion_title": "Java worst case O(N) solution",
            "discussion_vote": "57",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-binary-tree/discuss/106156/Java-worst-case-O(N)-solution"
        },
        {
            "discussion_title": "Java solution, recursion",
            "discussion_vote": "25",
            "discussion_views": "11.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-binary-tree/discuss/106149/Java-solution-recursion"
        },
        {
            "discussion_title": "C++ 9 lines O(n log n) map, plus stack with binary search",
            "discussion_vote": "17",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/maximum-binary-tree/discuss/106147/C%2B%2B-9-lines-O(n-log-n)-map-plus-stack-with-binary-search"
        },
        {
            "discussion_title": "poor quality question",
            "discussion_vote": "10",
            "discussion_views": "983",
            "discussion_link": "https://leetcode.com/problems/maximum-binary-tree/discuss/118356/poor-quality-question"
        }
    ],
    "655": [
        {
            "discussion_title": "Java Recursive Solution",
            "discussion_vote": "25",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/print-binary-tree/discuss/106239/Java-Recursive-Solution"
        },
        {
            "discussion_title": "Python recursive solution, easy to understand",
            "discussion_vote": "14",
            "discussion_views": "620",
            "discussion_link": "https://leetcode.com/problems/print-binary-tree/discuss/106240/Python-recursive-solution-easy-to-understand"
        },
        {
            "discussion_title": "Java Iterative Level Order Traversal with Queue",
            "discussion_vote": "13",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/print-binary-tree/discuss/106269/Java-Iterative-Level-Order-Traversal-with-Queue"
        },
        {
            "discussion_title": "Simple Python with thorough explanation",
            "discussion_vote": "11",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/print-binary-tree/discuss/106273/Simple-Python-with-thorough-explanation"
        },
        {
            "discussion_title": "Simple Java solution (Easy for sure)",
            "discussion_vote": "6",
            "discussion_views": "419",
            "discussion_link": "https://leetcode.com/problems/print-binary-tree/discuss/106267/Simple-Java-solution-(Easy-for-sure)"
        }
    ],
    "657": [
        {
            "discussion_title": "Python one liner",
            "discussion_vote": "68",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/robot-return-to-origin/discuss/106315/Python-one-liner"
        },
        {
            "discussion_title": "[C++] [Java] Clean Code",
            "discussion_vote": "33",
            "discussion_views": "18.6K",
            "discussion_link": "https://leetcode.com/problems/robot-return-to-origin/discuss/106316/C%2B%2B-Java-Clean-Code"
        },
        {
            "discussion_title": "If you can't describe the problem in a right way, please don't make it a problem.",
            "discussion_vote": "29",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/robot-return-to-origin/discuss/106330/If-you-can't-describe-the-problem-in-a-right-way-please-don't-make-it-a-problem."
        },
        {
            "discussion_title": "2 Lines Python",
            "discussion_vote": "11",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/robot-return-to-origin/discuss/106393/2-Lines-Python"
        },
        {
            "discussion_title": "Easy 2 lines Java",
            "discussion_vote": "6",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/robot-return-to-origin/discuss/106342/Easy-2-lines-Java"
        }
    ],
    "658": [
        {
            "discussion_title": "O(log n) Java, 1 line O(log(n) + k) Ruby",
            "discussion_vote": "100",
            "discussion_views": "15.5K",
            "discussion_link": "https://leetcode.com/problems/find-k-closest-elements/discuss/106419/O(log-n)-Java-1-line-O(log(n)-%2B-k)-Ruby"
        },
        {
            "discussion_title": "[Java/C++] Very simple binary search solution",
            "discussion_vote": "34",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/find-k-closest-elements/discuss/106439/JavaC%2B%2B-Very-simple-binary-search-solution"
        },
        {
            "discussion_title": "Python easy solution, O(K+logN)",
            "discussion_vote": "23",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/find-k-closest-elements/discuss/106426/Python-easy-solution-O(K%2BlogN)"
        },
        {
            "discussion_title": "Java 4-Liner and O(n) Time Solution",
            "discussion_vote": "18",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/find-k-closest-elements/discuss/106424/Java-4-Liner-and-O(n)-Time-Solution"
        },
        {
            "discussion_title": "Clean O(logN) solution in Python ",
            "discussion_vote": "14",
            "discussion_views": "735",
            "discussion_link": "https://leetcode.com/problems/find-k-closest-elements/discuss/133604/Clean-O(logN)-solution-in-Python"
        }
    ],
    "659": [
        {
            "discussion_title": "Java O(n) Time O(n) Space",
            "discussion_vote": "92",
            "discussion_views": "17.8K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/discuss/106496/Java-O(n)-Time-O(n)-Space"
        },
        {
            "discussion_title": "Java O(n) time & O(1) space solution -- greedily extending shorter subsequence",
            "discussion_vote": "82",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/discuss/106495/Java-O(n)-time-and-O(1)-space-solution-greedily-extending-shorter-subsequence"
        },
        {
            "discussion_title": "C++ O(n) solution, two pass",
            "discussion_vote": "25",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/discuss/106493/C%2B%2B-O(n)-solution-two-pass"
        },
        {
            "discussion_title": "Python esay understand solution",
            "discussion_vote": "24",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/discuss/106514/Python-esay-understand-solution"
        },
        {
            "discussion_title": "Simple C++ Greedy O(nlogn) Solution (with explanation)",
            "discussion_vote": "21",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/discuss/106516/Simple-C%2B%2B-Greedy-O(nlogn)-Solution-(with-explanation)"
        }
    ],
    "661": [
        {
            "discussion_title": "C++ O(1) space using \"game of life\" idea",
            "discussion_vote": "33",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/image-smoother/discuss/106593/C%2B%2B-O(1)-space-using-%22game-of-life%22-idea"
        },
        {
            "discussion_title": "Very Clean Solution in Java",
            "discussion_vote": "25",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/image-smoother/discuss/106602/Very-Clean-Solution-in-Java"
        },
        {
            "discussion_title": "Straightforward python solution",
            "discussion_vote": "17",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/image-smoother/discuss/106598/Straightforward-python-solution"
        },
        {
            "discussion_title": "Don't understand the question and sample output",
            "discussion_vote": "14",
            "discussion_views": "564",
            "discussion_link": "https://leetcode.com/problems/image-smoother/discuss/106621/Don't-understand-the-question-and-sample-output"
        },
        {
            "discussion_title": "python O(m*n)",
            "discussion_vote": "6",
            "discussion_views": "578",
            "discussion_link": "https://leetcode.com/problems/image-smoother/discuss/106635/python-O(m*n)"
        }
    ],
    "662": [
        {
            "discussion_title": "[Java/C++] Very simple dfs solution",
            "discussion_vote": "62",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-width-of-binary-tree/discuss/106654/JavaC%2B%2B-Very-simple-dfs-solution"
        },
        {
            "discussion_title": "[C++/Java] * [BFS/DFS/3liner] Clean Code  With Explanation",
            "discussion_vote": "35",
            "discussion_views": "8.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-width-of-binary-tree/discuss/106645/C%2B%2BJava-*-BFSDFS3liner-Clean-Code-With-Explanation"
        },
        {
            "discussion_title": "Java One Queue Solution with HashMap",
            "discussion_vote": "27",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/maximum-width-of-binary-tree/discuss/106653/Java-One-Queue-Solution-with-HashMap"
        },
        {
            "discussion_title": "JAVA\\uff0cLevel Traversal,Using Two Queue",
            "discussion_vote": "16",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/maximum-width-of-binary-tree/discuss/106648/JAVAuff0cLevel-TraversalUsing-Two-Queue"
        },
        {
            "discussion_title": "Python, Straightforward BFS and DFS solutions",
            "discussion_vote": "14",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-width-of-binary-tree/discuss/106707/Python-Straightforward-BFS-and-DFS-solutions"
        }
    ],
    "664": [
        {
            "discussion_title": "Java O(n^3) DP Solution with Explanation and Simple Optimization",
            "discussion_vote": "33",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/strange-printer/discuss/106810/Java-O(n3)-DP-Solution-with-Explanation-and-Simple-Optimization"
        },
        {
            "discussion_title": "Java solution, DP",
            "discussion_vote": "22",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/strange-printer/discuss/106793/Java-solution-DP"
        },
        {
            "discussion_title": "Python, Straightforward DP with Explanation",
            "discussion_vote": "17",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/strange-printer/discuss/106795/Python-Straightforward-DP-with-Explanation"
        },
        {
            "discussion_title": "Java O(n^3) short DP Solution",
            "discussion_vote": "11",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/strange-printer/discuss/106792/Java-O(n3)-short-DP-Solution"
        },
        {
            "discussion_title": "Same as Remove Boxes",
            "discussion_vote": "10",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/strange-printer/discuss/106813/Same-as-Remove-Boxes"
        }
    ],
    "665": [
        {
            "discussion_title": "[Java/C++] Simple greedy like solution with explanation",
            "discussion_vote": "83",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/non-decreasing-array/discuss/106826/JavaC%2B%2B-Simple-greedy-like-solution-with-explanation"
        },
        {
            "discussion_title": "Python Extremely Easy to Understand",
            "discussion_vote": "30",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/non-decreasing-array/discuss/106816/Python-Extremely-Easy-to-Understand"
        },
        {
            "discussion_title": "[C++] [Java] Clean Code - 6 liner Without Modifying Input",
            "discussion_vote": "14",
            "discussion_views": "6.0K",
            "discussion_link": "https://leetcode.com/problems/non-decreasing-array/discuss/106849/C%2B%2B-Java-Clean-Code-6-liner-Without-Modifying-Input"
        },
        {
            "discussion_title": "The easiest python solution....",
            "discussion_vote": "8",
            "discussion_views": "856",
            "discussion_link": "https://leetcode.com/problems/non-decreasing-array/discuss/106842/The-easiest-python-solution...."
        },
        {
            "discussion_title": "Java solution, 7 liner.",
            "discussion_vote": "8",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/non-decreasing-array/discuss/106818/Java-solution-7-liner."
        }
    ],
    "667": [
        {
            "discussion_title": "[C++] [Java] Clean Code 4-liner",
            "discussion_vote": "76",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement-ii/discuss/106948/C%2B%2B-Java-Clean-Code-4-liner"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "19",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement-ii/discuss/106965/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Java, easy to understand with explanation",
            "discussion_vote": "18",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement-ii/discuss/106971/Java-easy-to-understand-with-explanation"
        },
        {
            "discussion_title": "C++, concise code, O(n)",
            "discussion_vote": "16",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement-ii/discuss/106957/C%2B%2B-concise-code-O(n)"
        },
        {
            "discussion_title": "Short+simple with explanation",
            "discussion_vote": "10",
            "discussion_views": "961",
            "discussion_link": "https://leetcode.com/problems/beautiful-arrangement-ii/discuss/106955/Short%2Bsimple-with-explanation"
        }
    ],
    "668": [
        {
            "discussion_title": "Java solution, binary search",
            "discussion_vote": "48",
            "discussion_views": "8.7K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/discuss/106977/Java-solution-binary-search"
        },
        {
            "discussion_title": "This name is very miss leading",
            "discussion_vote": "15",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/discuss/106981/This-name-is-very-miss-leading"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "13",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/discuss/106984/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "This problem is found on another Online Judge",
            "discussion_vote": "10",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/discuss/106991/This-problem-is-found-on-another-Online-Judge"
        },
        {
            "discussion_title": "solution like Kth Smallest Number in Sorted Matrix",
            "discussion_vote": "3",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/discuss/106990/solution-like-Kth-Smallest-Number-in-Sorted-Matrix"
        }
    ],
    "669": [
        {
            "discussion_title": "Java solution, 6 liner",
            "discussion_vote": "85",
            "discussion_views": "14.6K",
            "discussion_link": "https://leetcode.com/problems/trim-a-binary-search-tree/discuss/107000/Java-solution-6-liner"
        },
        {
            "discussion_title": "Java solution, iteration version",
            "discussion_vote": "51",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/trim-a-binary-search-tree/discuss/107026/Java-solution-iteration-version"
        },
        {
            "discussion_title": "C++, recursion",
            "discussion_vote": "27",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/trim-a-binary-search-tree/discuss/107046/C%2B%2B-recursion"
        },
        {
            "discussion_title": "clear python solution",
            "discussion_vote": "22",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/trim-a-binary-search-tree/discuss/107013/clear-python-solution"
        },
        {
            "discussion_title": "Clean Java solution with explanation and video link",
            "discussion_vote": "14",
            "discussion_views": "597",
            "discussion_link": "https://leetcode.com/problems/trim-a-binary-search-tree/discuss/112503/Clean-Java-solution-with-explanation-and-video-link"
        }
    ],
    "670": [
        {
            "discussion_title": "Java simple solution, O(n) time",
            "discussion_vote": "87",
            "discussion_views": "15.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-swap/discuss/107068/Java-simple-solution-O(n)-time"
        },
        {
            "discussion_title": "C++ one-pass simple & fast solution: 1-3ms, O(n) time",
            "discussion_vote": "35",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/maximum-swap/discuss/107073/C%2B%2B-one-pass-simple-and-fast-solution%3A-1-3ms-O(n)-time"
        },
        {
            "discussion_title": "[C++] 3ms, O(n) time, O(n) space, DP solution",
            "discussion_vote": "18",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-swap/discuss/107084/C%2B%2B-3ms-O(n)-time-O(n)-space-DP-solution"
        },
        {
            "discussion_title": "Simple AC O(n) java solution with ex",
            "discussion_vote": "14",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/maximum-swap/discuss/107102/Simple-AC-O(n)-java-solution-with-ex"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "13",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/maximum-swap/discuss/107066/Python-Straightforward-with-Explanation"
        }
    ],
    "671": [
        {
            "discussion_title": "Java divide and conquer solution",
            "discussion_vote": "28",
            "discussion_views": "8.2K",
            "discussion_link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/discuss/107158/Java-divide-and-conquer-solution"
        },
        {
            "discussion_title": "C++, DFS recursion",
            "discussion_vote": "24",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/discuss/107159/C%2B%2B-DFS-recursion"
        },
        {
            "discussion_title": "Python Extremely Easy To Understand (Beats 91%)",
            "discussion_vote": "16",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/discuss/107165/Python-Extremely-Easy-To-Understand-(Beats-91)"
        },
        {
            "discussion_title": "Java 4 lines",
            "discussion_vote": "15",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/discuss/107233/Java-4-lines"
        },
        {
            "discussion_title": "Very simple Java solution",
            "discussion_vote": "7",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/discuss/107164/Very-simple-Java-solution"
        }
    ],
    "672": [
        {
            "discussion_title": "Java O(1)",
            "discussion_vote": "42",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher-ii/discuss/107269/Java-O(1)"
        },
        {
            "discussion_title": "C++, concise code, O(1)",
            "discussion_vote": "21",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher-ii/discuss/107271/C%2B%2B-concise-code-O(1)"
        },
        {
            "discussion_title": "Short and Clean Java O(1) Solution",
            "discussion_vote": "17",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher-ii/discuss/107272/Short-and-Clean-Java-O(1)-Solution"
        },
        {
            "discussion_title": "Python, Straightforward with Explanation",
            "discussion_vote": "13",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher-ii/discuss/107267/Python-Straightforward-with-Explanation"
        },
        {
            "discussion_title": "Easy to understand Java BFS solution O(m)",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/bulb-switcher-ii/discuss/107270/Easy-to-understand-Java-BFS-solution-O(m)"
        }
    ],
    "673": [
        {
            "discussion_title": "[Java/C++] Simple dp solution with explanation",
            "discussion_vote": "76",
            "discussion_views": "17.2K",
            "discussion_link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/discuss/107293/JavaC%2B%2B-Simple-dp-solution-with-explanation"
        },
        {
            "discussion_title": "C++, DP with explanation, O(n^2)",
            "discussion_vote": "19",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/discuss/107318/C%2B%2B-DP-with-explanation-O(n2)"
        },
        {
            "discussion_title": "Python DP with explanation (Beats 88%)",
            "discussion_vote": "11",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/discuss/107320/Python-DP-with-explanation-(Beats-88)"
        },
        {
            "discussion_title": "9ms [C++] Explanation: DP + Binary search + prefix sums O(NlogN) time; O(N) space",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/discuss/107295/9ms-C%2B%2B-Explanation%3A-DP-%2B-Binary-search-%2B-prefix-sums-O(NlogN)-time-O(N)-space"
        },
        {
            "discussion_title": "python DP solution with DETAILED explanation",
            "discussion_vote": "8",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/discuss/107303/python-DP-solution-with-DETAILED-explanation"
        }
    ],
    "674": [
        {
            "discussion_title": "[Java/C++]Clean solution",
            "discussion_vote": "26",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/discuss/107365/JavaC%2B%2BClean-solution"
        },
        {
            "discussion_title": "Python Simple Solution",
            "discussion_vote": "11",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/discuss/107392/Python-Simple-Solution"
        },
        {
            "discussion_title": "Java code---6 liner",
            "discussion_vote": "10",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/discuss/107352/Java-code-6-liner"
        },
        {
            "discussion_title": "Java solution, DP",
            "discussion_vote": "6",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/discuss/107351/Java-solution-DP"
        },
        {
            "discussion_title": "[C++/Java] Clean Code - 3 liner [2 Pointers]",
            "discussion_vote": "5",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/discuss/107389/C%2B%2BJava-Clean-Code-3-liner-2-Pointers"
        }
    ],
    "675": [
        {
            "discussion_title": "Java solution, PriorityQueue + BFS",
            "discussion_vote": "47",
            "discussion_views": "9.7K",
            "discussion_link": "https://leetcode.com/problems/cut-off-trees-for-golf-event/discuss/107404/Java-solution-PriorityQueue-%2B-BFS"
        },
        {
            "discussion_title": "Very simple Python BFS,  But Why TLE??",
            "discussion_vote": "19",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/cut-off-trees-for-golf-event/discuss/107416/Very-simple-Python-BFS-But-Why-TLE"
        },
        {
            "discussion_title": "Python solution based on wufangjie's (Hadlock's algorithm?)",
            "discussion_vote": "15",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/cut-off-trees-for-golf-event/discuss/107396/Python-solution-based-on-wufangjie's-(Hadlock's-algorithm)"
        },
        {
            "discussion_title": "my python solution, inspired by A* algorithm",
            "discussion_vote": "10",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/cut-off-trees-for-golf-event/discuss/107415/my-python-solution-inspired-by-A*-algorithm"
        },
        {
            "discussion_title": "C++, Sort + BFS with explanation",
            "discussion_vote": "7",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/cut-off-trees-for-golf-event/discuss/107403/C%2B%2B-Sort-%2B-BFS-with-explanation"
        }
    ],
    "676": [
        {
            "discussion_title": "Easy 14 lines Java solution, HashMap",
            "discussion_vote": "53",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/implement-magic-dictionary/discuss/107446/Easy-14-lines-Java-solution-HashMap"
        },
        {
            "discussion_title": "Python, without *26 factor in complexity",
            "discussion_vote": "23",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/implement-magic-dictionary/discuss/107454/Python-without-*26-factor-in-complexity"
        },
        {
            "discussion_title": "Easiest JAVA with Trie, no need to count the number of changes",
            "discussion_vote": "13",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/implement-magic-dictionary/discuss/107453/Easiest-JAVA-with-Trie-no-need-to-count-the-number-of-changes"
        },
        {
            "discussion_title": "Easy Java Solution",
            "discussion_vote": "7",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/implement-magic-dictionary/discuss/107507/Easy-Java-Solution"
        },
        {
            "discussion_title": "Python intuitive solution using dictionary",
            "discussion_vote": "6",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/implement-magic-dictionary/discuss/107466/Python-intuitive-solution-using-dictionary"
        }
    ],
    "677": [
        {
            "discussion_title": "Java solution, Trie",
            "discussion_vote": "22",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/map-sum-pairs/discuss/107513/Java-solution-Trie"
        },
        {
            "discussion_title": "C++, Easy solution, ordered map",
            "discussion_vote": "15",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/map-sum-pairs/discuss/107520/C%2B%2B-Easy-solution-ordered-map"
        },
        {
            "discussion_title": "Simple Java HashMap Solution - O(1) sum, and O(len(key)) insert",
            "discussion_vote": "11",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/map-sum-pairs/discuss/107515/Simple-Java-HashMap-Solution-O(1)-sum-and-O(len(key))-insert"
        },
        {
            "discussion_title": "Python easy and concise 3 lines solution",
            "discussion_vote": "7",
            "discussion_views": "458",
            "discussion_link": "https://leetcode.com/problems/map-sum-pairs/discuss/107551/Python-easy-and-concise-3-lines-solution"
        },
        {
            "discussion_title": "Python Efficient O(k) Insert and Sum using Trie",
            "discussion_vote": "6",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/map-sum-pairs/discuss/107508/Python-Efficient-O(k)-Insert-and-Sum-using-Trie"
        }
    ],
    "678": [
        {
            "discussion_title": "Short Java O(n) time, O(1) space, one pass",
            "discussion_vote": "144",
            "discussion_views": "11.8K",
            "discussion_link": "https://leetcode.com/problems/valid-parenthesis-string/discuss/107577/Short-Java-O(n)-time-O(1)-space-one-pass"
        },
        {
            "discussion_title": "Java 12 lines solution, backtracking",
            "discussion_vote": "68",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/valid-parenthesis-string/discuss/107566/Java-12-lines-solution-backtracking"
        },
        {
            "discussion_title": "Very concise C++ solution with explaination. No DP",
            "discussion_vote": "37",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/valid-parenthesis-string/discuss/107611/Very-concise-C%2B%2B-solution-with-explaination.-No-DP"
        },
        {
            "discussion_title": "Java using 2 stacks.  O(n) space and time complexity.",
            "discussion_vote": "23",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/valid-parenthesis-string/discuss/107572/Java-using-2-stacks.-O(n)-space-and-time-complexity."
        },
        {
            "discussion_title": "Java, Very easy solution. No recursion or dp.",
            "discussion_vote": "22",
            "discussion_views": "939",
            "discussion_link": "https://leetcode.com/problems/valid-parenthesis-string/discuss/139759/Java-Very-easy-solution.-No-recursion-or-dp."
        }
    ],
    "679": [
        {
            "discussion_title": "\\ub5a2\\ube3b\\uac01\\uac4e\\ub0c7\\uac05\\uac38\\uae9a\\ubd5f\\uc223\\uc684\\ubd74\\ubd5e\\ub93c\\uac08\\uac0c\\ub914\\ub58c\\uc60a\\uba54\\ub284\\uc22d\\uceb8\\uae36\\uae9b\\uc616\\uac0d\\ub1d0\\uca62\\uacf4\\ub4c7\\uac6f\\uad84\\uc615\\uc679\\ub21e\\uc1b4\\uac43\\ub057\\uae2c\\ub549\\uadbf\\uac00\\uc300\\ub090\\uac44\\uc224\\ubeb4\\ub298\\uac58\\uaf78\\uc222\\uac42\\uac0b\\uac03\\ucad0\\uaf14\\uc1be\\uca61\\uc1d4\\uc1bf\\ub05b\\ub91c\\uac04\\ube3a\\uca6c\\uc6e8\\ub534\\uc620\\ub91b\\uac02\\ubd6a\\ub360\\ub1a4\\ube50\\uc60b\\uadd2\\ub282\\uac30\\uac16\\ub1a5\\uadbe\\uac06\\uc60c\\ubf18\\ubb30\\uac70\\uac0e\\uae37\\ub0a4\\uacbc",
            "discussion_vote": "66",
            "discussion_views": "10.0K",
            "discussion_link": "https://leetcode.com/problems/24-game/discuss/107670/ub5a2ube3buac01uac4eub0c7uac05uac38uae9aubd5fuc223uc684ubd74ubd5eub93cuac08uac0cub914ub58cuc60auba54ub284uc22duceb8uae36uae9buc616uac0dub1d0uca62uacf4ub4c7uac6fuad84uc615uc679ub21euc1b4uac43ub057uae2cub549uadbfuac00uc300ub090uac44uc224ubeb4ub298uac58uaf78uc222uac42uac0buac03ucad0uaf14uc1beuca61uc1d4uc1bfub05bub91cuac04ube3auca6cuc6e8ub534uc620ub91buac02ubd6aub360ub1a4ube50uc60buadd2ub282uac30uac16ub1a5uadbeuac06uc60cubf18ubb30uac70uac0euae37ub0a4uacbc"
        },
        {
            "discussion_title": "[JAVA] Easy to understand. Backtracking.",
            "discussion_vote": "48",
            "discussion_views": "11.0K",
            "discussion_link": "https://leetcode.com/problems/24-game/discuss/107673/JAVA-Easy-to-understand.-Backtracking."
        },
        {
            "discussion_title": "Short Python",
            "discussion_vote": "25",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/24-game/discuss/107675/Short-Python"
        },
        {
            "discussion_title": "C++, Concise code",
            "discussion_vote": "24",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/24-game/discuss/107678/C%2B%2B-Concise-code"
        },
        {
            "discussion_title": "\u5c0f\u65f6\u5019\u771f\u7684\u73a9\u513f\u8fc7\u8fd9\u4e2a\u6e38\u620f",
            "discussion_vote": "15",
            "discussion_views": "724",
            "discussion_link": "https://leetcode.com/problems/24-game/discuss/134210/topic"
        }
    ],
    "680": [
        {
            "discussion_title": "Java O(n) Time O(1) Space",
            "discussion_vote": "56",
            "discussion_views": "19.1K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome-ii/discuss/107716/Java-O(n)-Time-O(1)-Space"
        },
        {
            "discussion_title": "Easy to Understand Python Solution",
            "discussion_vote": "44",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome-ii/discuss/107718/Easy-to-Understand-Python-Solution"
        },
        {
            "discussion_title": "Java solution, isPalindrome",
            "discussion_vote": "30",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome-ii/discuss/107714/Java-solution-isPalindrome"
        },
        {
            "discussion_title": "Easy and concise solution [C++/Java/Python] ",
            "discussion_vote": "27",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome-ii/discuss/107720/Easy-and-concise-solution-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "[C++/Java] Clean Code - 2 liner - Generic for \"you may delete at most N character\"",
            "discussion_vote": "15",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/valid-palindrome-ii/discuss/107717/C%2B%2BJava-Clean-Code-2-liner-Generic-for-%22you-may-delete-at-most-N-character%22"
        }
    ],
    "682": [
        {
            "discussion_title": "Straightforward Python",
            "discussion_vote": "23",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/baseball-game/discuss/107871/Straightforward-Python"
        },
        {
            "discussion_title": "Verbose Java solution, LinkedList",
            "discussion_vote": "17",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/baseball-game/discuss/107860/Verbose-Java-solution-LinkedList"
        },
        {
            "discussion_title": "[C++] Clean Code",
            "discussion_vote": "8",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/baseball-game/discuss/107859/C%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Simple C++ using vector",
            "discussion_vote": "8",
            "discussion_views": "743",
            "discussion_link": "https://leetcode.com/problems/baseball-game/discuss/107929/Simple-C%2B%2B-using-vector"
        },
        {
            "discussion_title": "JAVA very concise and easy to understand using stack",
            "discussion_vote": "5",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/baseball-game/discuss/107873/JAVA-very-concise-and-easy-to-understand-using-stack"
        }
    ],
    "684": [
        {
            "discussion_title": "Beats 97.96% Union Find Java with Explanations",
            "discussion_vote": "58",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection/discuss/123819/Beats-97.96-Union-Find-Java-with-Explanations"
        },
        {
            "discussion_title": "10 line Java solution, Union Find.",
            "discussion_vote": "44",
            "discussion_views": "14.0K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection/discuss/107984/10-line-Java-solution-Union-Find."
        },
        {
            "discussion_title": "Unicode-Find (5 short lines)",
            "discussion_vote": "29",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection/discuss/108002/Unicode-Find-(5-short-lines)"
        },
        {
            "discussion_title": "Why does this(Input: [[2,3],[5,2],[1,5],[4,2],[4,1]] Output: [4,2] Expected: [4,1] ) happens?",
            "discussion_vote": "16",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection/discuss/107998/Why-does-this(Input%3A-2352154241-Output%3A-42-Expected%3A-41-)-happens"
        },
        {
            "discussion_title": "C++ solution  using union find",
            "discussion_vote": "13",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection/discuss/108010/C%2B%2B-solution-using-union-find"
        }
    ],
    "685": [
        {
            "discussion_title": "C++/Java, Union Find with explanation, O(n)",
            "discussion_vote": "211",
            "discussion_views": "17.7K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection-ii/discuss/108045/C%2B%2BJava-Union-Find-with-explanation-O(n)"
        },
        {
            "discussion_title": "one pass disjoint set solution with explain",
            "discussion_vote": "58",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection-ii/discuss/108058/one-pass-disjoint-set-solution-with-explain"
        },
        {
            "discussion_title": "Python O(N) concise solution with detailed explanation, passed updated testcases",
            "discussion_vote": "22",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection-ii/discuss/108070/Python-O(N)-concise-solution-with-detailed-explanation-passed-updated-testcases"
        },
        {
            "discussion_title": "Share my solution, C++",
            "discussion_vote": "22",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection-ii/discuss/108073/Share-my-solution-C%2B%2B"
        },
        {
            "discussion_title": "Easiest understanding Java Solution, using Union Find O(n).",
            "discussion_vote": "20",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/redundant-connection-ii/discuss/112569/Easiest-understanding-Java-Solution-using-Union-Find-O(n)."
        }
    ],
    "686": [
        {
            "discussion_title": "C++ 4 lines O(m * n) | O(1) and KMP O(m + n) | O(n)",
            "discussion_vote": "40",
            "discussion_views": "14.1K",
            "discussion_link": "https://leetcode.com/problems/repeated-string-match/discuss/108084/C%2B%2B-4-lines-O(m-*-n)-or-O(1)-and-KMP-O(m-%2B-n)-or-O(n)"
        },
        {
            "discussion_title": "Intuitive Python 2-liner",
            "discussion_vote": "37",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/repeated-string-match/discuss/108090/Intuitive-Python-2-liner"
        },
        {
            "discussion_title": "Java Solution - Just keep building (OJ Missing Test Cases)",
            "discussion_vote": "36",
            "discussion_views": "15.4K",
            "discussion_link": "https://leetcode.com/problems/repeated-string-match/discuss/108086/Java-Solution-Just-keep-building-(OJ-Missing-Test-Cases)"
        },
        {
            "discussion_title": "share my java solution!",
            "discussion_vote": "15",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/repeated-string-match/discuss/108113/share-my-java-solution!"
        },
        {
            "discussion_title": "Understandable Python Solution",
            "discussion_vote": "11",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/repeated-string-match/discuss/108098/Understandable-Python-Solution"
        }
    ],
    "687": [
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "53",
            "discussion_views": "19.2K",
            "discussion_link": "https://leetcode.com/problems/longest-univalue-path/discuss/108136/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "java solution with global variable",
            "discussion_vote": "49",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/longest-univalue-path/discuss/108175/java-solution-with-global-variable"
        },
        {
            "discussion_title": "Python Simple to Understand",
            "discussion_vote": "37",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/longest-univalue-path/discuss/108142/Python-Simple-to-Understand"
        },
        {
            "discussion_title": "Java Solution With Explanation",
            "discussion_vote": "17",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/longest-univalue-path/discuss/130315/Java-Solution-With-Explanation"
        },
        {
            "discussion_title": "test cases incorrect",
            "discussion_vote": "13",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/longest-univalue-path/discuss/108140/test-cases-incorrect"
        }
    ],
    "688": [
        {
            "discussion_title": "My accepted DP solution",
            "discussion_vote": "25",
            "discussion_views": "8.3K",
            "discussion_link": "https://leetcode.com/problems/knight-probability-in-chessboard/discuss/108181/My-accepted-DP-solution"
        },
        {
            "discussion_title": "My easy understand dp solution",
            "discussion_vote": "14",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/knight-probability-in-chessboard/discuss/108214/My-easy-understand-dp-solution"
        },
        {
            "discussion_title": "Evolve from recursive to dp,beats 94%",
            "discussion_vote": "12",
            "discussion_views": "865",
            "discussion_link": "https://leetcode.com/problems/knight-probability-in-chessboard/discuss/113954/Evolve-from-recursive-to-dpbeats-94"
        },
        {
            "discussion_title": "C++/Java, DP, concise solution",
            "discussion_vote": "8",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/knight-probability-in-chessboard/discuss/108187/C%2B%2BJava-DP-concise-solution"
        },
        {
            "discussion_title": "Simple Java DP solution with explanation",
            "discussion_vote": "7",
            "discussion_views": "439",
            "discussion_link": "https://leetcode.com/problems/knight-probability-in-chessboard/discuss/162722/Simple-Java-DP-solution-with-explanation"
        }
    ],
    "689": [
        {
            "discussion_title": "C++/Java, DP with explanation, O(n)",
            "discussion_vote": "99",
            "discussion_views": "19.0K",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/discuss/108231/C%2B%2BJava-DP-with-explanation-O(n)"
        },
        {
            "discussion_title": "Python o(n) time, o(1) space. Greedy solution.",
            "discussion_vote": "62",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/discuss/108238/Python-o(n)-time-o(1)-space.-Greedy-solution."
        },
        {
            "discussion_title": "Clean Java DP O(n) Solution. Easy extend to Sum of K Non-Overlapping SubArrays.",
            "discussion_vote": "47",
            "discussion_views": "7.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/discuss/108230/Clean-Java-DP-O(n)-Solution.-Easy-extend-to-Sum-of-K-Non-Overlapping-SubArrays."
        },
        {
            "discussion_title": "Java DP O(n) solution. Explanation inline. ",
            "discussion_vote": "9",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/discuss/130666/Java-DP-O(n)-solution.-Explanation-inline."
        },
        {
            "discussion_title": "C++ O(n) time O(n) space concise solution",
            "discussion_vote": "7",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/discuss/108246/C%2B%2B-O(n)-time-O(n)-space-concise-solution"
        }
    ],
    "690": [
        {
            "discussion_title": "Java HashMap bfs dfs",
            "discussion_vote": "24",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/employee-importance/discuss/112587/Java-HashMap-bfs-dfs"
        },
        {
            "discussion_title": "I literally didn't understand the data type of `employees` from the question",
            "discussion_vote": "19",
            "discussion_views": "925",
            "discussion_link": "https://leetcode.com/problems/employee-importance/discuss/112589/I-literally-didn't-understand-the-data-type-of-employees-from-the-question"
        },
        {
            "discussion_title": "3-liner Python Solution (beats 99%)",
            "discussion_vote": "12",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/employee-importance/discuss/112611/3-liner-Python-Solution-(beats-99)"
        },
        {
            "discussion_title": "C++ DFS using STL",
            "discussion_vote": "7",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/employee-importance/discuss/112593/C%2B%2B-DFS-using-STL"
        },
        {
            "discussion_title": "Java 5-liner",
            "discussion_vote": "6",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/employee-importance/discuss/112607/Java-5-liner"
        }
    ],
    "691": [
        {
            "discussion_title": "C++/Java/Python, DP + Memoization with optimization, 29 ms (C++)",
            "discussion_vote": "47",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/stickers-to-spell-word/discuss/108318/C%2B%2BJavaPython-DP-%2B-Memoization-with-optimization-29-ms-(C%2B%2B)"
        },
        {
            "discussion_title": "Rewrite of contest winner's solution",
            "discussion_vote": "8",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/stickers-to-spell-word/discuss/108333/Rewrite-of-contest-winner's-solution"
        },
        {
            "discussion_title": "Explaining StefanPochmann's Rewrite of contest winner's solution & +java",
            "discussion_vote": "5",
            "discussion_views": "939",
            "discussion_link": "https://leetcode.com/problems/stickers-to-spell-word/discuss/108334/Explaining-StefanPochmann's-Rewrite-of-contest-winner's-solution-and-%2Bjava"
        },
        {
            "discussion_title": "java BFS solution",
            "discussion_vote": "3",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/stickers-to-spell-word/discuss/108315/java-BFS-solution"
        },
        {
            "discussion_title": "C++ BFS solution",
            "discussion_vote": "2",
            "discussion_views": "227",
            "discussion_link": "https://leetcode.com/problems/stickers-to-spell-word/discuss/108323/C%2B%2B-BFS-solution"
        }
    ],
    "692": [
        {
            "discussion_title": "My simple Java solution using HashMap & PriorityQueue - O(nlogk) time & O(n) space",
            "discussion_vote": "38",
            "discussion_views": "15.5K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-words/discuss/108346/My-simple-Java-solution-using-HashMap-and-PriorityQueue-O(nlogk)-time-and-O(n)-space"
        },
        {
            "discussion_title": "Java O(n) solution using HashMap, BucketSort and Trie - 22ms Beat 81%",
            "discussion_vote": "28",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-words/discuss/108399/Java-O(n)-solution-using-HashMap-BucketSort-and-Trie-22ms-Beat-81"
        },
        {
            "discussion_title": "Python 3 solution with O(nlogk) and O(n)",
            "discussion_vote": "23",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-words/discuss/108348/Python-3-solution-with-O(nlogk)-and-O(n)"
        },
        {
            "discussion_title": "O(nlog(k)) Priority Queue C++ code",
            "discussion_vote": "18",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-words/discuss/108366/O(nlog(k))-Priority-Queue-C%2B%2B-code"
        },
        {
            "discussion_title": "Simplest Python Solution",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/top-k-frequent-words/discuss/108355/Simplest-Python-Solution"
        }
    ],
    "693": [
        {
            "discussion_title": "Oneliners (C++, Java, Ruby, Python)",
            "discussion_vote": "57",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/binary-number-with-alternating-bits/discuss/108427/Oneliners-(C%2B%2B-Java-Ruby-Python)"
        },
        {
            "discussion_title": "Java super simple explanation with inline example",
            "discussion_vote": "29",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/binary-number-with-alternating-bits/discuss/113933/Java-super-simple-explanation-with-inline-example"
        },
        {
            "discussion_title": "C++, concise code",
            "discussion_vote": "19",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/binary-number-with-alternating-bits/discuss/108468/C%2B%2B-concise-code"
        },
        {
            "discussion_title": "Why not give the fu*king precise definition of the fuc*king \"Alternating bits\"?",
            "discussion_vote": "17",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/binary-number-with-alternating-bits/discuss/108460/Why-not-give-the-fu*king-precise-definition-of-the-fuc*king-%22Alternating-bits%22"
        },
        {
            "discussion_title": "easy python",
            "discussion_vote": "13",
            "discussion_views": "665",
            "discussion_link": "https://leetcode.com/problems/binary-number-with-alternating-bits/discuss/108456/easy-python"
        }
    ],
    "695": [
        {
            "discussion_title": "[Java/C++] Straightforward  dfs solution",
            "discussion_vote": "53",
            "discussion_views": "16.2K",
            "discussion_link": "https://leetcode.com/problems/max-area-of-island/discuss/108533/JavaC%2B%2B-Straightforward-dfs-solution"
        },
        {
            "discussion_title": "easy python",
            "discussion_vote": "45",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/max-area-of-island/discuss/108541/easy-python"
        },
        {
            "discussion_title": "Very simple DFS Java solution",
            "discussion_vote": "16",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/max-area-of-island/discuss/108529/Very-simple-DFS-Java-solution"
        },
        {
            "discussion_title": "4 lines",
            "discussion_vote": "11",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/max-area-of-island/discuss/108565/4-lines"
        },
        {
            "discussion_title": "C++, BFS/DFS, concise code",
            "discussion_vote": "11",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/max-area-of-island/discuss/108578/C%2B%2B-BFSDFS-concise-code"
        }
    ],
    "696": [
        {
            "discussion_title": "Java O(n) Time O(1) Space",
            "discussion_vote": "113",
            "discussion_views": "9.0K",
            "discussion_link": "https://leetcode.com/problems/count-binary-substrings/discuss/108600/Java-O(n)-Time-O(1)-Space"
        },
        {
            "discussion_title": "[Python/C++/Java] Easy and Concise with Explanation",
            "discussion_vote": "95",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/count-binary-substrings/discuss/108625/PythonC%2B%2BJava-Easy-and-Concise-with-Explanation"
        },
        {
            "discussion_title": "Acceptable JAVA solution with explaination",
            "discussion_vote": "28",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/count-binary-substrings/discuss/108610/Acceptable-JAVA-solution-with-explaination"
        },
        {
            "discussion_title": "Python intuitive approaches with explanation (3-liner)",
            "discussion_vote": "9",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/count-binary-substrings/discuss/108626/Python-intuitive-approaches-with-explanation-(3-liner)"
        },
        {
            "discussion_title": "C++ easy understanding solution",
            "discussion_vote": "8",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/count-binary-substrings/discuss/108585/C%2B%2B-easy-understanding-solution"
        }
    ],
    "697": [
        {
            "discussion_title": "The example for this question is poor",
            "discussion_vote": "43",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/degree-of-an-array/discuss/108682/The-example-for-this-question-is-poor"
        },
        {
            "discussion_title": "Easy understand Java Solution (Beats 100% solutions)",
            "discussion_vote": "39",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/degree-of-an-array/discuss/108650/Easy-understand-Java-Solution-(Beats-100-solutions)"
        },
        {
            "discussion_title": "straightforward c++ solution, 35ms",
            "discussion_vote": "23",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/degree-of-an-array/discuss/108651/straightforward-c%2B%2B-solution-35ms"
        },
        {
            "discussion_title": "[C++/Java/Python] one-pass and O(M) space",
            "discussion_vote": "18",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/degree-of-an-array/discuss/124317/C%2B%2BJavaPython-one-pass-and-O(M)-space"
        },
        {
            "discussion_title": "Python easy and concise solution",
            "discussion_vote": "12",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/degree-of-an-array/discuss/108666/Python-easy-and-concise-solution"
        }
    ],
    "698": [
        {
            "discussion_title": "[Java/C++]Straightforward dfs solution",
            "discussion_vote": "63",
            "discussion_views": "20.1K",
            "discussion_link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/discuss/108730/JavaC%2B%2BStraightforward-dfs-solution"
        },
        {
            "discussion_title": "Easy to understand java solution",
            "discussion_vote": "15",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/discuss/108751/Easy-to-understand-java-solution"
        },
        {
            "discussion_title": "Cpp solution with explanation in details",
            "discussion_vote": "8",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/discuss/108741/Cpp-solution-with-explanation-in-details"
        },
        {
            "discussion_title": "Clear explanation, easy to understand C++ : 4ms beat 100%",
            "discussion_vote": "6",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/discuss/140541/Clear-explanation-easy-to-understand-C%2B%2B-%3A-4ms-beat-100"
        },
        {
            "discussion_title": "C++ 3ms DFS solution with pruning",
            "discussion_vote": "6",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/discuss/108733/C%2B%2B-3ms-DFS-solution-with-pruning"
        }
    ],
    "699": [
        {
            "discussion_title": "Easy Understood O(n^2) Solution with explanation",
            "discussion_vote": "29",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/falling-squares/discuss/108766/Easy-Understood-O(n2)-Solution-with-explanation"
        },
        {
            "discussion_title": "Treemap solution and Segment tree (Java) solution with lazy propagation and coordinates compression",
            "discussion_vote": "19",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/falling-squares/discuss/112678/Treemap-solution-and-Segment-tree-(Java)-solution-with-lazy-propagation-and-coordinates-compression"
        },
        {
            "discussion_title": "Easy Understood TreeMap Solution",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/falling-squares/discuss/108775/Easy-Understood-TreeMap-Solution"
        },
        {
            "discussion_title": "Easy and Concise Python Solution (97%)",
            "discussion_vote": "9",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/falling-squares/discuss/108764/Easy-and-Concise-Python-Solution-(97)"
        },
        {
            "discussion_title": "Java 14ms, beats 99.38% using interval tree",
            "discussion_vote": "8",
            "discussion_views": "440",
            "discussion_link": "https://leetcode.com/problems/falling-squares/discuss/108765/Java-14ms-beats-99.38-using-interval-tree"
        }
    ],
    "700": [
        {
            "discussion_title": "Java beats 100% concise method using recursion and iteration",
            "discussion_vote": "15",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/search-in-a-binary-search-tree/discuss/149274/Java-beats-100-concise-method-using-recursion-and-iteration"
        },
        {
            "discussion_title": "Python 3 lines DFS solution w/ a very simple approach",
            "discussion_vote": "10",
            "discussion_views": "818",
            "discussion_link": "https://leetcode.com/problems/search-in-a-binary-search-tree/discuss/148890/Python-3-lines-DFS-solution-w-a-very-simple-approach"
        },
        {
            "discussion_title": "Concise iterative solution (C++)",
            "discussion_vote": "5",
            "discussion_views": "580",
            "discussion_link": "https://leetcode.com/problems/search-in-a-binary-search-tree/discuss/139687/Concise-iterative-solution-(C%2B%2B)"
        },
        {
            "discussion_title": "Swift bug",
            "discussion_vote": "4",
            "discussion_views": "216",
            "discussion_link": "https://leetcode.com/problems/search-in-a-binary-search-tree/discuss/151765/Swift-bug"
        },
        {
            "discussion_title": "Beats 100% Java code",
            "discussion_vote": "3",
            "discussion_views": "353",
            "discussion_link": "https://leetcode.com/problems/search-in-a-binary-search-tree/discuss/168564/Beats-100-Java-code"
        }
    ],
    "701": [
        {
            "discussion_title": "java iterative 100%",
            "discussion_vote": "14",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/discuss/150757/java-iterative-100"
        },
        {
            "discussion_title": "C++: very simple",
            "discussion_vote": "8",
            "discussion_views": "565",
            "discussion_link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/discuss/157064/C%2B%2B%3A-very-simple"
        },
        {
            "discussion_title": "Java easy to understand solution",
            "discussion_vote": "6",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/discuss/164137/Java-easy-to-understand-solution"
        },
        {
            "discussion_title": "[Java] Beats 100%.  Simple and Elegant solution",
            "discussion_vote": "4",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/discuss/151607/Java-Beats-100.-Simple-and-Elegant-solution"
        },
        {
            "discussion_title": "Python - 4 line clean recursive solution",
            "discussion_vote": "3",
            "discussion_views": "230",
            "discussion_link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/discuss/180244/Python-4-line-clean-recursive-solution"
        }
    ],
    "703": [
        {
            "discussion_title": "Python simple heapq solution beats 100 %",
            "discussion_vote": "26",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/discuss/148866/Python-simple-heapq-solution-beats-100"
        },
        {
            "discussion_title": "Explanation of MinHeap solution (NO CODE)",
            "discussion_vote": "23",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/discuss/152588/Explanation-of-MinHeap-solution-(NO-CODE)"
        },
        {
            "discussion_title": "Java, Priority Queue",
            "discussion_vote": "15",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/discuss/149050/Java-Priority-Queue"
        },
        {
            "discussion_title": "O(h) Java Solution Using BST",
            "discussion_vote": "8",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/discuss/147729/O(h)-Java-Solution-Using-BST"
        },
        {
            "discussion_title": "MinHeap solution",
            "discussion_vote": "6",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/kth-largest-element-in-a-stream/discuss/150400/MinHeap-solution"
        }
    ],
    "704": [
        {
            "discussion_title": "Python typical solutions beat 100 %",
            "discussion_vote": "12",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/binary-search/discuss/148840/Python-typical-solutions-beat-100"
        },
        {
            "discussion_title": "Java Solution",
            "discussion_vote": "4",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/binary-search/discuss/157435/Java-Solution"
        },
        {
            "discussion_title": "c++ solution",
            "discussion_vote": "2",
            "discussion_views": "456",
            "discussion_link": "https://leetcode.com/problems/binary-search/discuss/168585/c%2B%2B-solution"
        },
        {
            "discussion_title": "Python recursive + iterative easy to understand",
            "discussion_vote": "2",
            "discussion_views": "228",
            "discussion_link": "https://leetcode.com/problems/binary-search/discuss/167292/Python-recursive-%2B-iterative-easy-to-understand"
        },
        {
            "discussion_title": "JavaScript solution",
            "discussion_vote": "2",
            "discussion_views": "143",
            "discussion_link": "https://leetcode.com/problems/binary-search/discuss/152204/JavaScript-solution"
        }
    ],
    "705": [
        {
            "discussion_title": "Beats 100% Real Java Solution (Not boolean array)",
            "discussion_vote": "14",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/design-hashset/discuss/143434/Beats-100-Real-Java-Solution-(Not-boolean-array)"
        },
        {
            "discussion_title": "can you guys think before doing?",
            "discussion_vote": "11",
            "discussion_views": "849",
            "discussion_link": "https://leetcode.com/problems/design-hashset/discuss/170092/can-you-guys-think-before-doing"
        },
        {
            "discussion_title": "Python solution // Can we do better than boolean array ?",
            "discussion_vote": "8",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/design-hashset/discuss/148789/Python-solution-Can-we-do-better-than-boolean-array"
        },
        {
            "discussion_title": "C++ 97.97% without a massive array or using a map, BST",
            "discussion_vote": "4",
            "discussion_views": "269",
            "discussion_link": "https://leetcode.com/problems/design-hashset/discuss/179164/C%2B%2B-97.97-without-a-massive-array-or-using-a-map-BST"
        },
        {
            "discussion_title": "Description Error in \"Design HashSet\"",
            "discussion_vote": "4",
            "discussion_views": "776",
            "discussion_link": "https://leetcode.com/problems/design-hashset/discuss/133532/Description-Error-in-%22Design-HashSet%22"
        }
    ],
    "706": [
        {
            "discussion_title": "Java Solution",
            "discussion_vote": "38",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/design-hashmap/discuss/152746/Java-Solution"
        },
        {
            "discussion_title": "Java Simple Solution",
            "discussion_vote": "8",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/design-hashmap/discuss/175224/Java-Simple-Solution"
        },
        {
            "discussion_title": "Hash with Chaining [Python]",
            "discussion_vote": "4",
            "discussion_views": "268",
            "discussion_link": "https://leetcode.com/problems/design-hashmap/discuss/185347/Hash-with-Chaining-Python"
        },
        {
            "discussion_title": "Python straightforward solution, one line for each function",
            "discussion_vote": "4",
            "discussion_views": "717",
            "discussion_link": "https://leetcode.com/problems/design-hashmap/discuss/169659/Python-straightforward-solution-one-line-for-each-function"
        },
        {
            "discussion_title": "javascript solution: 104ms",
            "discussion_vote": "4",
            "discussion_views": "325",
            "discussion_link": "https://leetcode.com/problems/design-hashmap/discuss/137274/javascript-solution%3A-104ms"
        }
    ],
    "707": [
        {
            "discussion_title": "Python solution",
            "discussion_vote": "10",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/design-linked-list/discuss/139689/Python-solution"
        },
        {
            "discussion_title": "Python AC short & simple linked list solution",
            "discussion_vote": "7",
            "discussion_views": "834",
            "discussion_link": "https://leetcode.com/problems/design-linked-list/discuss/148773/Python-AC-short-and-simple-linked-list-solution"
        },
        {
            "discussion_title": "C++ SOLUTION -24ms",
            "discussion_vote": "5",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/design-linked-list/discuss/145380/C%2B%2B-SOLUTION-24ms"
        },
        {
            "discussion_title": "C++ deque",
            "discussion_vote": "2",
            "discussion_views": "222",
            "discussion_link": "https://leetcode.com/problems/design-linked-list/discuss/154116/C%2B%2B-deque"
        },
        {
            "discussion_title": "C++ simple solution, beats 97.27%!",
            "discussion_vote": "2",
            "discussion_views": "895",
            "discussion_link": "https://leetcode.com/problems/design-linked-list/discuss/150999/C%2B%2B-simple-solution-beats-97.27!"
        }
    ],
    "709": [
        {
            "discussion_title": "Java, no library methods",
            "discussion_vote": "32",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/to-lower-case/discuss/148993/Java-no-library-methods"
        },
        {
            "discussion_title": "Easy C++ Solution",
            "discussion_vote": "10",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/to-lower-case/discuss/152248/Easy-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Python short 1 line ASCII & string method solutions",
            "discussion_vote": "8",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/to-lower-case/discuss/148813/Python-short-1-line-ASCII-and-string-method-solutions"
        },
        {
            "discussion_title": "C Solution- 9 lines, 0ms (With Test Cases)",
            "discussion_vote": "3",
            "discussion_views": "182",
            "discussion_link": "https://leetcode.com/problems/to-lower-case/discuss/183741/C-Solution-9-lines-0ms-(With-Test-Cases)"
        },
        {
            "discussion_title": "Javascript solution (not using built in method)",
            "discussion_vote": "3",
            "discussion_views": "430",
            "discussion_link": "https://leetcode.com/problems/to-lower-case/discuss/153609/Javascript-solution-(not-using-built-in-method)"
        }
    ],
    "710": [
        {
            "discussion_title": "Java O(B) / O(1), HashMap",
            "discussion_vote": "54",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-blacklist/discuss/144624/Java-O(B)-O(1)-HashMap"
        },
        {
            "discussion_title": "[C++] DO NOT use rand() after C++11 !",
            "discussion_vote": "7",
            "discussion_views": "676",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-blacklist/discuss/146356/C%2B%2B-DO-NOT-use-rand()-after-C%2B%2B11-!"
        },
        {
            "discussion_title": "Simple Java solution with Binary Search",
            "discussion_vote": "3",
            "discussion_views": "486",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-blacklist/discuss/146545/Simple-Java-solution-with-Binary-Search"
        },
        {
            "discussion_title": "Super Simple Python AC w/ Remapping",
            "discussion_vote": "3",
            "discussion_views": "459",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-blacklist/discuss/146533/Super-Simple-Python-AC-w-Remapping"
        },
        {
            "discussion_title": "Python AC solution with a very simple approach",
            "discussion_vote": "3",
            "discussion_views": "503",
            "discussion_link": "https://leetcode.com/problems/random-pick-with-blacklist/discuss/144478/Python-AC-solution-with-a-very-simple-approach"
        }
    ],
    "712": [
        {
            "discussion_title": "C++, DP, with explanation",
            "discussion_vote": "33",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/discuss/108828/C%2B%2B-DP-with-explanation"
        },
        {
            "discussion_title": "Concise DP solution",
            "discussion_vote": "20",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/discuss/108810/Concise-DP-solution"
        },
        {
            "discussion_title": "[Java]{DP}(With Explanation)",
            "discussion_vote": "14",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/discuss/108811/JavaDP(With-Explanation)"
        },
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "11",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/discuss/108814/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "elegant python solution using dp",
            "discussion_vote": "6",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/discuss/108807/elegant-python-solution-using-dp"
        }
    ],
    "713": [
        {
            "discussion_title": "[Java/C++] Clean Code with Explanation",
            "discussion_vote": "50",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/subarray-product-less-than-k/discuss/108861/JavaC%2B%2B-Clean-Code-with-Explanation"
        },
        {
            "discussion_title": "Java Two Pointers O(n) time O(1) space",
            "discussion_vote": "16",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/subarray-product-less-than-k/discuss/108834/Java-Two-Pointers-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "C++, concise solution, O(n)",
            "discussion_vote": "10",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/subarray-product-less-than-k/discuss/108830/C%2B%2B-concise-solution-O(n)"
        },
        {
            "discussion_title": "Python solution with detailed explanation",
            "discussion_vote": "6",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/subarray-product-less-than-k/discuss/108846/Python-solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Straightforward Solution",
            "discussion_vote": "3",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/subarray-product-less-than-k/discuss/108832/Straightforward-Solution"
        }
    ],
    "714": [
        {
            "discussion_title": "Most consistent ways of dealing with the series of stock problems",
            "discussion_vote": "741",
            "discussion_views": "31.0K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/discuss/108870/Most-consistent-ways-of-dealing-with-the-series-of-stock-problems"
        },
        {
            "discussion_title": "2 solutions, 2 states DP solutions, clear explanation!",
            "discussion_vote": "62",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/discuss/108871/2-solutions-2-states-DP-solutions-clear-explanation!"
        },
        {
            "discussion_title": "C++, concise solution, O(n) time O(1) space",
            "discussion_vote": "40",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/discuss/108867/C%2B%2B-concise-solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "Java simple DP solutions. O(n)",
            "discussion_vote": "34",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/discuss/108868/Java-simple-DP-solutions.-O(n)"
        },
        {
            "discussion_title": "Java DP solution O(n) to O(1) space",
            "discussion_vote": "21",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/discuss/108892/Java-DP-solution-O(n)-to-O(1)-space"
        }
    ],
    "715": [
        {
            "discussion_title": "Java TreeMap",
            "discussion_vote": "33",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/range-module/discuss/108910/Java-TreeMap"
        },
        {
            "discussion_title": "C++, vector O(n) and map O(logn), compare two solutions",
            "discussion_vote": "21",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/range-module/discuss/108912/C%2B%2B-vector-O(n)-and-map-O(logn)-compare-two-solutions"
        },
        {
            "discussion_title": "Python",
            "discussion_vote": "13",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/range-module/discuss/108913/Python"
        },
        {
            "discussion_title": "C++ O(nlogn) based on disjoint intervals data structure",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/range-module/discuss/108923/C%2B%2B-O(nlogn)-based-on-disjoint-intervals-data-structure"
        },
        {
            "discussion_title": "clean python solution",
            "discussion_vote": "7",
            "discussion_views": "500",
            "discussion_link": "https://leetcode.com/problems/range-module/discuss/108911/clean-python-solution"
        }
    ],
    "717": [
        {
            "discussion_title": "JAVA, check only the end of array",
            "discussion_vote": "49",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/1-bit-and-2-bit-characters/discuss/108967/JAVA-check-only-the-end-of-array"
        },
        {
            "discussion_title": "Java solution, 1 or 2",
            "discussion_vote": "32",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/1-bit-and-2-bit-characters/discuss/108969/Java-solution-1-or-2"
        },
        {
            "discussion_title": "python solution, easy",
            "discussion_vote": "9",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/1-bit-and-2-bit-characters/discuss/109011/python-solution-easy"
        },
        {
            "discussion_title": "Easy to understand C++ solution with modified for loop",
            "discussion_vote": "7",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/1-bit-and-2-bit-characters/discuss/109008/Easy-to-understand-C%2B%2B-solution-with-modified-for-loop"
        },
        {
            "discussion_title": "Single Regular Expression - JS: ES6",
            "discussion_vote": "5",
            "discussion_views": "360",
            "discussion_link": "https://leetcode.com/problems/1-bit-and-2-bit-characters/discuss/108979/Single-Regular-Expression-JS%3A-ES6"
        }
    ],
    "718": [
        {
            "discussion_title": "Concise Java DP: Same idea of Longest Common Substring",
            "discussion_vote": "28",
            "discussion_views": "10.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109039/Concise-Java-DP%3A-Same-idea-of-Longest-Common-Substring"
        },
        {
            "discussion_title": "[Java/C++] Clean Code - 8 lines",
            "discussion_vote": "24",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109068/JavaC%2B%2B-Clean-Code-8-lines"
        },
        {
            "discussion_title": "Java O(mn) time, O(1) space",
            "discussion_vote": "12",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109040/Java-O(mn)-time-O(1)-space"
        },
        {
            "discussion_title": "Python Concise DP",
            "discussion_vote": "10",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109026/Python-Concise-DP"
        },
        {
            "discussion_title": "Simple O(nm) DP solution",
            "discussion_vote": "6",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109063/Simple-O(nm)-DP-solution"
        }
    ],
    "719": [
        {
            "discussion_title": "Approach the problem using the \"trial and error\" algorithm",
            "discussion_vote": "101",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/discuss/109082/Approach-the-problem-using-the-%22trial-and-error%22-algorithm"
        },
        {
            "discussion_title": "Java solution, Binary Search",
            "discussion_vote": "49",
            "discussion_views": "10.7K",
            "discussion_link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/discuss/109075/Java-solution-Binary-Search"
        },
        {
            "discussion_title": "C++, counting sort O(n^2) and binary search O(nlogn)",
            "discussion_vote": "16",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/discuss/109077/C%2B%2B-counting-sort-O(n2)-and-binary-search-O(nlogn)"
        },
        {
            "discussion_title": "Java very Easy and Short(15 lines Binary Search and Bucket Sort) solutions",
            "discussion_vote": "13",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/discuss/109094/Java-very-Easy-and-Short(15-lines-Binary-Search-and-Bucket-Sort)-solutions"
        },
        {
            "discussion_title": "Simple O(Nlog(max(a[i]))) solution using binary search",
            "discussion_vote": "8",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/discuss/109091/Simple-O(Nlog(max(ai)))-solution-using-binary-search"
        }
    ],
    "720": [
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "61",
            "discussion_views": "8.9K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary/discuss/109114/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Python Elegant and Extremely Easy to Understand",
            "discussion_vote": "25",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary/discuss/109150/Python-Elegant-and-Extremely-Easy-to-Understand"
        },
        {
            "discussion_title": "[JAVA 16ms (99%) @ 20180108] Trie+DFS: clean, easy, explained and illustrated",
            "discussion_vote": "19",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary/discuss/112720/JAVA-16ms-(99)-%40-20180108-Trie%2BDFS%3A-clean-easy-explained-and-illustrated"
        },
        {
            "discussion_title": "Java Solution with Trie + BFS",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary/discuss/109113/Java-Solution-with-Trie-%2B-BFS"
        },
        {
            "discussion_title": "1-liner",
            "discussion_vote": "10",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/longest-word-in-dictionary/discuss/109143/1-liner"
        }
    ],
    "721": [
        {
            "discussion_title": "[Java/C++] Union Find",
            "discussion_vote": "75",
            "discussion_views": "12.5K",
            "discussion_link": "https://leetcode.com/problems/accounts-merge/discuss/109157/JavaC%2B%2B-Union-Find"
        },
        {
            "discussion_title": "Java Solution (Build graph + DFS search)",
            "discussion_vote": "48",
            "discussion_views": "7.1K",
            "discussion_link": "https://leetcode.com/problems/accounts-merge/discuss/109158/Java-Solution-(Build-graph-%2B-DFS-search)"
        },
        {
            "discussion_title": "Python Simple DFS with explanation!!!",
            "discussion_vote": "32",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/accounts-merge/discuss/109161/Python-Simple-DFS-with-explanation!!!"
        },
        {
            "discussion_title": "Summary for DFS Templates",
            "discussion_vote": "19",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/accounts-merge/discuss/109162/Summary-for-DFS-Templates"
        },
        {
            "discussion_title": "HashMap plus union found solution using Java programming!",
            "discussion_vote": "8",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/accounts-merge/discuss/109160/HashMap-plus-union-found-solution-using-Java-programming!"
        }
    ],
    "722": [
        {
            "discussion_title": "One pass solution in Java",
            "discussion_vote": "37",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/remove-comments/discuss/109197/One-pass-solution-in-Java"
        },
        {
            "discussion_title": "1-liners",
            "discussion_vote": "24",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/remove-comments/discuss/109195/1-liners"
        },
        {
            "discussion_title": "Simple Python one-pass with clear inline explanation!!!",
            "discussion_vote": "14",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/remove-comments/discuss/109210/Simple-Python-one-pass-with-clear-inline-explanation!!!"
        },
        {
            "discussion_title": "C++ O(N) (one pass)",
            "discussion_vote": "10",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/remove-comments/discuss/109217/C%2B%2B-O(N)-(one-pass)"
        },
        {
            "discussion_title": "Just kill me",
            "discussion_vote": "9",
            "discussion_views": "552",
            "discussion_link": "https://leetcode.com/problems/remove-comments/discuss/160382/Just-kill-me"
        }
    ],
    "724": [
        {
            "discussion_title": "Short Python O(n) time O(1) space with Explanation",
            "discussion_vote": "45",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/find-pivot-index/discuss/109255/Short-Python-O(n)-time-O(1)-space-with-Explanation"
        },
        {
            "discussion_title": "This is a very poorly described problem",
            "discussion_vote": "33",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/find-pivot-index/discuss/136167/This-is-a-very-poorly-described-problem"
        },
        {
            "discussion_title": "Java 6 liner",
            "discussion_vote": "25",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/find-pivot-index/discuss/109249/Java-6-liner"
        },
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "18",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/find-pivot-index/discuss/109274/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Easy to understand c++ code ",
            "discussion_vote": "4",
            "discussion_views": "302",
            "discussion_link": "https://leetcode.com/problems/find-pivot-index/discuss/152005/Easy-to-understand-c%2B%2B-code"
        }
    ],
    "725": [
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "43",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/split-linked-list-in-parts/discuss/109296/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Elegant Python with Explanation - 45ms",
            "discussion_vote": "23",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/split-linked-list-in-parts/discuss/109284/Elegant-Python-with-Explanation-45ms"
        },
        {
            "discussion_title": "C++ Solution O(1) Space 9ms",
            "discussion_vote": "6",
            "discussion_views": "866",
            "discussion_link": "https://leetcode.com/problems/split-linked-list-in-parts/discuss/109305/C%2B%2B-Solution-O(1)-Space-9ms"
        },
        {
            "discussion_title": "Easy to Follow Python Solution",
            "discussion_vote": "5",
            "discussion_views": "375",
            "discussion_link": "https://leetcode.com/problems/split-linked-list-in-parts/discuss/109298/Easy-to-Follow-Python-Solution"
        },
        {
            "discussion_title": "Simple pythonic solution. Beats 100%",
            "discussion_vote": "3",
            "discussion_views": "134",
            "discussion_link": "https://leetcode.com/problems/split-linked-list-in-parts/discuss/139360/Simple-pythonic-solution.-Beats-100"
        }
    ],
    "726": [
        {
            "discussion_title": "Java Solution using Stack and Map",
            "discussion_vote": "23",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-atoms/discuss/109345/Java-Solution-using-Stack-and-Map"
        },
        {
            "discussion_title": "Neat Python with Explanation - 35ms",
            "discussion_vote": "12",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-atoms/discuss/109333/Neat-Python-with-Explanation-35ms"
        },
        {
            "discussion_title": "Python // 20 lines very readable, simplest and shortest solution // 36 ms // beats 100 %",
            "discussion_vote": "8",
            "discussion_views": "236",
            "discussion_link": "https://leetcode.com/problems/number-of-atoms/discuss/140802/Python-20-lines-very-readable-simplest-and-shortest-solution-36-ms-beats-100"
        },
        {
            "discussion_title": "[C++] Recursive Parser",
            "discussion_vote": "8",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-atoms/discuss/109335/C%2B%2B-Recursive-Parser"
        },
        {
            "discussion_title": "C++ iterative solution",
            "discussion_vote": "6",
            "discussion_views": "575",
            "discussion_link": "https://leetcode.com/problems/number-of-atoms/discuss/109328/C%2B%2B-iterative-solution"
        }
    ],
    "728": [
        {
            "discussion_title": "Python Elegant 2-liner!!!",
            "discussion_vote": "17",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/self-dividing-numbers/discuss/109445/Python-Elegant-2-liner!!!"
        },
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "10",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/self-dividing-numbers/discuss/109458/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "One-line Python (Learn some Python tricks that you might not know)",
            "discussion_vote": "9",
            "discussion_views": "610",
            "discussion_link": "https://leetcode.com/problems/self-dividing-numbers/discuss/162578/One-line-Python-(Learn-some-Python-tricks-that-you-might-not-know)"
        },
        {
            "discussion_title": "Java solution with explanation, no toString() conversion",
            "discussion_vote": "9",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/self-dividing-numbers/discuss/109424/Java-solution-with-explanation-no-toString()-conversion"
        },
        {
            "discussion_title": "My Javascript Solution",
            "discussion_vote": "7",
            "discussion_views": "589",
            "discussion_link": "https://leetcode.com/problems/self-dividing-numbers/discuss/109394/My-Javascript-Solution"
        }
    ],
    "729": [
        {
            "discussion_title": "Java 8 liner, TreeMap",
            "discussion_vote": "51",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-i/discuss/109462/Java-8-liner-TreeMap"
        },
        {
            "discussion_title": "[Java/C++] Clean Code with Explanation",
            "discussion_vote": "35",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-i/discuss/109475/JavaC%2B%2B-Clean-Code-with-Explanation"
        },
        {
            "discussion_title": "Binary Search Tree python",
            "discussion_vote": "16",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-i/discuss/109476/Binary-Search-Tree-python"
        },
        {
            "discussion_title": "[JAVA] Simple 6 line Solution, TreeMap lowerEntry",
            "discussion_vote": "9",
            "discussion_views": "439",
            "discussion_link": "https://leetcode.com/problems/my-calendar-i/discuss/109473/JAVA-Simple-6-line-Solution-TreeMap-lowerEntry"
        },
        {
            "discussion_title": "Short brute force python solution",
            "discussion_vote": "7",
            "discussion_views": "872",
            "discussion_link": "https://leetcode.com/problems/my-calendar-i/discuss/109463/Short-brute-force-python-solution"
        }
    ],
    "730": [
        {
            "discussion_title": "Java 96ms DP Solution with Detailed Explanation",
            "discussion_vote": "61",
            "discussion_views": "7.4K",
            "discussion_link": "https://leetcode.com/problems/count-different-palindromic-subsequences/discuss/109507/Java-96ms-DP-Solution-with-Detailed-Explanation"
        },
        {
            "discussion_title": "Accepted Java Solution using memoization",
            "discussion_vote": "33",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/count-different-palindromic-subsequences/discuss/109509/Accepted-Java-Solution-using-memoization"
        },
        {
            "discussion_title": "C++ O(N^2) time, O(N) memory with explanation",
            "discussion_vote": "23",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/count-different-palindromic-subsequences/discuss/109514/C%2B%2B-O(N2)-time-O(N)-memory-with-explanation"
        },
        {
            "discussion_title": "N^2 DP Python with Explanation",
            "discussion_vote": "14",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/count-different-palindromic-subsequences/discuss/109508/N2-DP-Python-with-Explanation"
        },
        {
            "discussion_title": "Java solution using simple DP. O(n^2) run time and O(n^2) space",
            "discussion_vote": "11",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/count-different-palindromic-subsequences/discuss/112757/Java-solution-using-simple-DP.-O(n2)-run-time-and-O(n2)-space"
        }
    ],
    "731": [
        {
            "discussion_title": "[Java/C++] Clean Code with Explanation",
            "discussion_vote": "57",
            "discussion_views": "11.1K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-ii/discuss/109519/JavaC%2B%2B-Clean-Code-with-Explanation"
        },
        {
            "discussion_title": "N^2 Python, Short and Elegant",
            "discussion_vote": "39",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-ii/discuss/109530/N2-Python-Short-and-Elegant"
        },
        {
            "discussion_title": "nlogd Java solution using segment tree with lazy propagation -- applicable to the general case of K-booking",
            "discussion_vote": "25",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-ii/discuss/109528/nlogd-Java-solution-using-segment-tree-with-lazy-propagation-applicable-to-the-general-case-of-K-booking"
        },
        {
            "discussion_title": "Simplified winner's solution",
            "discussion_vote": "17",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-ii/discuss/109522/Simplified-winner's-solution"
        },
        {
            "discussion_title": "Simple AC by TreeMap",
            "discussion_vote": "14",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-ii/discuss/109550/Simple-AC-by-TreeMap"
        }
    ],
    "732": [
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "63",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-iii/discuss/109556/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Question explanation please",
            "discussion_vote": "9",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-iii/discuss/109569/Question-explanation-please"
        },
        {
            "discussion_title": "C++ O(n) method",
            "discussion_vote": "8",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-iii/discuss/109558/C%2B%2B-O(n)-method"
        },
        {
            "discussion_title": "Is this a right test case?",
            "discussion_vote": "7",
            "discussion_views": "184",
            "discussion_link": "https://leetcode.com/problems/my-calendar-iii/discuss/112764/Is-this-a-right-test-case"
        },
        {
            "discussion_title": "Java Solution O(n log(len)) beats 100% Segment Tree",
            "discussion_vote": "7",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/my-calendar-iii/discuss/109568/Java-Solution-O(n-log(len))-beats-100-Segment-Tree"
        }
    ],
    "733": [
        {
            "discussion_title": "Java 9 liner, DFS",
            "discussion_vote": "18",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/flood-fill/discuss/109584/Java-9-liner-DFS"
        },
        {
            "discussion_title": "Easy Python DFS (no need for visited)!!!",
            "discussion_vote": "14",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/flood-fill/discuss/109604/Easy-Python-DFS-(no-need-for-visited)!!!"
        },
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "5",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/flood-fill/discuss/109613/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "C# DFS solution",
            "discussion_vote": "2",
            "discussion_views": "83",
            "discussion_link": "https://leetcode.com/problems/flood-fill/discuss/109576/C-DFS-solution"
        },
        {
            "discussion_title": "Java easy BFS",
            "discussion_vote": "2",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/flood-fill/discuss/109596/Java-easy-BFS"
        }
    ],
    "735": [
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "25",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/asteroid-collision/discuss/109694/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Python O(n) Stack-based with explanation",
            "discussion_vote": "14",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/asteroid-collision/discuss/109666/Python-O(n)-Stack-based-with-explanation"
        },
        {
            "discussion_title": "Java solution, Stack",
            "discussion_vote": "11",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/asteroid-collision/discuss/109703/Java-solution-Stack"
        },
        {
            "discussion_title": "Java solution - beat 90% - No extra space.",
            "discussion_vote": "7",
            "discussion_views": "789",
            "discussion_link": "https://leetcode.com/problems/asteroid-collision/discuss/109662/Java-solution-beat-90-No-extra-space."
        },
        {
            "discussion_title": "Stack Java solution",
            "discussion_vote": "4",
            "discussion_views": "612",
            "discussion_link": "https://leetcode.com/problems/asteroid-collision/discuss/109668/Stack-Java-solution"
        }
    ],
    "736": [
        {
            "discussion_title": "C++ recursion solution with explaination",
            "discussion_vote": "18",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/parse-lisp-expression/discuss/109721/C%2B%2B-recursion-solution-with-explaination"
        },
        {
            "discussion_title": "I don't think this problem is good one for interview to be honest",
            "discussion_vote": "13",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/parse-lisp-expression/discuss/109732/I-don't-think-this-problem-is-good-one-for-interview-to-be-honest"
        },
        {
            "discussion_title": "python solution using stacks.",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/parse-lisp-expression/discuss/109709/python-solution-using-stacks."
        },
        {
            "discussion_title": "A Clean Java Solution",
            "discussion_vote": "10",
            "discussion_views": "834",
            "discussion_link": "https://leetcode.com/problems/parse-lisp-expression/discuss/113902/A-Clean-Java-Solution"
        },
        {
            "discussion_title": "Java modularized solution",
            "discussion_vote": "5",
            "discussion_views": "428",
            "discussion_link": "https://leetcode.com/problems/parse-lisp-expression/discuss/109718/Java-modularized-solution"
        }
    ],
    "738": [
        {
            "discussion_title": "Simple and very short C++ solution",
            "discussion_vote": "31",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/monotone-increasing-digits/discuss/109811/Simple-and-very-short-C%2B%2B-solution"
        },
        {
            "discussion_title": "Simple Python solution w/ Explanation",
            "discussion_vote": "19",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/monotone-increasing-digits/discuss/109794/Simple-Python-solution-w-Explanation"
        },
        {
            "discussion_title": "Simple and very short Java solution",
            "discussion_vote": "13",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/monotone-increasing-digits/discuss/109788/Simple-and-very-short-Java-solution"
        },
        {
            "discussion_title": "easy java",
            "discussion_vote": "6",
            "discussion_views": "547",
            "discussion_link": "https://leetcode.com/problems/monotone-increasing-digits/discuss/109792/easy-java"
        },
        {
            "discussion_title": "Simple java solution with clear explanation. Very easy to understand.",
            "discussion_vote": "5",
            "discussion_views": "440",
            "discussion_link": "https://leetcode.com/problems/monotone-increasing-digits/discuss/128514/Simple-java-solution-with-clear-explanation.-Very-easy-to-understand."
        }
    ],
    "739": [
        {
            "discussion_title": "[Java] Easy AC Solution with Stack",
            "discussion_vote": "72",
            "discussion_views": "10.6K",
            "discussion_link": "https://leetcode.com/problems/daily-temperatures/discuss/109832/Java-Easy-AC-Solution-with-Stack"
        },
        {
            "discussion_title": "[C++] Clean code with explanation: O(n) time and O(1) space (beats 99.13%)",
            "discussion_vote": "21",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/daily-temperatures/discuss/121787/C%2B%2B-Clean-code-with-explanation%3A-O(n)-time-and-O(1)-space-(beats-99.13)"
        },
        {
            "discussion_title": "Elegant Python Solution with Stack",
            "discussion_vote": "18",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/daily-temperatures/discuss/136017/Elegant-Python-Solution-with-Stack"
        },
        {
            "discussion_title": "javascript stack solution with explaination",
            "discussion_vote": "13",
            "discussion_views": "306",
            "discussion_link": "https://leetcode.com/problems/daily-temperatures/discuss/157886/javascript-stack-solution-with-explaination"
        },
        {
            "discussion_title": "Simple Python by hashing the temperatures",
            "discussion_vote": "9",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/daily-temperatures/discuss/109858/Simple-Python-by-hashing-the-temperatures"
        }
    ],
    "740": [
        {
            "discussion_title": "[Java/C++] Clean Code with Explanation",
            "discussion_vote": "55",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/delete-and-earn/discuss/109895/JavaC%2B%2B-Clean-Code-with-Explanation"
        },
        {
            "discussion_title": "Awesome Python 4-liner with explanation - Reduce to House Robbers Question \\U0001f31d",
            "discussion_vote": "46",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/delete-and-earn/discuss/109871/Awesome-Python-4-liner-with-explanation-Reduce-to-House-Robbers-Question-U0001f31d"
        },
        {
            "discussion_title": "Sharing my Simple Straight Forward Java O(n) Solution -- Explanation Included",
            "discussion_vote": "17",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/delete-and-earn/discuss/109891/Sharing-my-Simple-Straight-Forward-Java-O(n)-Solution-Explanation-Included"
        },
        {
            "discussion_title": "[Java] Easy DP Solution",
            "discussion_vote": "12",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/delete-and-earn/discuss/109889/Java-Easy-DP-Solution"
        },
        {
            "discussion_title": "Java ------ 4 lines",
            "discussion_vote": "3",
            "discussion_views": "489",
            "discussion_link": "https://leetcode.com/problems/delete-and-earn/discuss/141004/Java-4-lines"
        }
    ],
    "741": [
        {
            "discussion_title": "Step by step guidance of the O(N^3) time and O(N^2) space solution",
            "discussion_vote": "71",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/cherry-pickup/discuss/109903/Step-by-step-guidance-of-the-O(N3)-time-and-O(N2)-space-solution"
        },
        {
            "discussion_title": "Annotated C++ DP Solution",
            "discussion_vote": "26",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/cherry-pickup/discuss/109906/Annotated-C%2B%2B-DP-Solution"
        },
        {
            "discussion_title": "C++ DP solution",
            "discussion_vote": "10",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/cherry-pickup/discuss/109912/C%2B%2B-DP-solution"
        },
        {
            "discussion_title": "Java O(N^3) DP solution w/ specific explanation",
            "discussion_vote": "7",
            "discussion_views": "477",
            "discussion_link": "https://leetcode.com/problems/cherry-pickup/discuss/165218/Java-O(N3)-DP-solution-w-specific-explanation"
        },
        {
            "discussion_title": "Python clean&commented O(N^3) DP",
            "discussion_vote": "5",
            "discussion_views": "677",
            "discussion_link": "https://leetcode.com/problems/cherry-pickup/discuss/109909/Python-cleanandcommented-O(N3)-DP"
        }
    ],
    "743": [
        {
            "discussion_title": "[C++] Bellman Ford",
            "discussion_vote": "25",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/network-delay-time/discuss/109982/C%2B%2B-Bellman-Ford"
        },
        {
            "discussion_title": "Simple JAVA Djikstra's (PriorityQueue optimized) Solution with explanation",
            "discussion_vote": "20",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/network-delay-time/discuss/109968/Simple-JAVA-Djikstra's-(PriorityQueue-optimized)-Solution-with-explanation"
        },
        {
            "discussion_title": "OJ was testing out of given conditions.",
            "discussion_vote": "14",
            "discussion_views": "691",
            "discussion_link": "https://leetcode.com/problems/network-delay-time/discuss/110002/OJ-was-testing-out-of-given-conditions."
        },
        {
            "discussion_title": "Straightforward Python Dijkstra's \\U0001f60c",
            "discussion_vote": "10",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/network-delay-time/discuss/109983/Straightforward-Python-Dijkstra's-U0001f60c"
        },
        {
            "discussion_title": "Simple Java Solution using BFS (similar to dijkstra's shortest path algorithm) with explanation",
            "discussion_vote": "9",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/network-delay-time/discuss/109967/Simple-Java-Solution-using-BFS-(similar-to-dijkstra's-shortest-path-algorithm)-with-explanation"
        }
    ],
    "744": [
        {
            "discussion_title": "Easy Binary Search in Java - O(log(n)) time",
            "discussion_vote": "17",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/discuss/110005/Easy-Binary-Search-in-Java-O(log(n))-time"
        },
        {
            "discussion_title": "Python no brainer! \\U0001f921",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/discuss/110030/Python-no-brainer!-U0001f921"
        },
        {
            "discussion_title": "[C++] 2 lines Solution using upper_bound",
            "discussion_vote": "9",
            "discussion_views": "544",
            "discussion_link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/discuss/112825/C%2B%2B-2-lines-Solution-using-upper_bound"
        },
        {
            "discussion_title": "Java 2 lines O(log n)",
            "discussion_vote": "5",
            "discussion_views": "702",
            "discussion_link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/discuss/110029/Java-2-lines-O(log-n)"
        },
        {
            "discussion_title": "Java Binary search",
            "discussion_vote": "2",
            "discussion_views": "234",
            "discussion_link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/discuss/143355/Java-Binary-search"
        }
    ],
    "745": [
        {
            "discussion_title": "Three ways to solve this problem in Java",
            "discussion_vote": "46",
            "discussion_views": "5.8K",
            "discussion_link": "https://leetcode.com/problems/prefix-and-suffix-search/discuss/110044/Three-ways-to-solve-this-problem-in-Java"
        },
        {
            "discussion_title": "Python few ways to do it, with EXPLANATIONS! \\U0001f389",
            "discussion_vote": "20",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/prefix-and-suffix-search/discuss/110053/Python-few-ways-to-do-it-with-EXPLANATIONS!-U0001f389"
        },
        {
            "discussion_title": "Java Beat 95%, just small modifications in implementing Trie.",
            "discussion_vote": "14",
            "discussion_views": "701",
            "discussion_link": "https://leetcode.com/problems/prefix-and-suffix-search/discuss/144432/Java-Beat-95-just-small-modifications-in-implementing-Trie."
        },
        {
            "discussion_title": "Accepted Java Code  Using Trie",
            "discussion_vote": "14",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/prefix-and-suffix-search/discuss/110068/Accepted-Java-Code-Using-Trie"
        },
        {
            "discussion_title": "C++ solution using two Trie, time & memory efficient.",
            "discussion_vote": "12",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/prefix-and-suffix-search/discuss/110045/C%2B%2B-solution-using-two-Trie-time-and-memory-efficient."
        }
    ],
    "746": [
        {
            "discussion_title": "Easy to understand C++ using DP with detailed explanation",
            "discussion_vote": "56",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/110111/Easy-to-understand-C%2B%2B-using-DP-with-detailed-explanation"
        },
        {
            "discussion_title": "3 Lines Java Solution - O(1) space",
            "discussion_vote": "41",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/144682/3-Lines-Java-Solution-O(1)-space"
        },
        {
            "discussion_title": "Easy to understand - Python solution - O(1) space",
            "discussion_vote": "17",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/110104/Easy-to-understand-Python-solution-O(1)-space"
        },
        {
            "discussion_title": "Doubt ??",
            "discussion_vote": "15",
            "discussion_views": "432",
            "discussion_link": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/148907/Doubt"
        },
        {
            "discussion_title": "Simple Python Solution",
            "discussion_vote": "10",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/112870/Simple-Python-Solution"
        }
    ],
    "747": [
        {
            "discussion_title": "Python O(n) time and O(1) space without fancy builtins",
            "discussion_vote": "17",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/discuss/110120/Python-O(n)-time-and-O(1)-space-without-fancy-builtins"
        },
        {
            "discussion_title": "[Java] One pass solution o(n) complexity",
            "discussion_vote": "10",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/discuss/112886/Java-One-pass-solution-o(n)-complexity"
        },
        {
            "discussion_title": "One Pass O(N) Java Solution 9ms 100%",
            "discussion_vote": "8",
            "discussion_views": "458",
            "discussion_link": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/discuss/152120/One-Pass-O(N)-Java-Solution-9ms-100"
        },
        {
            "discussion_title": "My C++ Solution",
            "discussion_vote": "4",
            "discussion_views": "561",
            "discussion_link": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/discuss/112880/My-C%2B%2B-Solution"
        },
        {
            "discussion_title": "[Java]-Fetch two largest values, One Pass TC-O(N), SC-O(1)",
            "discussion_vote": "4",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/discuss/110118/Java-Fetch-two-largest-values-One-Pass-TC-O(N)-SC-O(1)"
        }
    ],
    "748": [
        {
            "discussion_title": "Java 6ms beats 100% PRIME NUMBERS",
            "discussion_vote": "27",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/shortest-completing-word/discuss/158110/Java-6ms-beats-100-PRIME-NUMBERS"
        },
        {
            "discussion_title": "Java Solution using character Array",
            "discussion_vote": "11",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/shortest-completing-word/discuss/110137/Java-Solution-using-character-Array"
        },
        {
            "discussion_title": "Python solutions",
            "discussion_vote": "5",
            "discussion_views": "520",
            "discussion_link": "https://leetcode.com/problems/shortest-completing-word/discuss/127327/Python-solutions"
        },
        {
            "discussion_title": "Java solution 17ms using char array",
            "discussion_vote": "2",
            "discussion_views": "374",
            "discussion_link": "https://leetcode.com/problems/shortest-completing-word/discuss/117849/Java-solution-17ms-using-char-array"
        },
        {
            "discussion_title": "easy java",
            "discussion_vote": "2",
            "discussion_views": "299",
            "discussion_link": "https://leetcode.com/problems/shortest-completing-word/discuss/112916/easy-java"
        }
    ],
    "749": [
        {
            "discussion_title": "Funniest output answer I've ever seen on LeetCode",
            "discussion_vote": "12",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/contain-virus/discuss/110177/Funniest-output-answer-I've-ever-seen-on-LeetCode"
        },
        {
            "discussion_title": "C++, DFS, 12ms",
            "discussion_vote": "5",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/contain-virus/discuss/110186/C%2B%2B-DFS-12ms"
        },
        {
            "discussion_title": "My Neat Java Solution Using Dfs",
            "discussion_vote": "4",
            "discussion_views": "803",
            "discussion_link": "https://leetcode.com/problems/contain-virus/discuss/110174/My-Neat-Java-Solution-Using-Dfs"
        },
        {
            "discussion_title": "After a region is quarantined, is it still considered continuous with other regions?",
            "discussion_vote": "4",
            "discussion_views": "328",
            "discussion_link": "https://leetcode.com/problems/contain-virus/discuss/110179/After-a-region-is-quarantined-is-it-still-considered-continuous-with-other-regions"
        },
        {
            "discussion_title": "Did the problem logic change during the contest?",
            "discussion_vote": "4",
            "discussion_views": "822",
            "discussion_link": "https://leetcode.com/problems/contain-virus/discuss/110178/Did-the-problem-logic-change-during-the-contest"
        }
    ],
    "752": [
        {
            "discussion_title": "Regular java BFS solution and 2-end BFS solution with improvement",
            "discussion_vote": "30",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/open-the-lock/discuss/110237/Regular-java-BFS-solution-and-2-end-BFS-solution-with-improvement"
        },
        {
            "discussion_title": "BFS solution C++",
            "discussion_vote": "19",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/open-the-lock/discuss/110230/BFS-solution-C%2B%2B"
        },
        {
            "discussion_title": "Accepted Python/Java BFS  + how to avoid TLE",
            "discussion_vote": "14",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/open-the-lock/discuss/110232/Accepted-PythonJava-BFS-%2B-how-to-avoid-TLE"
        },
        {
            "discussion_title": "why wrong answer?",
            "discussion_vote": "12",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/open-the-lock/discuss/110231/why-wrong-answer"
        },
        {
            "discussion_title": "Python 16 lines // simple and readable // BFS solution // beats 94 %",
            "discussion_vote": "6",
            "discussion_views": "824",
            "discussion_link": "https://leetcode.com/problems/open-the-lock/discuss/142561/Python-16-lines-simple-and-readable-BFS-solution-beats-94"
        }
    ],
    "753": [
        {
            "discussion_title": "Having trouble understanding it? Try this.",
            "discussion_vote": "66",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/cracking-the-safe/discuss/110265/Having-trouble-understanding-it-Try-this."
        },
        {
            "discussion_title": "Easy DFS",
            "discussion_vote": "51",
            "discussion_views": "9.8K",
            "discussion_link": "https://leetcode.com/problems/cracking-the-safe/discuss/110264/Easy-DFS"
        },
        {
            "discussion_title": "Logical Thinking with Clear Code",
            "discussion_vote": "42",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/cracking-the-safe/discuss/153039/Logical-Thinking-with-Clear-Code"
        },
        {
            "discussion_title": "this question needs to be rephrased",
            "discussion_vote": "12",
            "discussion_views": "542",
            "discussion_link": "https://leetcode.com/problems/cracking-the-safe/discuss/122964/this-question-needs-to-be-rephrased"
        },
        {
            "discussion_title": "De Bruijn sequence C++",
            "discussion_vote": "12",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/cracking-the-safe/discuss/110260/De-Bruijn-sequence-C%2B%2B"
        }
    ],
    "754": [
        {
            "discussion_title": "Short JAVA Solution with Explanation",
            "discussion_vote": "46",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/reach-a-number/discuss/112968/Short-JAVA-Solution-with-Explanation"
        },
        {
            "discussion_title": "C++ O(1) Solution, without loop",
            "discussion_vote": "38",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/reach-a-number/discuss/112969/C%2B%2B-O(1)-Solution-without-loop"
        },
        {
            "discussion_title": "Not an easy",
            "discussion_vote": "32",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/reach-a-number/discuss/112971/Not-an-easy"
        },
        {
            "discussion_title": "Concise Python with explanation and example",
            "discussion_vote": "18",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/reach-a-number/discuss/112986/Concise-Python-with-explanation-and-example"
        },
        {
            "discussion_title": "Learn from other with my explanations.",
            "discussion_vote": "9",
            "discussion_views": "608",
            "discussion_link": "https://leetcode.com/problems/reach-a-number/discuss/112992/Learn-from-other-with-my-explanations."
        }
    ],
    "756": [
        {
            "discussion_title": "Java solution - map + backtracking",
            "discussion_vote": "32",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/pyramid-transition-matrix/discuss/113054/Java-solution-map-%2B-backtracking"
        },
        {
            "discussion_title": "counter example to the standard code",
            "discussion_vote": "15",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/pyramid-transition-matrix/discuss/113037/counter-example-to-the-standard-code"
        },
        {
            "discussion_title": "C++ passed counter example, DFS with memoization, 6 ms",
            "discussion_vote": "10",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/pyramid-transition-matrix/discuss/113062/C%2B%2B-passed-counter-example-DFS-with-memoization-6-ms"
        },
        {
            "discussion_title": "Easy and Concise Python solution",
            "discussion_vote": "8",
            "discussion_views": "992",
            "discussion_link": "https://leetcode.com/problems/pyramid-transition-matrix/discuss/113038/Easy-and-Concise-Python-solution"
        },
        {
            "discussion_title": "DP O(n^2 * m)",
            "discussion_vote": "7",
            "discussion_views": "917",
            "discussion_link": "https://leetcode.com/problems/pyramid-transition-matrix/discuss/113075/DP-O(n2-*-m)"
        }
    ],
    "757": [
        {
            "discussion_title": "Ever wonder why the greedy algorithm works? Here is the explanation!",
            "discussion_vote": "33",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/set-intersection-size-at-least-two/discuss/113085/Ever-wonder-why-the-greedy-algorithm-works-Here-is-the-explanation!"
        },
        {
            "discussion_title": "Java O(nlogn) Solution, Greedy",
            "discussion_vote": "16",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/set-intersection-size-at-least-two/discuss/113076/Java-O(nlogn)-Solution-Greedy"
        },
        {
            "discussion_title": "C++ concise solution, O(nlogn) greedy, 39 ms",
            "discussion_vote": "12",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/set-intersection-size-at-least-two/discuss/113089/C%2B%2B-concise-solution-O(nlogn)-greedy-39-ms"
        },
        {
            "discussion_title": "Hope you enjoy this problem. : )  O(NlogN)/Java/Greedy  Easy to understand solution",
            "discussion_vote": "9",
            "discussion_views": "758",
            "discussion_link": "https://leetcode.com/problems/set-intersection-size-at-least-two/discuss/113086/Hope-you-enjoy-this-problem.-%3A-)-O(NlogN)JavaGreedy-Easy-to-understand-solution"
        },
        {
            "discussion_title": "C++ Greedy O(nlogn) with explanations",
            "discussion_vote": "3",
            "discussion_views": "253",
            "discussion_link": "https://leetcode.com/problems/set-intersection-size-at-least-two/discuss/113088/C%2B%2B-Greedy-O(nlogn)-with-explanations"
        }
    ],
    "761": [
        {
            "discussion_title": "Easy and Concise Solution with Explanation [C++/Java/Python]",
            "discussion_vote": "84",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/special-binary-string/discuss/113211/Easy-and-Concise-Solution-with-Explanation-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "Think of it as Valid-Parentheses",
            "discussion_vote": "41",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/special-binary-string/discuss/113212/Think-of-it-as-Valid-Parentheses"
        },
        {
            "discussion_title": "What is the definition of \"Special\"?",
            "discussion_vote": "8",
            "discussion_views": "381",
            "discussion_link": "https://leetcode.com/problems/special-binary-string/discuss/113210/What-is-the-definition-of-%22Special%22"
        },
        {
            "discussion_title": "Logical Thinking with Clear Code",
            "discussion_vote": "7",
            "discussion_views": "266",
            "discussion_link": "https://leetcode.com/problems/special-binary-string/discuss/155621/Logical-Thinking-with-Clear-Code"
        },
        {
            "discussion_title": "Sharing my Simple / Easy to Understand Straight Forward Java Solution",
            "discussion_vote": "6",
            "discussion_views": "662",
            "discussion_link": "https://leetcode.com/problems/special-binary-string/discuss/113222/Sharing-my-Simple-Easy-to-Understand-Straight-Forward-Java-Solution"
        }
    ],
    "762": [
        {
            "discussion_title": "665772",
            "discussion_vote": "23",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/discuss/113232/665772"
        },
        {
            "discussion_title": "[Java/C++] Clean Code",
            "discussion_vote": "21",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/discuss/113227/JavaC%2B%2B-Clean-Code"
        },
        {
            "discussion_title": "Easy O(n) Java solution using DP",
            "discussion_vote": "15",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/discuss/113248/Easy-O(n)-Java-solution-using-DP"
        },
        {
            "discussion_title": "Sort Easy Python",
            "discussion_vote": "11",
            "discussion_views": "631",
            "discussion_link": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/discuss/114870/Sort-Easy-Python"
        },
        {
            "discussion_title": "Python 1 line",
            "discussion_vote": "3",
            "discussion_views": "286",
            "discussion_link": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/discuss/160145/Python-1-line"
        }
    ],
    "763": [
        {
            "discussion_title": "Java 2 pass O(n) time O(1) space, extending end pointer solution",
            "discussion_vote": "77",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/partition-labels/discuss/113259/Java-2-pass-O(n)-time-O(1)-space-extending-end-pointer-solution"
        },
        {
            "discussion_title": "Short easy Python",
            "discussion_vote": "27",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/partition-labels/discuss/113258/Short-easy-Python"
        },
        {
            "discussion_title": "C++ 6 lines O(n) / O(1) - two simple passes",
            "discussion_vote": "16",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/partition-labels/discuss/113293/C%2B%2B-6-lines-O(n)-O(1)-two-simple-passes"
        },
        {
            "discussion_title": "Easy O(n) Java solution using sliding window (two pointers), comments and explanation given",
            "discussion_vote": "15",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/partition-labels/discuss/113264/Easy-O(n)-Java-solution-using-sliding-window-(two-pointers)-comments-and-explanation-given"
        },
        {
            "discussion_title": "Java very Short and Easy solution",
            "discussion_vote": "7",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/partition-labels/discuss/113287/Java-very-Short-and-Easy-solution"
        }
    ],
    "764": [
        {
            "discussion_title": "Java/C++/Python O(N^2) solution using only one grid matrix",
            "discussion_vote": "87",
            "discussion_views": "6.7K",
            "discussion_link": "https://leetcode.com/problems/largest-plus-sign/discuss/113314/JavaC%2B%2BPython-O(N2)-solution-using-only-one-grid-matrix"
        },
        {
            "discussion_title": "Easy to Understand Java Solution",
            "discussion_vote": "11",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/largest-plus-sign/discuss/113323/Easy-to-Understand-Java-Solution"
        },
        {
            "discussion_title": "Python 250ms solution",
            "discussion_vote": "11",
            "discussion_views": "987",
            "discussion_link": "https://leetcode.com/problems/largest-plus-sign/discuss/113319/Python-250ms-solution"
        },
        {
            "discussion_title": "My Simple O(N^2) Time and O(N^2) Space Accepted Solution 150ms",
            "discussion_vote": "6",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/largest-plus-sign/discuss/113333/My-Simple-O(N2)-Time-and-O(N2)-Space-Accepted-Solution-150ms"
        },
        {
            "discussion_title": "C++ O(n^3) solution 226ms with explanation.",
            "discussion_vote": "4",
            "discussion_views": "643",
            "discussion_link": "https://leetcode.com/problems/largest-plus-sign/discuss/113334/C%2B%2B-O(n3)-solution-226ms-with-explanation."
        }
    ],
    "765": [
        {
            "discussion_title": "Java/C++ O(N) solution using cyclic swapping",
            "discussion_vote": "114",
            "discussion_views": "7.8K",
            "discussion_link": "https://leetcode.com/problems/couples-holding-hands/discuss/113362/JavaC%2B%2B-O(N)-solution-using-cyclic-swapping"
        },
        {
            "discussion_title": "Java, union find, easy to understand, 5 ms",
            "discussion_vote": "28",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/couples-holding-hands/discuss/117520/Java-union-find-easy-to-understand-5-ms"
        },
        {
            "discussion_title": "Java AC O(n) greedy solution.",
            "discussion_vote": "14",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/couples-holding-hands/discuss/113359/Java-AC-O(n)-greedy-solution."
        },
        {
            "discussion_title": "Na\\xefve solution accepted (with a proof)... wrong difficulty?",
            "discussion_vote": "11",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/couples-holding-hands/discuss/113360/Naxefve-solution-accepted-(with-a-proof)...-wrong-difficulty"
        },
        {
            "discussion_title": "Union find, understand in 60 seconds, beats 99.6%",
            "discussion_vote": "10",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/couples-holding-hands/discuss/160104/Union-find-understand-in-60-seconds-beats-99.6"
        }
    ],
    "766": [
        {
            "discussion_title": "Java solution, 4 liner.",
            "discussion_vote": "108",
            "discussion_views": "7.5K",
            "discussion_link": "https://leetcode.com/problems/toeplitz-matrix/discuss/113417/Java-solution-4-liner."
        },
        {
            "discussion_title": "Python Easy and Concise Solution",
            "discussion_vote": "29",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/toeplitz-matrix/discuss/113385/Python-Easy-and-Concise-Solution"
        },
        {
            "discussion_title": "[C++/Java] Clean Code",
            "discussion_vote": "17",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/toeplitz-matrix/discuss/113422/C%2B%2BJava-Clean-Code"
        },
        {
            "discussion_title": "Java Answers to the follow-ups (load partial row/column one time), the 3rd one beats 98% ",
            "discussion_vote": "13",
            "discussion_views": "994",
            "discussion_link": "https://leetcode.com/problems/toeplitz-matrix/discuss/147808/Java-Answers-to-the-follow-ups-(load-partial-rowcolumn-one-time)-the-3rd-one-beats-98"
        },
        {
            "discussion_title": "One Line Easy Python Solution, Using Slice. Only 1 \"For Loop\".",
            "discussion_vote": "11",
            "discussion_views": "881",
            "discussion_link": "https://leetcode.com/problems/toeplitz-matrix/discuss/113411/One-Line-Easy-Python-Solution-Using-Slice.-Only-1-%22For-Loop%22."
        }
    ],
    "767": [
        {
            "discussion_title": "Java solution, PriorityQueue",
            "discussion_vote": "38",
            "discussion_views": "7.6K",
            "discussion_link": "https://leetcode.com/problems/reorganize-string/discuss/113440/Java-solution-PriorityQueue"
        },
        {
            "discussion_title": "4 lines Python",
            "discussion_vote": "27",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/reorganize-string/discuss/113435/4-lines-Python"
        },
        {
            "discussion_title": "C++, Greedy sort, O(N)",
            "discussion_vote": "22",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/reorganize-string/discuss/113427/C%2B%2B-Greedy-sort-O(N)"
        },
        {
            "discussion_title": "Simple python solution using PriorityQueue",
            "discussion_vote": "11",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/reorganize-string/discuss/113457/Simple-python-solution-using-PriorityQueue"
        },
        {
            "discussion_title": "Java solution, 99% similar to 358",
            "discussion_vote": "6",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/reorganize-string/discuss/128907/Java-solution-99-similar-to-358"
        }
    ],
    "768": [
        {
            "discussion_title": "Java solution, left max and right min.",
            "discussion_vote": "86",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/discuss/113462/Java-solution-left-max-and-right-min."
        },
        {
            "discussion_title": "[C++] 9 lines, 15ms",
            "discussion_vote": "30",
            "discussion_views": "694",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/discuss/113464/C%2B%2B-9-lines-15ms"
        },
        {
            "discussion_title": "Python Easy and Concise Solution",
            "discussion_vote": "14",
            "discussion_views": "930",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/discuss/113465/Python-Easy-and-Concise-Solution"
        },
        {
            "discussion_title": "Simple Java Solution with explanation",
            "discussion_vote": "11",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/discuss/113466/Simple-Java-Solution-with-explanation"
        },
        {
            "discussion_title": "C++ 7 lines, O (n * log n) / O(n)",
            "discussion_vote": "9",
            "discussion_views": "803",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/discuss/113472/C%2B%2B-7-lines-O-(n-*-log-n)-O(n)"
        }
    ],
    "769": [
        {
            "discussion_title": "Simple Java O(n) Solution with detailed explanation",
            "discussion_vote": "63",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted/discuss/113528/Simple-Java-O(n)-Solution-with-detailed-explanation"
        },
        {
            "discussion_title": "Java solution, left max and right min.",
            "discussion_vote": "37",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted/discuss/113520/Java-solution-left-max-and-right-min."
        },
        {
            "discussion_title": "C++ 4 lines O(n) / O(1)",
            "discussion_vote": "8",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted/discuss/113497/C%2B%2B-4-lines-O(n)-O(1)"
        },
        {
            "discussion_title": "[C++] 6 lines, 3ms Solution",
            "discussion_vote": "6",
            "discussion_views": "332",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted/discuss/113498/C%2B%2B-6-lines-3ms-Solution"
        },
        {
            "discussion_title": "Java O(n), beats 100%",
            "discussion_vote": "5",
            "discussion_views": "129",
            "discussion_link": "https://leetcode.com/problems/max-chunks-to-make-sorted/discuss/145728/Java-O(n)-beats-100"
        }
    ],
    "770": [
        {
            "discussion_title": "I would give up directly if asked this question in interview",
            "discussion_vote": "15",
            "discussion_views": "324",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-iv/discuss/183621/I-would-give-up-directly-if-asked-this-question-in-interview"
        },
        {
            "discussion_title": "Easy :-P",
            "discussion_vote": "9",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-iv/discuss/113549/Easy-%3A-P"
        },
        {
            "discussion_title": "C++, unordered_map + stack, with explanation",
            "discussion_vote": "6",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-iv/discuss/113543/C%2B%2B-unordered_map-%2B-stack-with-explanation"
        },
        {
            "discussion_title": "Java solution, using stack",
            "discussion_vote": "5",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-iv/discuss/113551/Java-solution-using-stack"
        },
        {
            "discussion_title": "Do it the hard way: real tokenizer & parser",
            "discussion_vote": "3",
            "discussion_views": "189",
            "discussion_link": "https://leetcode.com/problems/basic-calculator-iv/discuss/155052/Do-it-the-hard-way%3A-real-tokenizer-and-parser"
        }
    ],
    "771": [
        {
            "discussion_title": "1-liners Python/Java/Ruby",
            "discussion_vote": "84",
            "discussion_views": "14.8K",
            "discussion_link": "https://leetcode.com/problems/jewels-and-stones/discuss/113574/1-liners-PythonJavaRuby"
        },
        {
            "discussion_title": "[C++/Java/Python] Easy and Concise Solution O(M+N) ",
            "discussion_vote": "41",
            "discussion_views": "13.6K",
            "discussion_link": "https://leetcode.com/problems/jewels-and-stones/discuss/113553/C%2B%2BJavaPython-Easy-and-Concise-Solution-O(M%2BN)"
        },
        {
            "discussion_title": "Java: O(S+J) Time and O(1) Space",
            "discussion_vote": "26",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/jewels-and-stones/discuss/113552/Java%3A-O(S%2BJ)-Time-and-O(1)-Space"
        },
        {
            "discussion_title": "Python O(M+N) Hash - \u516c\u747e",
            "discussion_vote": "10",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/jewels-and-stones/discuss/140933/Python-O(M%2BN)-Hash-"
        },
        {
            "discussion_title": "Two-line JavaScript solution",
            "discussion_vote": "10",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/jewels-and-stones/discuss/113563/Two-line-JavaScript-solution"
        }
    ],
    "773": [
        {
            "discussion_title": "Java 19ms 26 clean lines BFS with comment.",
            "discussion_vote": "37",
            "discussion_views": "5.3K",
            "discussion_link": "https://leetcode.com/problems/sliding-puzzle/discuss/113620/Java-19ms-26-clean-lines-BFS-with-comment."
        },
        {
            "discussion_title": "Java 8ms BFS with algorithm explained",
            "discussion_vote": "35",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/sliding-puzzle/discuss/146652/Java-8ms-BFS-with-algorithm-explained"
        },
        {
            "discussion_title": "C++ 9 lines DFS and BFS",
            "discussion_vote": "11",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/sliding-puzzle/discuss/113613/C%2B%2B-9-lines-DFS-and-BFS"
        },
        {
            "discussion_title": "Readable java solution",
            "discussion_vote": "6",
            "discussion_views": "364",
            "discussion_link": "https://leetcode.com/problems/sliding-puzzle/discuss/133498/Readable-java-solution"
        },
        {
            "discussion_title": "Java Intuitive DFS+Backtracking",
            "discussion_vote": "6",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/sliding-puzzle/discuss/113615/Java-Intuitive-DFS%2BBacktracking"
        }
    ],
    "775": [
        {
            "discussion_title": "My 3 lines C++ Solution",
            "discussion_vote": "53",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/global-and-local-inversions/discuss/113656/My-3-lines-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Easy and Concise Solution [C++/Java/Python]",
            "discussion_vote": "31",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/global-and-local-inversions/discuss/113644/Easy-and-Concise-Solution-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "check if we can sort the array with only local inversions",
            "discussion_vote": "21",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/global-and-local-inversions/discuss/113652/check-if-we-can-sort-the-array-with-only-local-inversions"
        },
        {
            "discussion_title": "Java O(n) solution with explanation",
            "discussion_vote": "8",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/global-and-local-inversions/discuss/113648/Java-O(n)-solution-with-explanation"
        },
        {
            "discussion_title": "Logical Thinking with Clear Code",
            "discussion_vote": "6",
            "discussion_views": "286",
            "discussion_link": "https://leetcode.com/problems/global-and-local-inversions/discuss/150991/Logical-Thinking-with-Clear-Code"
        }
    ],
    "777": [
        {
            "discussion_title": "Simple Java one pass O(n) solution with explaination",
            "discussion_vote": "41",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/swap-adjacent-in-lr-string/discuss/113789/Simple-Java-one-pass-O(n)-solution-with-explaination"
        },
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "20",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/swap-adjacent-in-lr-string/discuss/114737/Simple-Java-Solution"
        },
        {
            "discussion_title": "Python simple solution, 3 lines O(n)",
            "discussion_vote": "19",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/swap-adjacent-in-lr-string/discuss/113782/Python-simple-solution-3-lines-O(n)"
        },
        {
            "discussion_title": "[C++] Simple subsequence matching with position constraint.",
            "discussion_vote": "9",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/swap-adjacent-in-lr-string/discuss/113774/C%2B%2B-Simple-subsequence-matching-with-position-constraint."
        },
        {
            "discussion_title": "C++ with explanation, O(n), 14ms",
            "discussion_vote": "6",
            "discussion_views": "454",
            "discussion_link": "https://leetcode.com/problems/swap-adjacent-in-lr-string/discuss/113787/C%2B%2B-with-explanation-O(n)-14ms"
        }
    ],
    "778": [
        {
            "discussion_title": "Easy and Concise Solution using PriorityQueue [Python/C++]",
            "discussion_vote": "26",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/swim-in-rising-water/discuss/113770/Easy-and-Concise-Solution-using-PriorityQueue-PythonC%2B%2B"
        },
        {
            "discussion_title": "C++ two solutions, Binary Search+DFS and Dijkstra+BFS, O(n^2logn), 11ms",
            "discussion_vote": "21",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/swim-in-rising-water/discuss/113758/C%2B%2B-two-solutions-Binary-Search%2BDFS-and-Dijkstra%2BBFS-O(n2logn)-11ms"
        },
        {
            "discussion_title": "Java - DFS and Union Find",
            "discussion_vote": "9",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/swim-in-rising-water/discuss/118204/Java-DFS-and-Union-Find"
        },
        {
            "discussion_title": "Easy and Concise Solution using Binary Search [Python/C++]",
            "discussion_vote": "9",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/swim-in-rising-water/discuss/113765/Easy-and-Concise-Solution-using-Binary-Search-PythonC%2B%2B"
        },
        {
            "discussion_title": "O(n^2) Solution, Union-Find, Python",
            "discussion_vote": "6",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/swim-in-rising-water/discuss/113750/O(n2)-Solution-Union-Find-Python"
        }
    ],
    "779": [
        {
            "discussion_title": "My 3 lines C++ recursive solution",
            "discussion_vote": "42",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113697/My-3-lines-C%2B%2B-recursive-solution"
        },
        {
            "discussion_title": "[JAVA] one line",
            "discussion_vote": "22",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113705/JAVA-one-line"
        },
        {
            "discussion_title": "Python 1-line",
            "discussion_vote": "13",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113699/Python-1-line"
        },
        {
            "discussion_title": "[Python/Java/C++] Easy 1-line Solution with detailed explanation",
            "discussion_vote": "11",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113736/PythonJavaC%2B%2B-Easy-1-line-Solution-with-detailed-explanation"
        },
        {
            "discussion_title": "C++ with explanation, three solutions O(n), O(logn), and O(loglogn)",
            "discussion_vote": "6",
            "discussion_views": "834",
            "discussion_link": "https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113721/C%2B%2B-with-explanation-three-solutions-O(n)-O(logn)-and-O(loglogn)"
        }
    ],
    "780": [
        {
            "discussion_title": "Easy and Concise 2-line Solution[Python/C++/Java]",
            "discussion_vote": "28",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/reaching-points/discuss/114856/Easy-and-Concise-2-line-SolutionPythonC%2B%2BJava"
        },
        {
            "discussion_title": "[C++] Simple iterative.",
            "discussion_vote": "26",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/reaching-points/discuss/114726/C%2B%2B-Simple-iterative."
        },
        {
            "discussion_title": "[Java] Easy to understand recursion solution",
            "discussion_vote": "5",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/reaching-points/discuss/114728/Java-Easy-to-understand-recursion-solution"
        },
        {
            "discussion_title": "[Java] Simple solution with explanation",
            "discussion_vote": "3",
            "discussion_views": "982",
            "discussion_link": "https://leetcode.com/problems/reaching-points/discuss/114732/Java-Simple-solution-with-explanation"
        },
        {
            "discussion_title": "C++ Simple 6 Line Solution",
            "discussion_vote": "2",
            "discussion_views": "646",
            "discussion_link": "https://leetcode.com/problems/reaching-points/discuss/114723/C%2B%2B-Simple-6-Line-Solution"
        }
    ],
    "781": [
        {
            "discussion_title": " [C++/Java/Python] Easy and Concise Solution",
            "discussion_vote": "18",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/rabbits-in-forest/discuss/114721/C%2B%2BJavaPython-Easy-and-Concise-Solution"
        },
        {
            "discussion_title": "My easy Java HashMap solution",
            "discussion_vote": "17",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/rabbits-in-forest/discuss/114719/My-easy-Java-HashMap-solution"
        },
        {
            "discussion_title": "Java Solution with HashMap O(N) and comments",
            "discussion_vote": "7",
            "discussion_views": "626",
            "discussion_link": "https://leetcode.com/problems/rabbits-in-forest/discuss/114715/Java-Solution-with-HashMap-O(N)-and-comments"
        },
        {
            "discussion_title": "Java Simple Solution",
            "discussion_vote": "4",
            "discussion_views": "474",
            "discussion_link": "https://leetcode.com/problems/rabbits-in-forest/discuss/114714/Java-Simple-Solution"
        },
        {
            "discussion_title": "\\u3010Simple Python\\u3011",
            "discussion_vote": "3",
            "discussion_views": "288",
            "discussion_link": "https://leetcode.com/problems/rabbits-in-forest/discuss/114713/u3010Simple-Pythonu3011"
        }
    ],
    "782": [
        {
            "discussion_title": "Easy and Concise Solution with Explanation [C++/Java/Python]",
            "discussion_vote": "38",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/transform-to-chessboard/discuss/114847/Easy-and-Concise-Solution-with-Explanation-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "Key Observation on property of ChessBoard",
            "discussion_vote": "15",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/transform-to-chessboard/discuss/114843/Key-Observation-on-property-of-ChessBoard"
        },
        {
            "discussion_title": "Short C++ solution, no swaps, 9ms, O(n^2) time, O(1) space",
            "discussion_vote": "5",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/transform-to-chessboard/discuss/114844/Short-C%2B%2B-solution-no-swaps-9ms-O(n2)-time-O(1)-space"
        },
        {
            "discussion_title": "Java Clear Code with Detailed Explanations",
            "discussion_vote": "2",
            "discussion_views": "400",
            "discussion_link": "https://leetcode.com/problems/transform-to-chessboard/discuss/132113/Java-Clear-Code-with-Detailed-Explanations"
        },
        {
            "discussion_title": "C++ O(N^2) time solution with explantion",
            "discussion_vote": "2",
            "discussion_views": "413",
            "discussion_link": "https://leetcode.com/problems/transform-to-chessboard/discuss/115613/C%2B%2B-O(N2)-time-solution-with-explantion"
        }
    ],
    "783": [
        {
            "discussion_title": "Come on guys, it is obviously the same as Problems 530. Minimum Absolute Difference in BST",
            "discussion_vote": "42",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/discuss/118531/Come-on-guys-it-is-obviously-the-same-as-Problems-530.-Minimum-Absolute-Difference-in-BST"
        },
        {
            "discussion_title": "Inorder Traversal O(N) time Recursion [C++/Java/Python]",
            "discussion_vote": "20",
            "discussion_views": "6.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/discuss/114834/Inorder-Traversal-O(N)-time-Recursion-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "Problem title is confusing",
            "discussion_vote": "8",
            "discussion_views": "200",
            "discussion_link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/discuss/114969/Problem-title-is-confusing"
        },
        {
            "discussion_title": "what the result of [2147483647,-2147483648,null]?",
            "discussion_vote": "6",
            "discussion_views": "402",
            "discussion_link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/discuss/114836/what-the-result-of-2147483647-2147483648null"
        },
        {
            "discussion_title": "C++ Recursive and Iterative Summary for Question 783 & 530.",
            "discussion_vote": "5",
            "discussion_views": "706",
            "discussion_link": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/discuss/128516/C%2B%2B-Recursive-and-Iterative-Summary-for-Question-783-and-530."
        }
    ],
    "784": [
        {
            "discussion_title": "Java Easy BFS / DFS solution with explanation",
            "discussion_vote": "48",
            "discussion_views": "9.2K",
            "discussion_link": "https://leetcode.com/problems/letter-case-permutation/discuss/115485/Java-Easy-BFS-DFS-solution-with-explanation"
        },
        {
            "discussion_title": "Python simple solution (7 lines)",
            "discussion_vote": "38",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/letter-case-permutation/discuss/115509/Python-simple-solution-(7-lines)"
        },
        {
            "discussion_title": "C++ backtrack solution w/ trick",
            "discussion_vote": "36",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/letter-case-permutation/discuss/115515/C%2B%2B-backtrack-solution-w-trick"
        },
        {
            "discussion_title": "Easy Python 2 line solution",
            "discussion_vote": "22",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/letter-case-permutation/discuss/115544/Easy-Python-2-line-solution"
        },
        {
            "discussion_title": "Java solution using recursion",
            "discussion_vote": "15",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/letter-case-permutation/discuss/115508/Java-solution-using-recursion"
        }
    ],
    "785": [
        {
            "discussion_title": "Java Clean DFS solution with Explanation",
            "discussion_vote": "93",
            "discussion_views": "10.2K",
            "discussion_link": "https://leetcode.com/problems/is-graph-bipartite/discuss/115487/Java-Clean-DFS-solution-with-Explanation"
        },
        {
            "discussion_title": "java BFS ",
            "discussion_vote": "23",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/is-graph-bipartite/discuss/115503/java-BFS"
        },
        {
            "discussion_title": "Java Short Iterative Solution",
            "discussion_vote": "15",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/is-graph-bipartite/discuss/120218/Java-Short-Iterative-Solution"
        },
        {
            "discussion_title": "Why is this even a test case? [[1],[0],[0,1]]",
            "discussion_vote": "11",
            "discussion_views": "555",
            "discussion_link": "https://leetcode.com/problems/is-graph-bipartite/discuss/117385/Why-is-this-even-a-test-case-1001"
        },
        {
            "discussion_title": "Easy Python Solution",
            "discussion_vote": "11",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/is-graph-bipartite/discuss/115543/Easy-Python-Solution"
        }
    ],
    "786": [
        {
            "discussion_title": "Summary of solutions for problems \"reducible\" to LeetCode 378",
            "discussion_vote": "129",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-prime-fraction/discuss/115819/Summary-of-solutions-for-problems-%22reducible%22-to-LeetCode-378"
        },
        {
            "discussion_title": "[Java] AC O(max(n,k) * logn) Short Easy PriorityQueue",
            "discussion_vote": "21",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-prime-fraction/discuss/115486/Java-AC-O(max(nk)-*-logn)-Short-Easy-PriorityQueue"
        },
        {
            "discussion_title": "C++ 9lines priority queue",
            "discussion_vote": "11",
            "discussion_views": "764",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-prime-fraction/discuss/115531/C%2B%2B-9lines-priority-queue"
        },
        {
            "discussion_title": "O(n)",
            "discussion_vote": "10",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-prime-fraction/discuss/115545/O(n)"
        },
        {
            "discussion_title": "Python solution using Binary Search",
            "discussion_vote": "8",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/k-th-smallest-prime-fraction/discuss/115538/Python-solution-using-Binary-Search"
        }
    ],
    "787": [
        {
            "discussion_title": " [Java/Python] Priority Queue Solution",
            "discussion_vote": "56",
            "discussion_views": "10.9K",
            "discussion_link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/discuss/115541/JavaPython-Priority-Queue-Solution"
        },
        {
            "discussion_title": "c++ 8 line bellman ford",
            "discussion_vote": "30",
            "discussion_views": "5.0K",
            "discussion_link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/discuss/115596/c%2B%2B-8-line-bellman-ford"
        },
        {
            "discussion_title": "5 ms AC Java Solution based on Dijkstra's Algorithm ",
            "discussion_vote": "21",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/discuss/128776/5-ms-AC-Java-Solution-based-on-Dijkstra's-Algorithm"
        },
        {
            "discussion_title": "Three C++ solutions BFS, DFS, and BF",
            "discussion_vote": "15",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/discuss/128217/Three-C%2B%2B-solutions-BFS-DFS-and-BF"
        },
        {
            "discussion_title": "C++ solution using Dynamic Programming",
            "discussion_vote": "13",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/discuss/115548/C%2B%2B-solution-using-Dynamic-Programming"
        }
    ],
    "788": [
        {
            "discussion_title": "Java dp solution 9ms",
            "discussion_vote": "55",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/rotated-digits/discuss/117975/Java-dp-solution-9ms"
        },
        {
            "discussion_title": "Easily Understood Java Solution",
            "discussion_vote": "33",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/rotated-digits/discuss/116547/Easily-Understood-Java-Solution"
        },
        {
            "discussion_title": "the question need to be explained clearly",
            "discussion_vote": "22",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/rotated-digits/discuss/116658/the-question-need-to-be-explained-clearly"
        },
        {
            "discussion_title": "Easy to understand Python Solution (using String)",
            "discussion_vote": "16",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/rotated-digits/discuss/116539/Easy-to-understand-Python-Solution-(using-String)"
        },
        {
            "discussion_title": "O(log10(N)) Easy to understand Java solution",
            "discussion_vote": "10",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/rotated-digits/discuss/116674/O(log10(N))-Easy-to-understand-Java-solution"
        }
    ],
    "789": [
        {
            "discussion_title": "Why interception in the middle is not a good idea for ghosts.",
            "discussion_vote": "45",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/escape-the-ghosts/discuss/116678/Why-interception-in-the-middle-is-not-a-good-idea-for-ghosts."
        },
        {
            "discussion_title": "Java 5 liner",
            "discussion_vote": "14",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/escape-the-ghosts/discuss/116507/Java-5-liner"
        },
        {
            "discussion_title": "Short with explanation, python",
            "discussion_vote": "11",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/escape-the-ghosts/discuss/116511/Short-with-explanation-python"
        },
        {
            "discussion_title": "Test case showing True, but False in output",
            "discussion_vote": "9",
            "discussion_views": "920",
            "discussion_link": "https://leetcode.com/problems/escape-the-ghosts/discuss/116515/Test-case-showing-True-but-False-in-output"
        },
        {
            "discussion_title": "[C++/Java/Python] Easy and Concise Solution",
            "discussion_vote": "4",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/escape-the-ghosts/discuss/116522/C%2B%2BJavaPython-Easy-and-Concise-Solution"
        }
    ],
    "790": [
        {
            "discussion_title": "Detail and explanation of O(n) solution why dp[n]=2*d[n-1]+dp[n-3]",
            "discussion_vote": "124",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/domino-and-tromino-tiling/discuss/116581/Detail-and-explanation-of-O(n)-solution-why-dpn2*dn-1%2Bdpn-3"
        },
        {
            "discussion_title": "Schematic explanation of two equivalent DP recurrence formula",
            "discussion_vote": "61",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/domino-and-tromino-tiling/discuss/116664/Schematic-explanation-of-two-equivalent-DP-recurrence-formula"
        },
        {
            "discussion_title": "Python recursive DP solution with cache w/ Explanation",
            "discussion_vote": "18",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/domino-and-tromino-tiling/discuss/116506/Python-recursive-DP-solution-with-cache-w-Explanation"
        },
        {
            "discussion_title": "Easy to understand O(n) solution with Drawing Picture Explanation!",
            "discussion_vote": "15",
            "discussion_views": "460",
            "discussion_link": "https://leetcode.com/problems/domino-and-tromino-tiling/discuss/116612/Easy-to-understand-O(n)-solution-with-Drawing-Picture-Explanation!"
        },
        {
            "discussion_title": "O(N) time and O(1) space [C++/Java/Python]",
            "discussion_vote": "9",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/domino-and-tromino-tiling/discuss/116544/O(N)-time-and-O(1)-space-C%2B%2BJavaPython"
        }
    ],
    "791": [
        {
            "discussion_title": "Java 5 ms 10 line counting solution with comment",
            "discussion_vote": "53",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/custom-sort-string/discuss/116615/Java-5-ms-10-line-counting-solution-with-comment"
        },
        {
            "discussion_title": "Two Lines C++",
            "discussion_vote": "22",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/custom-sort-string/discuss/116556/Two-Lines-C%2B%2B"
        },
        {
            "discussion_title": "Java Bucket sort solution O(N+M) with follow up questions",
            "discussion_vote": "17",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/custom-sort-string/discuss/116573/Java-Bucket-sort-solution-O(N%2BM)-with-follow-up-questions"
        },
        {
            "discussion_title": "Easy Python Solution",
            "discussion_vote": "16",
            "discussion_views": "972",
            "discussion_link": "https://leetcode.com/problems/custom-sort-string/discuss/126559/Easy-Python-Solution"
        },
        {
            "discussion_title": "Python Priority queue solution O(NlgN)",
            "discussion_vote": "5",
            "discussion_views": "536",
            "discussion_link": "https://leetcode.com/problems/custom-sort-string/discuss/117166/Python-Priority-queue-solution-O(NlgN)"
        }
    ],
    "792": [
        {
            "discussion_title": "Efficient and simple, go through words in parallel, with explanation",
            "discussion_vote": "81",
            "discussion_views": "8.0K",
            "discussion_link": "https://leetcode.com/problems/number-of-matching-subsequences/discuss/117634/Efficient-and-simple-go-through-words-in-parallel-with-explanation"
        },
        {
            "discussion_title": "Java solution using HashMap and Queue",
            "discussion_vote": "42",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/number-of-matching-subsequences/discuss/117598/Java-solution-using-HashMap-and-Queue"
        },
        {
            "discussion_title": "Simple Python solution",
            "discussion_vote": "24",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/number-of-matching-subsequences/discuss/117578/Simple-Python-solution"
        },
        {
            "discussion_title": "Java O(n) Solution",
            "discussion_vote": "11",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/number-of-matching-subsequences/discuss/117600/Java-O(n)-Solution"
        },
        {
            "discussion_title": "C++ 12 Line Solution with Explanation",
            "discussion_vote": "10",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/number-of-matching-subsequences/discuss/117575/C%2B%2B-12-Line-Solution-with-Explanation"
        }
    ],
    "793": [
        {
            "discussion_title": "Four binary search solutions based on different ideas",
            "discussion_vote": "33",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/discuss/117821/Four-binary-search-solutions-based-on-different-ideas"
        },
        {
            "discussion_title": "binary search python code [40ms]",
            "discussion_vote": "8",
            "discussion_views": "664",
            "discussion_link": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/discuss/117632/binary-search-python-code-40ms"
        },
        {
            "discussion_title": "C++, O(logn), math solution with explanation",
            "discussion_vote": "8",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/discuss/117631/C%2B%2B-O(logn)-math-solution-with-explanation"
        },
        {
            "discussion_title": "Using Binary Search Java Solution",
            "discussion_vote": "3",
            "discussion_views": "681",
            "discussion_link": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/discuss/117619/Using-Binary-Search-Java-Solution"
        },
        {
            "discussion_title": "Python simple binary search solution",
            "discussion_vote": "2",
            "discussion_views": "118",
            "discussion_link": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/discuss/158762/Python-simple-binary-search-solution"
        }
    ],
    "794": [
        {
            "discussion_title": "Straightforward Java solution with explaination",
            "discussion_vote": "23",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/valid-tic-tac-toe-state/discuss/117580/Straightforward-Java-solution-with-explaination"
        },
        {
            "discussion_title": "4 lines Python",
            "discussion_vote": "8",
            "discussion_views": "614",
            "discussion_link": "https://leetcode.com/problems/valid-tic-tac-toe-state/discuss/117716/4-lines-Python"
        },
        {
            "discussion_title": "Simple Python Solution with explanation",
            "discussion_vote": "8",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/valid-tic-tac-toe-state/discuss/117592/Simple-Python-Solution-with-explanation"
        },
        {
            "discussion_title": "Java - 20 lines with a cute trick.",
            "discussion_vote": "6",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/valid-tic-tac-toe-state/discuss/117868/Java-20-lines-with-a-cute-trick."
        },
        {
            "discussion_title": "Easy to understand in C",
            "discussion_vote": "3",
            "discussion_views": "500",
            "discussion_link": "https://leetcode.com/problems/valid-tic-tac-toe-state/discuss/117638/Easy-to-understand-in-C"
        }
    ],
    "795": [
        {
            "discussion_title": "Short Java O(n) Solution",
            "discussion_vote": "47",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/discuss/117595/Short-Java-O(n)-Solution"
        },
        {
            "discussion_title": "C++, O(n), <10 lines",
            "discussion_vote": "30",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/discuss/117616/C%2B%2B-O(n)-less10-lines"
        },
        {
            "discussion_title": "Python , standard DP solution with explanation ",
            "discussion_vote": "21",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/discuss/117723/Python-standard-DP-solution-with-explanation"
        },
        {
            "discussion_title": "C++ O(n) solution with explanations",
            "discussion_vote": "16",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/discuss/117612/C%2B%2B-O(n)-solution-with-explanations"
        },
        {
            "discussion_title": "Clean & simple O(n) Java ",
            "discussion_vote": "6",
            "discussion_views": "520",
            "discussion_link": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/discuss/119162/Clean-and-simple-O(n)-Java"
        }
    ],
    "796": [
        {
            "discussion_title": "C++ / Java / Python 1 Line Solution",
            "discussion_vote": "80",
            "discussion_views": "5.4K",
            "discussion_link": "https://leetcode.com/problems/rotate-string/discuss/118696/C%2B%2B-Java-Python-1-Line-Solution"
        },
        {
            "discussion_title": "Java 1 line solution",
            "discussion_vote": "20",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/rotate-string/discuss/118626/Java-1-line-solution"
        },
        {
            "discussion_title": "[C++/Java/Python] 1-line solution",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/rotate-string/discuss/118689/C%2B%2BJavaPython-1-line-solution"
        },
        {
            "discussion_title": "1 Line C++",
            "discussion_vote": "7",
            "discussion_views": "985",
            "discussion_link": "https://leetcode.com/problems/rotate-string/discuss/118641/1-Line-C%2B%2B"
        },
        {
            "discussion_title": "Python 3, beats 100%",
            "discussion_vote": "3",
            "discussion_views": "261",
            "discussion_link": "https://leetcode.com/problems/rotate-string/discuss/147201/Python-3-beats-100"
        }
    ],
    "797": [
        {
            "discussion_title": "Java DFS Solution",
            "discussion_vote": "18",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/all-paths-from-source-to-target/discuss/118713/Java-DFS-Solution"
        },
        {
            "discussion_title": "Easy and Concise DFS Solution [C++ / 2-line Python]",
            "discussion_vote": "12",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/all-paths-from-source-to-target/discuss/118691/Easy-and-Concise-DFS-Solution-C%2B%2B-2-line-Python"
        },
        {
            "discussion_title": "C++ DFS Recursive, Easy to Understand",
            "discussion_vote": "11",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/all-paths-from-source-to-target/discuss/118647/C%2B%2B-DFS-Recursive-Easy-to-Understand"
        },
        {
            "discussion_title": "short python iterative dfs",
            "discussion_vote": "4",
            "discussion_views": "645",
            "discussion_link": "https://leetcode.com/problems/all-paths-from-source-to-target/discuss/118765/short-python-iterative-dfs"
        },
        {
            "discussion_title": "JavaScript solution",
            "discussion_vote": "2",
            "discussion_views": "133",
            "discussion_link": "https://leetcode.com/problems/all-paths-from-source-to-target/discuss/137888/JavaScript-solution"
        }
    ],
    "798": [
        {
            "discussion_title": " [C++/Java/Python] Solution with Explanation",
            "discussion_vote": "53",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/smallest-rotation-with-highest-score/discuss/118725/C%2B%2BJavaPython-Solution-with-Explanation"
        },
        {
            "discussion_title": "Java  O(n)Time O(n) Space Solution",
            "discussion_vote": "6",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/smallest-rotation-with-highest-score/discuss/118671/Java-O(n)Time-O(n)-Space-Solution"
        },
        {
            "discussion_title": "Easy C++, w/ comments - O(n) time",
            "discussion_vote": "5",
            "discussion_views": "713",
            "discussion_link": "https://leetcode.com/problems/smallest-rotation-with-highest-score/discuss/118808/Easy-C%2B%2B-w-comments-O(n)-time"
        },
        {
            "discussion_title": "Two Python3 O(n) time and space AC solutions with picture explanation",
            "discussion_vote": "5",
            "discussion_views": "541",
            "discussion_link": "https://leetcode.com/problems/smallest-rotation-with-highest-score/discuss/118657/Two-Python3-O(n)-time-and-space-AC-solutions-with-picture-explanation"
        },
        {
            "discussion_title": "Java Solution w/ Comments",
            "discussion_vote": "5",
            "discussion_views": "858",
            "discussion_link": "https://leetcode.com/problems/smallest-rotation-with-highest-score/discuss/118627/Java-Solution-w-Comments"
        }
    ],
    "799": [
        {
            "discussion_title": "[20ms] C++, Easy understand solution",
            "discussion_vote": "27",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/champagne-tower/discuss/118660/20ms-C%2B%2B-Easy-understand-solution"
        },
        {
            "discussion_title": "[9ms] 5 Lines Code [ C++/Java ]",
            "discussion_vote": "9",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/champagne-tower/discuss/118692/9ms-5-Lines-Code-C%2B%2BJava"
        },
        {
            "discussion_title": " [C++/Java/Python] O(101) space solution",
            "discussion_vote": "6",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/champagne-tower/discuss/118711/C%2B%2BJavaPython-O(101)-space-solution"
        },
        {
            "discussion_title": "Simple C++ solution and explanations",
            "discussion_vote": "3",
            "discussion_views": "243",
            "discussion_link": "https://leetcode.com/problems/champagne-tower/discuss/118728/Simple-C%2B%2B-solution-and-explanations"
        },
        {
            "discussion_title": "Simple Python DP solution",
            "discussion_vote": "3",
            "discussion_views": "581",
            "discussion_link": "https://leetcode.com/problems/champagne-tower/discuss/118666/Simple-Python-DP-solution"
        }
    ],
    "801": [
        {
            "discussion_title": "Java O(n) DP Solution",
            "discussion_vote": "81",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/discuss/119835/Java-O(n)-DP-Solution"
        },
        {
            "discussion_title": "Python 14-line O(1) space O(n) time DP solution",
            "discussion_vote": "35",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/discuss/119830/Python-14-line-O(1)-space-O(n)-time-DP-solution"
        },
        {
            "discussion_title": "[C++/Java/Python] Easy Understood DP Solution",
            "discussion_vote": "25",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/discuss/119879/C%2B%2BJavaPython-Easy-Understood-DP-Solution"
        },
        {
            "discussion_title": "Logical Thinking with Optimization",
            "discussion_vote": "13",
            "discussion_views": "427",
            "discussion_link": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/discuss/161887/Logical-Thinking-with-Optimization"
        },
        {
            "discussion_title": "Java neat and easy to understand DP O(n) solution!",
            "discussion_vote": "4",
            "discussion_views": "951",
            "discussion_link": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/discuss/119995/Java-neat-and-easy-to-understand-DP-O(n)-solution!"
        }
    ],
    "802": [
        {
            "discussion_title": "Straightforward Java solution, easy to understand!",
            "discussion_vote": "46",
            "discussion_views": "3.9K",
            "discussion_link": "https://leetcode.com/problems/find-eventual-safe-states/discuss/119871/Straightforward-Java-solution-easy-to-understand!"
        },
        {
            "discussion_title": "20-line Python concise sol by removing 0 out degree nodes",
            "discussion_vote": "13",
            "discussion_views": "846",
            "discussion_link": "https://leetcode.com/problems/find-eventual-safe-states/discuss/119827/20-line-Python-concise-sol-by-removing-0-out-degree-nodes"
        },
        {
            "discussion_title": "Python  easy peasy // 11 lines very simple and clear solution // 192 ms // beats 100 %",
            "discussion_vote": "8",
            "discussion_views": "314",
            "discussion_link": "https://leetcode.com/problems/find-eventual-safe-states/discuss/128872/Python-easy-peasy-11-lines-very-simple-and-clear-solution-192-ms-beats-100"
        },
        {
            "discussion_title": "C++, Simple Topological Sorting with DP",
            "discussion_vote": "7",
            "discussion_views": "918",
            "discussion_link": "https://leetcode.com/problems/find-eventual-safe-states/discuss/119905/C%2B%2B-Simple-Topological-Sorting-with-DP"
        },
        {
            "discussion_title": "C++ DFS Solution with Explanation, O(n)",
            "discussion_vote": "6",
            "discussion_views": "820",
            "discussion_link": "https://leetcode.com/problems/find-eventual-safe-states/discuss/119828/C%2B%2B-DFS-Solution-with-Explanation-O(n)"
        }
    ],
    "803": [
        {
            "discussion_title": "Python Solution by reversely adding hits bricks back",
            "discussion_vote": "70",
            "discussion_views": "5.1K",
            "discussion_link": "https://leetcode.com/problems/bricks-falling-when-hit/discuss/119829/Python-Solution-by-reversely-adding-hits-bricks-back"
        },
        {
            "discussion_title": "Tricky problem that reverses LC305",
            "discussion_vote": "20",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/bricks-falling-when-hit/discuss/122758/Tricky-problem-that-reverses-LC305"
        },
        {
            "discussion_title": "C++ DFS (similar to LC749)",
            "discussion_vote": "15",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/bricks-falling-when-hit/discuss/120057/C%2B%2B-DFS-(similar-to-LC749)"
        },
        {
            "discussion_title": "Java Solution",
            "discussion_vote": "10",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/bricks-falling-when-hit/discuss/121072/Java-Solution"
        },
        {
            "discussion_title": "JAVA Simple DFS 16ms, reversely add bricks back",
            "discussion_vote": "9",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/bricks-falling-when-hit/discuss/141229/JAVA-Simple-DFS-16ms-reversely-add-bricks-back"
        }
    ],
    "804": [
        {
            "discussion_title": "is the description of the problem correct?",
            "discussion_vote": "51",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/unique-morse-code-words/discuss/120941/is-the-description-of-the-problem-correct"
        },
        {
            "discussion_title": "[C++/Java/Python]  Easy and Concise Solution",
            "discussion_vote": "22",
            "discussion_views": "6.9K",
            "discussion_link": "https://leetcode.com/problems/unique-morse-code-words/discuss/120675/C%2B%2BJavaPython-Easy-and-Concise-Solution"
        },
        {
            "discussion_title": "C++, Straightforward",
            "discussion_vote": "8",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/unique-morse-code-words/discuss/120672/C%2B%2B-Straightforward"
        },
        {
            "discussion_title": "Accepted Java Solution",
            "discussion_vote": "6",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/unique-morse-code-words/discuss/120671/Accepted-Java-Solution"
        },
        {
            "discussion_title": "easy python solution",
            "discussion_vote": "5",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/unique-morse-code-words/discuss/120826/easy-python-solution"
        }
    ],
    "805": [
        {
            "discussion_title": "C++ Solution with explanation, early termination (Updated for new test case)",
            "discussion_vote": "44",
            "discussion_views": "5.5K",
            "discussion_link": "https://leetcode.com/problems/split-array-with-same-average/discuss/120667/C%2B%2B-Solution-with-explanation-early-termination-(Updated-for-new-test-case)"
        },
        {
            "discussion_title": "DP with bitset over *sum* (fast Python/Ruby, decent C++)",
            "discussion_vote": "16",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/split-array-with-same-average/discuss/120842/DP-with-bitset-over-*sum*-(fast-PythonRuby-decent-C%2B%2B)"
        },
        {
            "discussion_title": "Simple python with explanation",
            "discussion_vote": "16",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/split-array-with-same-average/discuss/120654/Simple-python-with-explanation"
        },
        {
            "discussion_title": "Java, accepted recursive solution, with explanation",
            "discussion_vote": "12",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/split-array-with-same-average/discuss/120660/Java-accepted-recursive-solution-with-explanation"
        },
        {
            "discussion_title": "Easy and Concise Solution \uff3bC++/Java/Python\uff3d ",
            "discussion_vote": "10",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/split-array-with-same-average/discuss/120741/Easy-and-Concise-Solution-C%2B%2BJavaPython"
        }
    ],
    "806": [
        {
            "discussion_title": "The description of the question has to be updated",
            "discussion_vote": "30",
            "discussion_views": "846",
            "discussion_link": "https://leetcode.com/problems/number-of-lines-to-write-string/discuss/135768/The-description-of-the-question-has-to-be-updated"
        },
        {
            "discussion_title": "Easy Solution 6-lines [C++/Java/Python] ",
            "discussion_vote": "15",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/number-of-lines-to-write-string/discuss/120666/Easy-Solution-6-lines-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "This question is so inane and badly written it should be deleted.",
            "discussion_vote": "9",
            "discussion_views": "185",
            "discussion_link": "https://leetcode.com/problems/number-of-lines-to-write-string/discuss/151944/This-question-is-so-inane-and-badly-written-it-should-be-deleted."
        },
        {
            "discussion_title": "Regex",
            "discussion_vote": "6",
            "discussion_views": "277",
            "discussion_link": "https://leetcode.com/problems/number-of-lines-to-write-string/discuss/120695/Regex"
        },
        {
            "discussion_title": "C++, Straightforward ",
            "discussion_vote": "3",
            "discussion_views": "289",
            "discussion_link": "https://leetcode.com/problems/number-of-lines-to-write-string/discuss/120668/C%2B%2B-Straightforward"
        }
    ],
    "807": [
        {
            "discussion_title": "Easy and Concise Solution [C++/Java/Python] ",
            "discussion_vote": "27",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/discuss/120681/Easy-and-Concise-Solution-C%2B%2BJavaPython"
        },
        {
            "discussion_title": "What is this question? ",
            "discussion_vote": "16",
            "discussion_views": "810",
            "discussion_link": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/discuss/134727/What-is-this-question"
        },
        {
            "discussion_title": "48ms Python3 solution",
            "discussion_vote": "4",
            "discussion_views": "510",
            "discussion_link": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/discuss/126048/48ms-Python3-solution"
        },
        {
            "discussion_title": "C++, Straightforward O(m*n) time",
            "discussion_vote": "4",
            "discussion_views": "598",
            "discussion_link": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/discuss/120677/C%2B%2B-Straightforward-O(m*n)-time"
        },
        {
            "discussion_title": "Simple Python solution",
            "discussion_vote": "3",
            "discussion_views": "325",
            "discussion_link": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/discuss/120650/Simple-Python-solution"
        }
    ],
    "808": [
        {
            "discussion_title": "[C++/Java/Python] When N >= 4800, just return 1",
            "discussion_vote": "54",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/soup-servings/discuss/121711/C%2B%2BJavaPython-When-N-greater-4800-just-return-1"
        },
        {
            "discussion_title": "Straightforward Java Recursion with Memorization",
            "discussion_vote": "7",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/soup-servings/discuss/121740/Straightforward-Java-Recursion-with-Memorization"
        },
        {
            "discussion_title": "Easy understand C++ recursive solution",
            "discussion_vote": "4",
            "discussion_views": "416",
            "discussion_link": "https://leetcode.com/problems/soup-servings/discuss/121708/Easy-understand-C%2B%2B-recursive-solution"
        },
        {
            "discussion_title": "Python // 7 lines clear DP solution // 44 ms // beats 97.5 %",
            "discussion_vote": "2",
            "discussion_views": "331",
            "discussion_link": "https://leetcode.com/problems/soup-servings/discuss/131414/Python-7-lines-clear-DP-solution-44-ms-beats-97.5"
        },
        {
            "discussion_title": "[Java]Top down search with hashMap memorized",
            "discussion_vote": "2",
            "discussion_views": "339",
            "discussion_link": "https://leetcode.com/problems/soup-servings/discuss/123451/JavaTop-down-search-with-hashMap-memorized"
        }
    ],
    "809": [
        {
            "discussion_title": "[C++/Java/Python] 2 Pointers and 4 pointers",
            "discussion_vote": "14",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/expressive-words/discuss/122660/C%2B%2BJavaPython-2-Pointers-and-4-pointers"
        },
        {
            "discussion_title": "Short straight-forward C++ solution, two pointers one pass scan",
            "discussion_vote": "7",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/expressive-words/discuss/121741/Short-straight-forward-C%2B%2B-solution-two-pointers-one-pass-scan"
        },
        {
            "discussion_title": "Some test case have problems?",
            "discussion_vote": "6",
            "discussion_views": "368",
            "discussion_link": "https://leetcode.com/problems/expressive-words/discuss/123308/Some-test-case-have-problems"
        },
        {
            "discussion_title": "15 lines java code - 2 pointers 1 pass.",
            "discussion_vote": "6",
            "discussion_views": "818",
            "discussion_link": "https://leetcode.com/problems/expressive-words/discuss/122521/15-lines-java-code-2-pointers-1-pass."
        },
        {
            "discussion_title": "Simple and Clear Solution with Detailed Exaplanation",
            "discussion_vote": "2",
            "discussion_views": "120",
            "discussion_link": "https://leetcode.com/problems/expressive-words/discuss/167531/Simple-and-Clear-Solution-with-Detailed-Exaplanation"
        }
    ],
    "810": [
        {
            "discussion_title": "Why [1,2,3] return true?",
            "discussion_vote": "15",
            "discussion_views": "912",
            "discussion_link": "https://leetcode.com/problems/chalkboard-xor-game/discuss/121689/Why-123-return-true"
        },
        {
            "discussion_title": "[C++/Java/Python] 3-lines Easy Solution with Complaint and Explanation",
            "discussion_vote": "14",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/chalkboard-xor-game/discuss/121696/C%2B%2BJavaPython-3-lines-Easy-Solution-with-Complaint-and-Explanation"
        },
        {
            "discussion_title": "[810.Chalkboard XOR Game] C++ AC",
            "discussion_vote": "3",
            "discussion_views": "260",
            "discussion_link": "https://leetcode.com/problems/chalkboard-xor-game/discuss/121800/810.Chalkboard-XOR-Game-C%2B%2B-AC"
        },
        {
            "discussion_title": "Solution based on minimax.. but returns false for [1,2,3] so not accepted in OJ",
            "discussion_vote": "2",
            "discussion_views": "338",
            "discussion_link": "https://leetcode.com/problems/chalkboard-xor-game/discuss/121715/Solution-based-on-minimax..-but-returns-false-for-123-so-not-accepted-in-OJ"
        },
        {
            "discussion_title": "O(n) simple python3 with explanation -- beats 100%",
            "discussion_vote": "1",
            "discussion_views": "20",
            "discussion_link": "https://leetcode.com/problems/chalkboard-xor-game/discuss/190068/O(n)-simple-python3-with-explanation-beats-100"
        }
    ],
    "811": [
        {
            "discussion_title": "[C++/Java/Python] Easy Understood Solution",
            "discussion_vote": "22",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/subdomain-visit-count/discuss/121738/C%2B%2BJavaPython-Easy-Understood-Solution"
        },
        {
            "discussion_title": "Java: Do not use String.split() to handle the string in this case and the code will run faster",
            "discussion_vote": "8",
            "discussion_views": "752",
            "discussion_link": "https://leetcode.com/problems/subdomain-visit-count/discuss/130262/Java%3A-Do-not-use-String.split()-to-handle-the-string-in-this-case-and-the-code-will-run-faster"
        },
        {
            "discussion_title": "Python short & understandable solution [68 ms]",
            "discussion_vote": "7",
            "discussion_views": "838",
            "discussion_link": "https://leetcode.com/problems/subdomain-visit-count/discuss/121770/Python-short-and-understandable-solution-68-ms"
        },
        {
            "discussion_title": "C++ 10 Line Solution w/ Explanation",
            "discussion_vote": "7",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/subdomain-visit-count/discuss/121687/C%2B%2B-10-Line-Solution-w-Explanation"
        },
        {
            "discussion_title": "Java solution,very easy to understand!",
            "discussion_vote": "5",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/subdomain-visit-count/discuss/121726/Java-solutionvery-easy-to-understand!"
        }
    ],
    "812": [
        {
            "discussion_title": "[C++/Java/Python] Solution with Explanation and Prove",
            "discussion_vote": "46",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/largest-triangle-area/discuss/122711/C%2B%2BJavaPython-Solution-with-Explanation-and-Prove"
        },
        {
            "discussion_title": "Bad Problem, Solution is Brute Force",
            "discussion_vote": "27",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/largest-triangle-area/discuss/124290/Bad-Problem-Solution-is-Brute-Force"
        },
        {
            "discussion_title": "Simple Java - Easy Understand ",
            "discussion_vote": "5",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/largest-triangle-area/discuss/124010/Simple-Java-Easy-Understand"
        },
        {
            "discussion_title": "[Python] Another convex hull solution (44ms) to reduce the search space. ",
            "discussion_vote": "3",
            "discussion_views": "579",
            "discussion_link": "https://leetcode.com/problems/largest-triangle-area/discuss/122859/Python-Another-convex-hull-solution-(44ms)-to-reduce-the-search-space."
        },
        {
            "discussion_title": "Javascript T(n^3) S(1)",
            "discussion_vote": "2",
            "discussion_views": "189",
            "discussion_link": "https://leetcode.com/problems/largest-triangle-area/discuss/132642/Javascript-T(n3)-S(1)"
        }
    ],
    "813": [
        {
            "discussion_title": "[C++/Java/Python] Easy Understood Solution with Explanation",
            "discussion_vote": "36",
            "discussion_views": "7.2K",
            "discussion_link": "https://leetcode.com/problems/largest-sum-of-averages/discuss/122739/C%2B%2BJavaPython-Easy-Understood-Solution-with-Explanation"
        },
        {
            "discussion_title": "[Naive] Detailed Step by Step Approach from Recursive to DP O(N) solution",
            "discussion_vote": "30",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/largest-sum-of-averages/discuss/126280/Naive-Detailed-Step-by-Step-Approach-from-Recursive-to-DP-O(N)-solution"
        },
        {
            "discussion_title": "Java bottom-up DP with Explanation",
            "discussion_vote": "28",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/largest-sum-of-averages/discuss/122775/Java-bottom-up-DP-with-Explanation"
        },
        {
            "discussion_title": "C++ DP",
            "discussion_vote": "7",
            "discussion_views": "978",
            "discussion_link": "https://leetcode.com/problems/largest-sum-of-averages/discuss/122752/C%2B%2B-DP"
        },
        {
            "discussion_title": "C++ DP Simple Solution use O(N*K) Space and O(K*N^2) Time With Detailed Explanation",
            "discussion_vote": "5",
            "discussion_views": "465",
            "discussion_link": "https://leetcode.com/problems/largest-sum-of-averages/discuss/126003/C%2B%2B-DP-Simple-Solution-use-O(N*K)-Space-and-O(K*N2)-Time-With-Detailed-Explanation"
        }
    ],
    "814": [
        {
            "discussion_title": "[C++/Java/Python]  Self-Explaining Solution and 2-lines",
            "discussion_vote": "23",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-pruning/discuss/122730/C%2B%2BJavaPython-Self-Explaining-Solution-and-2-lines"
        },
        {
            "discussion_title": "3 recursive lines dedicated to python",
            "discussion_vote": "14",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/binary-tree-pruning/discuss/122750/3-recursive-lines-dedicated-to-python"
        },
        {
            "discussion_title": "Java 4 lines Solution using Recursion",
            "discussion_vote": "8",
            "discussion_views": "696",
            "discussion_link": "https://leetcode.com/problems/binary-tree-pruning/discuss/122747/Java-4-lines-Solution-using-Recursion"
        },
        {
            "discussion_title": "Clean recursive - python",
            "discussion_vote": "8",
            "discussion_views": "414",
            "discussion_link": "https://leetcode.com/problems/binary-tree-pruning/discuss/122724/Clean-recursive-python"
        },
        {
            "discussion_title": "Java Backtracking with O(N) time complexity",
            "discussion_vote": "3",
            "discussion_views": "194",
            "discussion_link": "https://leetcode.com/problems/binary-tree-pruning/discuss/148533/Java-Backtracking-with-O(N)-time-complexity"
        }
    ],
    "815": [
        {
            "discussion_title": "Simple Java Solution using BFS",
            "discussion_vote": "35",
            "discussion_views": "5.6K",
            "discussion_link": "https://leetcode.com/problems/bus-routes/discuss/122712/Simple-Java-Solution-using-BFS"
        },
        {
            "discussion_title": "[C++/Java/Python] BFS Solution",
            "discussion_vote": "28",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/bus-routes/discuss/122771/C%2B%2BJavaPython-BFS-Solution"
        },
        {
            "discussion_title": "Data Invaild?",
            "discussion_vote": "10",
            "discussion_views": "72",
            "discussion_link": "https://leetcode.com/problems/bus-routes/discuss/122726/Data-Invaild"
        },
        {
            "discussion_title": "Python BFS With Explanation",
            "discussion_vote": "6",
            "discussion_views": "363",
            "discussion_link": "https://leetcode.com/problems/bus-routes/discuss/151289/Python-BFS-With-Explanation"
        },
        {
            "discussion_title": "Python // short & simple & readable & self-explanatory BFS solution // ~170 ms",
            "discussion_vote": "5",
            "discussion_views": "339",
            "discussion_link": "https://leetcode.com/problems/bus-routes/discuss/142772/Python-short-and-simple-and-readable-and-self-explanatory-BFS-solution-~170-ms"
        }
    ],
    "816": [
        {
            "discussion_title": "[C++/Java/Python] Solution with Explanation",
            "discussion_vote": "31",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/ambiguous-coordinates/discuss/123851/C%2B%2BJavaPython-Solution-with-Explanation"
        },
        {
            "discussion_title": "Really clear Java code",
            "discussion_vote": "10",
            "discussion_views": "645",
            "discussion_link": "https://leetcode.com/problems/ambiguous-coordinates/discuss/123875/Really-clear-Java-code"
        },
        {
            "discussion_title": "Concise C++ solution with comments",
            "discussion_vote": "4",
            "discussion_views": "330",
            "discussion_link": "https://leetcode.com/problems/ambiguous-coordinates/discuss/123881/Concise-C%2B%2B-solution-with-comments"
        },
        {
            "discussion_title": "Kotlin solution",
            "discussion_vote": "1",
            "discussion_views": "9",
            "discussion_link": "https://leetcode.com/problems/ambiguous-coordinates/discuss/188921/Kotlin-solution"
        },
        {
            "discussion_title": "64ms intuitive Python solution that beats 99%",
            "discussion_vote": "0",
            "discussion_views": "26",
            "discussion_link": "https://leetcode.com/problems/ambiguous-coordinates/discuss/186347/64ms-intuitive-Python-solution-that-beats-99"
        }
    ],
    "817": [
        {
            "discussion_title": "[C++/Java/Python] Easy and Concise Solution with Explanation",
            "discussion_vote": "50",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/linked-list-components/discuss/123842/C%2B%2BJavaPython-Easy-and-Concise-Solution-with-Explanation"
        },
        {
            "discussion_title": "Can someone explain the test case",
            "discussion_vote": "12",
            "discussion_views": "646",
            "discussion_link": "https://leetcode.com/problems/linked-list-components/discuss/131853/Can-someone-explain-the-test-case"
        },
        {
            "discussion_title": "How is 3  a connected component in this example statement",
            "discussion_vote": "5",
            "discussion_views": "142",
            "discussion_link": "https://leetcode.com/problems/linked-list-components/discuss/157559/How-is-3-a-connected-component-in-this-example-statement"
        },
        {
            "discussion_title": "Java solution using hashset",
            "discussion_vote": "5",
            "discussion_views": "857",
            "discussion_link": "https://leetcode.com/problems/linked-list-components/discuss/123918/Java-solution-using-hashset"
        },
        {
            "discussion_title": "Python using Two Pointers",
            "discussion_vote": "3",
            "discussion_views": "477",
            "discussion_link": "https://leetcode.com/problems/linked-list-components/discuss/123889/Python-using-Two-Pointers"
        }
    ],
    "818": [
        {
            "discussion_title": "Summary of the BFS and DP solutions with intuitive explanation",
            "discussion_vote": "52",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/race-car/discuss/124326/Summary-of-the-BFS-and-DP-solutions-with-intuitive-explanation"
        },
        {
            "discussion_title": "[C++/JavaPython] DP solution",
            "discussion_vote": "38",
            "discussion_views": "6.1K",
            "discussion_link": "https://leetcode.com/problems/race-car/discuss/123834/C%2B%2BJavaPython-DP-solution"
        },
        {
            "discussion_title": "Accepted Java solution with BFS",
            "discussion_vote": "20",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/race-car/discuss/123884/Accepted-Java-solution-with-BFS"
        },
        {
            "discussion_title": "Accepted plain BFS",
            "discussion_vote": "8",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/race-car/discuss/123841/Accepted-plain-BFS"
        },
        {
            "discussion_title": "Straightforward C++ BFS solution with Explanation",
            "discussion_vote": "6",
            "discussion_views": "628",
            "discussion_link": "https://leetcode.com/problems/race-car/discuss/124312/Straightforward-C%2B%2B-BFS-solution-with-Explanation"
        }
    ],
    "819": [
        {
            "discussion_title": "[C++/Java/Python] Easy Solution with Explanation",
            "discussion_vote": "45",
            "discussion_views": "8.8K",
            "discussion_link": "https://leetcode.com/problems/most-common-word/discuss/123854/C%2B%2BJavaPython-Easy-Solution-with-Explanation"
        },
        {
            "discussion_title": "last test case is weird",
            "discussion_vote": "44",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/most-common-word/discuss/169333/last-test-case-is-weird"
        },
        {
            "discussion_title": "Clean 6ms C++ solution",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/most-common-word/discuss/124286/Clean-6ms-C%2B%2B-solution"
        },
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "9",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/most-common-word/discuss/123973/Simple-Java-Solution"
        },
        {
            "discussion_title": "[JAVA] simple solution using hashmaps along with Asserts to test",
            "discussion_vote": "7",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/most-common-word/discuss/125686/JAVA-simple-solution-using-hashmaps-along-with-Asserts-to-test"
        }
    ],
    "820": [
        {
            "discussion_title": "[C++/Java/Python] Easy Understood Solution with Explanation",
            "discussion_vote": "29",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/short-encoding-of-words/discuss/125811/C%2B%2BJavaPython-Easy-Understood-Solution-with-Explanation"
        },
        {
            "discussion_title": "Trie Solution",
            "discussion_vote": "20",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/short-encoding-of-words/discuss/125784/Trie-Solution"
        },
        {
            "discussion_title": "Simple Concept using Trie",
            "discussion_vote": "6",
            "discussion_views": "238",
            "discussion_link": "https://leetcode.com/problems/short-encoding-of-words/discuss/125869/Simple-Concept-using-Trie"
        },
        {
            "discussion_title": "The problem description should be improved",
            "discussion_vote": "5",
            "discussion_views": "223",
            "discussion_link": "https://leetcode.com/problems/short-encoding-of-words/discuss/125929/The-problem-description-should-be-improved"
        },
        {
            "discussion_title": "Problem statement is ambiguous: substring vs. suffix",
            "discussion_vote": "3",
            "discussion_views": "127",
            "discussion_link": "https://leetcode.com/problems/short-encoding-of-words/discuss/130523/Problem-statement-is-ambiguous%3A-substring-vs.-suffix"
        }
    ],
    "821": [
        {
            "discussion_title": "[C++/Java/Python] 2-Pass with Explanation",
            "discussion_vote": "67",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/shortest-distance-to-a-character/discuss/125788/C%2B%2BJavaPython-2-Pass-with-Explanation"
        },
        {
            "discussion_title": "Explanation of description without solution",
            "discussion_vote": "15",
            "discussion_views": "880",
            "discussion_link": "https://leetcode.com/problems/shortest-distance-to-a-character/discuss/126124/Explanation-of-description-without-solution"
        },
        {
            "discussion_title": "Concise java solution with detailed explanation. Easy understand!!!",
            "discussion_vote": "6",
            "discussion_views": "689",
            "discussion_link": "https://leetcode.com/problems/shortest-distance-to-a-character/discuss/126116/Concise-java-solution-with-detailed-explanation.-Easy-understand!!!"
        },
        {
            "discussion_title": "Java - Single Pass with Trailing Pointer (Concise)",
            "discussion_vote": "6",
            "discussion_views": "988",
            "discussion_link": "https://leetcode.com/problems/shortest-distance-to-a-character/discuss/125850/Java-Single-Pass-with-Trailing-Pointer-(Concise)"
        },
        {
            "discussion_title": "Python 3",
            "discussion_vote": "4",
            "discussion_views": "554",
            "discussion_link": "https://leetcode.com/problems/shortest-distance-to-a-character/discuss/131816/Python-3"
        }
    ],
    "822": [
        {
            "discussion_title": "Problem statement is so confusing!",
            "discussion_vote": "34",
            "discussion_views": "709",
            "discussion_link": "https://leetcode.com/problems/card-flipping-game/discuss/127908/Problem-statement-is-so-confusing!"
        },
        {
            "discussion_title": "[C++/Java/Python] Easy and Concise with Explanation",
            "discussion_vote": "16",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/card-flipping-game/discuss/125791/C%2B%2BJavaPython-Easy-and-Concise-with-Explanation"
        },
        {
            "discussion_title": "Java solution using HashSet (The description in the problem really confuses me...)",
            "discussion_vote": "3",
            "discussion_views": "291",
            "discussion_link": "https://leetcode.com/problems/card-flipping-game/discuss/125810/Java-solution-using-HashSet-(The-description-in-the-problem-really-confuses-me...)"
        },
        {
            "discussion_title": "Python 2 lines",
            "discussion_vote": "3",
            "discussion_views": "328",
            "discussion_link": "https://leetcode.com/problems/card-flipping-game/discuss/125783/Python-2-lines"
        },
        {
            "discussion_title": "Simple Java Solution - 19ms",
            "discussion_vote": "1",
            "discussion_views": "124",
            "discussion_link": "https://leetcode.com/problems/card-flipping-game/discuss/125868/Simple-Java-Solution-19ms"
        }
    ],
    "823": [
        {
            "discussion_title": "[C++/Java/Python] DP solution",
            "discussion_vote": "25",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/binary-trees-with-factors/discuss/125794/C%2B%2BJavaPython-DP-solution"
        },
        {
            "discussion_title": "Concise Java solution using HashMap with detailed explanation. Easily understand!!!",
            "discussion_vote": "5",
            "discussion_views": "315",
            "discussion_link": "https://leetcode.com/problems/binary-trees-with-factors/discuss/126277/Concise-Java-solution-using-HashMap-with-detailed-explanation.-Easily-understand!!!"
        },
        {
            "discussion_title": "Short simple Python",
            "discussion_vote": "5",
            "discussion_views": "321",
            "discussion_link": "https://leetcode.com/problems/binary-trees-with-factors/discuss/126016/Short-simple-Python"
        },
        {
            "discussion_title": "Java accepted solution",
            "discussion_vote": "3",
            "discussion_views": "408",
            "discussion_link": "https://leetcode.com/problems/binary-trees-with-factors/discuss/125815/Java-accepted-solution"
        },
        {
            "discussion_title": "Java easy understanding DP solution with explanation",
            "discussion_vote": "1",
            "discussion_views": "154",
            "discussion_link": "https://leetcode.com/problems/binary-trees-with-factors/discuss/143127/Java-easy-understanding-DP-solution-with-explanation"
        }
    ],
    "824": [
        {
            "discussion_title": "Short C++ solution using i/o stringstream",
            "discussion_vote": "16",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/goat-latin/discuss/126973/Short-C%2B%2B-solution-using-io-stringstream"
        },
        {
            "discussion_title": "Java 5 ms solution with time and space complexity explanation",
            "discussion_vote": "12",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/goat-latin/discuss/128368/Java-5-ms-solution-with-time-and-space-complexity-explanation"
        },
        {
            "discussion_title": "C++, easy to understand, just as we think!",
            "discussion_vote": "5",
            "discussion_views": "315",
            "discussion_link": "https://leetcode.com/problems/goat-latin/discuss/139837/C%2B%2B-easy-to-understand-just-as-we-think!"
        },
        {
            "discussion_title": "[C++/Java/Python] Straight Forward Solution",
            "discussion_vote": "5",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/goat-latin/discuss/127024/C%2B%2BJavaPython-Straight-Forward-Solution"
        },
        {
            "discussion_title": "concise python solution",
            "discussion_vote": "3",
            "discussion_views": "258",
            "discussion_link": "https://leetcode.com/problems/goat-latin/discuss/128018/concise-python-solution"
        }
    ],
    "825": [
        {
            "discussion_title": "age[B] > age[A] and age[B] > 100 && age[A] < 100, isn't the latter redundant?",
            "discussion_vote": "57",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/friends-of-appropriate-ages/discuss/126936/ageB-greater-ageA-and-ageB-greater-100-andand-ageA-less-100-isn't-the-latter-redundant"
        },
        {
            "discussion_title": "10ms concise Java  solution, O(n) time and O(1) space",
            "discussion_vote": "39",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/friends-of-appropriate-ages/discuss/127341/10ms-concise-Java-solution-O(n)-time-and-O(1)-space"
        },
        {
            "discussion_title": "C++ 5 lines O(n), sliding sum",
            "discussion_vote": "32",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/friends-of-appropriate-ages/discuss/126930/C%2B%2B-5-lines-O(n)-sliding-sum"
        },
        {
            "discussion_title": "[C++/Java/Python] Easy and Straight Forward",
            "discussion_vote": "14",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/friends-of-appropriate-ages/discuss/127029/C%2B%2BJavaPython-Easy-and-Straight-Forward"
        },
        {
            "discussion_title": "Super Clear Explanation on Both O(NlgN) and O(N) solution STEP BY STEP",
            "discussion_vote": "6",
            "discussion_views": "766",
            "discussion_link": "https://leetcode.com/problems/friends-of-appropriate-ages/discuss/129665/Super-Clear-Explanation-on-Both-O(NlgN)-and-O(N)-solution-STEP-BY-STEP"
        }
    ],
    "826": [
        {
            "discussion_title": "[C++/Java/Python] Sort and Two pointer",
            "discussion_vote": "18",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/most-profit-assigning-work/discuss/127031/C%2B%2BJavaPython-Sort-and-Two-pointer"
        },
        {
            "discussion_title": "Java Solution with TreeMap",
            "discussion_vote": "8",
            "discussion_views": "383",
            "discussion_link": "https://leetcode.com/problems/most-profit-assigning-work/discuss/127133/Java-Solution-with-TreeMap"
        },
        {
            "discussion_title": "C++ 4 lines, sort, bucket sort, and bucked sort with two pointers",
            "discussion_vote": "7",
            "discussion_views": "683",
            "discussion_link": "https://leetcode.com/problems/most-profit-assigning-work/discuss/126964/C%2B%2B-4-lines-sort-bucket-sort-and-bucked-sort-with-two-pointers"
        },
        {
            "discussion_title": "Extremely Simple Using Priority Queue",
            "discussion_vote": "3",
            "discussion_views": "281",
            "discussion_link": "https://leetcode.com/problems/most-profit-assigning-work/discuss/126955/Extremely-Simple-Using-Priority-Queue"
        },
        {
            "discussion_title": "Python sort based",
            "discussion_vote": "3",
            "discussion_views": "142",
            "discussion_link": "https://leetcode.com/problems/most-profit-assigning-work/discuss/126932/Python-sort-based"
        }
    ],
    "827": [
        {
            "discussion_title": "C++ O(n*m) 15 ms, colorful islands",
            "discussion_vote": "35",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/making-a-large-island/discuss/127015/C%2B%2B-O(n*m)-15-ms-colorful-islands"
        },
        {
            "discussion_title": "[C++/Java/Python] Straight Forward O(N^2) with Explanations",
            "discussion_vote": "15",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/making-a-large-island/discuss/127032/C%2B%2BJavaPython-Straight-Forward-O(N2)-with-Explanations"
        },
        {
            "discussion_title": "DFS JAVA AC CONCISE SOLUTION",
            "discussion_vote": "12",
            "discussion_views": "943",
            "discussion_link": "https://leetcode.com/problems/making-a-large-island/discuss/127256/DFS-JAVA-AC-CONCISE-SOLUTION"
        },
        {
            "discussion_title": "C++ disjoint set or union find",
            "discussion_vote": "5",
            "discussion_views": "258",
            "discussion_link": "https://leetcode.com/problems/making-a-large-island/discuss/127869/C%2B%2B-disjoint-set-or-union-find"
        },
        {
            "discussion_title": "Extremely Simple Concept Using Marker",
            "discussion_vote": "4",
            "discussion_views": "208",
            "discussion_link": "https://leetcode.com/problems/making-a-large-island/discuss/126960/Extremely-Simple-Concept-Using-Marker"
        }
    ],
    "828": [
        {
            "discussion_title": "One pass O(N), Straight Forward",
            "discussion_vote": "95",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/unique-letter-string/discuss/128952/One-pass-O(N)-Straight-Forward"
        },
        {
            "discussion_title": "O(N) Java Solution, DP, Clear and easy to Understand",
            "discussion_vote": "28",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/unique-letter-string/discuss/129021/O(N)-Java-Solution-DP-Clear-and-easy-to-Understand"
        },
        {
            "discussion_title": "Simple Java 2 Pointer",
            "discussion_vote": "4",
            "discussion_views": "345",
            "discussion_link": "https://leetcode.com/problems/unique-letter-string/discuss/129246/Simple-Java-2-Pointer"
        },
        {
            "discussion_title": "Very simple O(N) with Prev and Next",
            "discussion_vote": "3",
            "discussion_views": "103",
            "discussion_link": "https://leetcode.com/problems/unique-letter-string/discuss/172041/Very-simple-O(N)-with-Prev-and-Next"
        },
        {
            "discussion_title": "Concise DP O(n) solution",
            "discussion_vote": "3",
            "discussion_views": "131",
            "discussion_link": "https://leetcode.com/problems/unique-letter-string/discuss/158378/Concise-DP-O(n)-solution"
        }
    ],
    "829": [
        {
            "discussion_title": "5 lines C++ solution with detailed mathematical explanation.",
            "discussion_vote": "58",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers-sum/discuss/129015/5-lines-C%2B%2B-solution-with-detailed-mathematical-explanation."
        },
        {
            "discussion_title": "5 line O(N ^ 0.5) Java code - Math method",
            "discussion_vote": "39",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers-sum/discuss/128959/5-line-O(N-0.5)-Java-code-Math-method"
        },
        {
            "discussion_title": "[C++/Java/Python] 4-lines and O(logN), Count Odd Factors",
            "discussion_vote": "13",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers-sum/discuss/128947/C%2B%2BJavaPython-4-lines-and-O(logN)-Count-Odd-Factors"
        },
        {
            "discussion_title": "C++ 2 lines O(sqrt n)",
            "discussion_vote": "9",
            "discussion_views": "590",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers-sum/discuss/129033/C%2B%2B-2-lines-O(sqrt-n)"
        },
        {
            "discussion_title": "C++ solution with strict and detailed proof",
            "discussion_vote": "5",
            "discussion_views": "296",
            "discussion_link": "https://leetcode.com/problems/consecutive-numbers-sum/discuss/155120/C%2B%2B-solution-with-strict-and-detailed-proof"
        }
    ],
    "830": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "17",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/positions-of-large-groups/discuss/128957/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "Oneline Python using Regex",
            "discussion_vote": "13",
            "discussion_views": "389",
            "discussion_link": "https://leetcode.com/problems/positions-of-large-groups/discuss/129431/Oneline-Python-using-Regex"
        },
        {
            "discussion_title": "Ambiguous: \"the final answer should be in lexicographic order.\"",
            "discussion_vote": "10",
            "discussion_views": "269",
            "discussion_link": "https://leetcode.com/problems/positions-of-large-groups/discuss/129140/Ambiguous%3A-%22the-final-answer-should-be-in-lexicographic-order.%22"
        },
        {
            "discussion_title": "Java Solution - Two Pointers",
            "discussion_vote": "5",
            "discussion_views": "519",
            "discussion_link": "https://leetcode.com/problems/positions-of-large-groups/discuss/128961/Java-Solution-Two-Pointers"
        },
        {
            "discussion_title": "Python concise",
            "discussion_vote": "5",
            "discussion_views": "290",
            "discussion_link": "https://leetcode.com/problems/positions-of-large-groups/discuss/128956/Python-concise"
        }
    ],
    "831": [
        {
            "discussion_title": "[C++/Java/Python] Easy and Concise ",
            "discussion_vote": "20",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/masking-personal-information/discuss/128955/C%2B%2BJavaPython-Easy-and-Concise"
        },
        {
            "discussion_title": "Short python solution",
            "discussion_vote": "8",
            "discussion_views": "135",
            "discussion_link": "https://leetcode.com/problems/masking-personal-information/discuss/128976/Short-python-solution"
        },
        {
            "discussion_title": "Straightforward C++",
            "discussion_vote": "3",
            "discussion_views": "136",
            "discussion_link": "https://leetcode.com/problems/masking-personal-information/discuss/129400/Straightforward-C%2B%2B"
        },
        {
            "discussion_title": "Readable Java Code ",
            "discussion_vote": "1",
            "discussion_views": "138",
            "discussion_link": "https://leetcode.com/problems/masking-personal-information/discuss/128999/Readable-Java-Code"
        },
        {
            "discussion_title": "Python with regular expressions",
            "discussion_vote": "0",
            "discussion_views": "2",
            "discussion_link": "https://leetcode.com/problems/masking-personal-information/discuss/196136/Python-with-regular-expressions"
        }
    ],
    "832": [
        {
            "discussion_title": "[C++/Java/Python] Reverse and Toggle",
            "discussion_vote": "33",
            "discussion_views": "6.2K",
            "discussion_link": "https://leetcode.com/problems/flipping-an-image/discuss/130590/C%2B%2BJavaPython-Reverse-and-Toggle"
        },
        {
            "discussion_title": "Python 1 line",
            "discussion_vote": "12",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/flipping-an-image/discuss/132026/Python-1-line"
        },
        {
            "discussion_title": "One pass in place JAVA Solution",
            "discussion_vote": "7",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/flipping-an-image/discuss/140128/One-pass-in-place-JAVA-Solution"
        },
        {
            "discussion_title": "One-Liner JavaScript Solution",
            "discussion_vote": "6",
            "discussion_views": "427",
            "discussion_link": "https://leetcode.com/problems/flipping-an-image/discuss/130644/One-Liner-JavaScript-Solution"
        },
        {
            "discussion_title": "What are the C parameters? ",
            "discussion_vote": "5",
            "discussion_views": "445",
            "discussion_link": "https://leetcode.com/problems/flipping-an-image/discuss/131571/What-are-the-C-parameters"
        }
    ],
    "833": [
        {
            "discussion_title": "[C++/Java/Python] Replace S from right to left",
            "discussion_vote": "39",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-in-string/discuss/130587/C%2B%2BJavaPython-Replace-S-from-right-to-left"
        },
        {
            "discussion_title": "java 10 line 14ms and 13 line 7ms  codes - both use StringBuilder replace from end.",
            "discussion_vote": "15",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-in-string/discuss/130614/java-10-line-14ms-and-13-line-7ms-codes-both-use-StringBuilder-replace-from-end."
        },
        {
            "discussion_title": "Java O(n) solution",
            "discussion_vote": "11",
            "discussion_views": "544",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-in-string/discuss/134758/Java-O(n)-solution"
        },
        {
            "discussion_title": "C++ 5 lines, 6 ms bucket sort O(n)",
            "discussion_vote": "10",
            "discussion_views": "698",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-in-string/discuss/130577/C%2B%2B-5-lines-6-ms-bucket-sort-O(n)"
        },
        {
            "discussion_title": "Short Java TreeMap solution!",
            "discussion_vote": "4",
            "discussion_views": "268",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-in-string/discuss/130568/Short-Java-TreeMap-solution!"
        }
    ],
    "834": [
        {
            "discussion_title": "[C++/Java/Python] Pre-order and Post-order DFS, O(N)",
            "discussion_vote": "74",
            "discussion_views": "6.4K",
            "discussion_link": "https://leetcode.com/problems/sum-of-distances-in-tree/discuss/130583/C%2B%2BJavaPython-Pre-order-and-Post-order-DFS-O(N)"
        },
        {
            "discussion_title": "Two traversals O(N) python solution with Explanation",
            "discussion_vote": "31",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/sum-of-distances-in-tree/discuss/130567/Two-traversals-O(N)-python-solution-with-Explanation"
        },
        {
            "discussion_title": "Intuition of O(n) solution based on \"undirected\" tree ",
            "discussion_vote": "9",
            "discussion_views": "949",
            "discussion_link": "https://leetcode.com/problems/sum-of-distances-in-tree/discuss/132133/Intuition-of-O(n)-solution-based-on-%22undirected%22-tree"
        },
        {
            "discussion_title": "Clean Python O(N) solution with explanation",
            "discussion_vote": "4",
            "discussion_views": "392",
            "discussion_link": "https://leetcode.com/problems/sum-of-distances-in-tree/discuss/130654/Clean-Python-O(N)-solution-with-explanation"
        },
        {
            "discussion_title": "[Java] Accepted concise solution with DFS and built-into graph memoization",
            "discussion_vote": "3",
            "discussion_views": "663",
            "discussion_link": "https://leetcode.com/problems/sum-of-distances-in-tree/discuss/142858/Java-Accepted-concise-solution-with-DFS-and-built-into-graph-memoization"
        }
    ],
    "835": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "91",
            "discussion_views": "6.5K",
            "discussion_link": "https://leetcode.com/problems/image-overlap/discuss/130623/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "Python Easy Logic",
            "discussion_vote": "22",
            "discussion_views": "757",
            "discussion_link": "https://leetcode.com/problems/image-overlap/discuss/150504/Python-Easy-Logic"
        },
        {
            "discussion_title": "A generic and easy to understand method",
            "discussion_vote": "12",
            "discussion_views": "557",
            "discussion_link": "https://leetcode.com/problems/image-overlap/discuss/138976/A-generic-and-easy-to-understand-method"
        },
        {
            "discussion_title": "Short and lazy, just expand the graph",
            "discussion_vote": "12",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/image-overlap/discuss/130608/Short-and-lazy-just-expand-the-graph"
        },
        {
            "discussion_title": "An interesting SOLUTION: Let us think about it as \"Convolution\"",
            "discussion_vote": "9",
            "discussion_views": "579",
            "discussion_link": "https://leetcode.com/problems/image-overlap/discuss/131344/An-interesting-SOLUTION%3A-Let-us-think-about-it-as-%22Convolution%22"
        }
    ],
    "836": [
        {
            "discussion_title": "[C++/Java/Python] 1-line Solution, 1D to 2D",
            "discussion_vote": "41",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/rectangle-overlap/discuss/132340/C%2B%2BJavaPython-1-line-Solution-1D-to-2D"
        },
        {
            "discussion_title": "C++ Solution with easy explanation",
            "discussion_vote": "32",
            "discussion_views": "765",
            "discussion_link": "https://leetcode.com/problems/rectangle-overlap/discuss/133175/C%2B%2B-Solution-with-easy-explanation"
        },
        {
            "discussion_title": "De Morgan's Law and Boolean Algebra",
            "discussion_vote": "9",
            "discussion_views": "963",
            "discussion_link": "https://leetcode.com/problems/rectangle-overlap/discuss/133045/De-Morgan's-Law-and-Boolean-Algebra"
        },
        {
            "discussion_title": "Java One Line with explanation",
            "discussion_vote": "6",
            "discussion_views": "783",
            "discussion_link": "https://leetcode.com/problems/rectangle-overlap/discuss/161497/Java-One-Line-with-explanation"
        },
        {
            "discussion_title": "Clear Java Code x 2",
            "discussion_vote": "4",
            "discussion_views": "463",
            "discussion_link": "https://leetcode.com/problems/rectangle-overlap/discuss/141724/Clear-Java-Code-x-2"
        }
    ],
    "837": [
        {
            "discussion_title": "One Pass DP O(N)",
            "discussion_vote": "45",
            "discussion_views": "4.7K",
            "discussion_link": "https://leetcode.com/problems/new-21-game/discuss/132334/One-Pass-DP-O(N)"
        },
        {
            "discussion_title": "Please make sure your description is correct before you publish it, otherwise you create a disaster",
            "discussion_vote": "38",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/new-21-game/discuss/132324/Please-make-sure-your-description-is-correct-before-you-publish-it-otherwise-you-create-a-disaster"
        },
        {
            "discussion_title": "Java O(K + W) DP solution with explanation",
            "discussion_vote": "29",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/new-21-game/discuss/132358/Java-O(K-%2B-W)-DP-solution-with-explanation"
        },
        {
            "discussion_title": "My take on how to reach at Solution",
            "discussion_vote": "26",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/new-21-game/discuss/132503/My-take-on-how-to-reach-at-Solution"
        },
        {
            "discussion_title": "I think the answer provided isn't correct, we need to consider conditional probability",
            "discussion_vote": "7",
            "discussion_views": "446",
            "discussion_link": "https://leetcode.com/problems/new-21-game/discuss/132638/I-think-the-answer-provided-isn't-correct-we-need-to-consider-conditional-probability"
        }
    ],
    "838": [
        {
            "discussion_title": "[C++/Java/Python] Two Pointers",
            "discussion_vote": "29",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/push-dominoes/discuss/132332/C%2B%2BJavaPython-Two-Pointers"
        },
        {
            "discussion_title": "funny idea but passed within time limit (Python)",
            "discussion_vote": "20",
            "discussion_views": "891",
            "discussion_link": "https://leetcode.com/problems/push-dominoes/discuss/132330/funny-idea-but-passed-within-time-limit-(Python)"
        },
        {
            "discussion_title": "Java, one pass, in-place, 13ms",
            "discussion_vote": "18",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/push-dominoes/discuss/132482/Java-one-pass-in-place-13ms"
        },
        {
            "discussion_title": "[Python] O(N) solution. Go through array twice",
            "discussion_vote": "5",
            "discussion_views": "412",
            "discussion_link": "https://leetcode.com/problems/push-dominoes/discuss/132682/Python-O(N)-solution.-Go-through-array-twice"
        },
        {
            "discussion_title": "Java, one pass, no extra storage, detailed explanation",
            "discussion_vote": "5",
            "discussion_views": "397",
            "discussion_link": "https://leetcode.com/problems/push-dominoes/discuss/132520/Java-one-pass-no-extra-storage-detailed-explanation"
        }
    ],
    "839": [
        {
            "discussion_title": "Short C++ solution at 220ms, using disjoint set",
            "discussion_vote": "23",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/similar-string-groups/discuss/132374/Short-C%2B%2B-solution-at-220ms-using-disjoint-set"
        },
        {
            "discussion_title": "Simple Java Solution using DFS",
            "discussion_vote": "16",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/similar-string-groups/discuss/132318/Simple-Java-Solution-using-DFS"
        },
        {
            "discussion_title": "Python, Union Find Solution with Tricky, min(O(MN^2), O(NM^2))",
            "discussion_vote": "5",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/similar-string-groups/discuss/132345/Python-Union-Find-Solution-with-Tricky-min(O(MN2)-O(NM2))"
        },
        {
            "discussion_title": "Simple JAVA with BFS",
            "discussion_vote": "4",
            "discussion_views": "676",
            "discussion_link": "https://leetcode.com/problems/similar-string-groups/discuss/132464/Simple-JAVA-with-BFS"
        },
        {
            "discussion_title": "Simple Java 8 / Python Union Find ",
            "discussion_vote": "4",
            "discussion_views": "927",
            "discussion_link": "https://leetcode.com/problems/similar-string-groups/discuss/132317/Simple-Java-8-Python-Union-Find"
        }
    ],
    "840": [
        {
            "discussion_title": "Python, 5 and 43816729",
            "discussion_vote": "43",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/magic-squares-in-grid/discuss/133874/Python-5-and-43816729"
        },
        {
            "discussion_title": "One misleading problem",
            "discussion_vote": "16",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/magic-squares-in-grid/discuss/133907/One-misleading-problem"
        },
        {
            "discussion_title": "Java 8 ms Straightforward & Ugly  Solution",
            "discussion_vote": "10",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/magic-squares-in-grid/discuss/133938/Java-8-ms-Straightforward-and-Ugly-Solution"
        },
        {
            "discussion_title": "Why is this test case yielding 0?",
            "discussion_vote": "8",
            "discussion_views": "367",
            "discussion_link": "https://leetcode.com/problems/magic-squares-in-grid/discuss/133857/Why-is-this-test-case-yielding-0"
        },
        {
            "discussion_title": "Straightforward Java Solution",
            "discussion_vote": "5",
            "discussion_views": "728",
            "discussion_link": "https://leetcode.com/problems/magic-squares-in-grid/discuss/133861/Straightforward-Java-Solution"
        }
    ],
    "841": [
        {
            "discussion_title": "Clean Code",
            "discussion_vote": "17",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/keys-and-rooms/discuss/133895/Clean-Code"
        },
        {
            "discussion_title": "Straight Forward",
            "discussion_vote": "16",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/keys-and-rooms/discuss/133855/Straight-Forward"
        },
        {
            "discussion_title": "Python Simple Recursive DFS",
            "discussion_vote": "5",
            "discussion_views": "472",
            "discussion_link": "https://leetcode.com/problems/keys-and-rooms/discuss/135840/Python-Simple-Recursive-DFS"
        },
        {
            "discussion_title": "BFS (9 lines, 10ms) and DFS (7 lines, 18ms) in C++ w/ beginner friendly explanation",
            "discussion_vote": "5",
            "discussion_views": "701",
            "discussion_link": "https://leetcode.com/problems/keys-and-rooms/discuss/135306/BFS-(9-lines-10ms)-and-DFS-(7-lines-18ms)-in-C%2B%2B-w-beginner-friendly-explanation"
        },
        {
            "discussion_title": "Java   8 lines",
            "discussion_vote": "3",
            "discussion_views": "537",
            "discussion_link": "https://leetcode.com/problems/keys-and-rooms/discuss/133944/Java-8-lines"
        }
    ],
    "842": [
        {
            "discussion_title": "short and fast backtracking solution",
            "discussion_vote": "29",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/discuss/133936/short-and-fast-backtracking-solution"
        },
        {
            "discussion_title": "Well Commented C++ Backtracking Solution",
            "discussion_vote": "13",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/discuss/133983/Well-Commented-C%2B%2B-Backtracking-Solution"
        },
        {
            "discussion_title": "what is wrong with this testcase?",
            "discussion_vote": "4",
            "discussion_views": "162",
            "discussion_link": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/discuss/139349/what-is-wrong-with-this-testcase"
        },
        {
            "discussion_title": "Backtracking with memoization",
            "discussion_vote": "3",
            "discussion_views": "560",
            "discussion_link": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/discuss/134141/Backtracking-with-memoization"
        },
        {
            "discussion_title": "Simple Java Solution using DFS",
            "discussion_vote": "3",
            "discussion_views": "444",
            "discussion_link": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/discuss/133906/Simple-Java-Solution-using-DFS"
        }
    ],
    "843": [
        {
            "discussion_title": "Random Guess and Minimax Guess with Comparison",
            "discussion_vote": "131",
            "discussion_views": "9.4K",
            "discussion_link": "https://leetcode.com/problems/guess-the-word/discuss/133862/Random-Guess-and-Minimax-Guess-with-Comparison"
        },
        {
            "discussion_title": "Optimal MinMax Solution (+ extra challenging test cases)",
            "discussion_vote": "32",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/guess-the-word/discuss/134251/Optimal-MinMax-Solution-(%2B-extra-challenging-test-cases)"
        },
        {
            "discussion_title": "Screencast of LeetCode Weekly Contest 86",
            "discussion_vote": "30",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/guess-the-word/discuss/133981/Screencast-of-LeetCode-Weekly-Contest-86"
        },
        {
            "discussion_title": "C++ elimination histogram, beats Minimax",
            "discussion_vote": "18",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/guess-the-word/discuss/134087/C%2B%2B-elimination-histogram-beats-Minimax"
        },
        {
            "discussion_title": "Python O(n) with maximum overlap heuristic",
            "discussion_vote": "17",
            "discussion_views": "620",
            "discussion_link": "https://leetcode.com/problems/guess-the-word/discuss/160945/Python-O(n)-with-maximum-overlap-heuristic"
        }
    ],
    "844": [
        {
            "discussion_title": "[C++/Java/Python] O(N) time and O(1) space",
            "discussion_vote": "45",
            "discussion_views": "6.8K",
            "discussion_link": "https://leetcode.com/problems/backspace-string-compare/discuss/135603/C%2B%2BJavaPython-O(N)-time-and-O(1)-space"
        },
        {
            "discussion_title": "[Java/C++] Efficient and Simple Solution WITHOUT Stack etc",
            "discussion_vote": "24",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/backspace-string-compare/discuss/135684/JavaC%2B%2B-Efficient-and-Simple-Solution-WITHOUT-Stack-etc"
        },
        {
            "discussion_title": "Java Two Pointer With Explanation - beat 98%",
            "discussion_vote": "9",
            "discussion_views": "578",
            "discussion_link": "https://leetcode.com/problems/backspace-string-compare/discuss/162827/Java-Two-Pointer-With-Explanation-beat-98"
        },
        {
            "discussion_title": "8 lines C++ O(1) space easy to understand",
            "discussion_vote": "8",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/backspace-string-compare/discuss/135873/8-lines-C%2B%2B-O(1)-space-easy-to-understand"
        },
        {
            "discussion_title": "Python O(1) Space",
            "discussion_vote": "7",
            "discussion_views": "700",
            "discussion_link": "https://leetcode.com/problems/backspace-string-compare/discuss/161771/Python-O(1)-Space"
        }
    ],
    "845": [
        {
            "discussion_title": "[C++/Java/Python] 1-pass and O(1) space",
            "discussion_vote": "63",
            "discussion_views": "3.8K",
            "discussion_link": "https://leetcode.com/problems/longest-mountain-in-array/discuss/135593/C%2B%2BJavaPython-1-pass-and-O(1)-space"
        },
        {
            "discussion_title": "Simple Java Solution",
            "discussion_vote": "7",
            "discussion_views": "845",
            "discussion_link": "https://leetcode.com/problems/longest-mountain-in-array/discuss/135612/Simple-Java-Solution"
        },
        {
            "discussion_title": "1-pass Java Two Point Solution",
            "discussion_vote": "4",
            "discussion_views": "144",
            "discussion_link": "https://leetcode.com/problems/longest-mountain-in-array/discuss/165667/1-pass-Java-Two-Point-Solution"
        },
        {
            "discussion_title": "Simple O(n) one pass O(1) space Java AC solution beats 99.05 ",
            "discussion_vote": "3",
            "discussion_views": "319",
            "discussion_link": "https://leetcode.com/problems/longest-mountain-in-array/discuss/150136/Simple-O(n)-one-pass-O(1)-space-Java-AC-solution-beats-99.05"
        },
        {
            "discussion_title": "Easy to understand - Find peaks and then find max length mountain O(N)",
            "discussion_vote": "3",
            "discussion_views": "604",
            "discussion_link": "https://leetcode.com/problems/longest-mountain-in-array/discuss/135632/Easy-to-understand-Find-peaks-and-then-find-max-length-mountain-O(N)"
        }
    ],
    "846": [
        {
            "discussion_title": "[C++/Java/Python] O(MlogM) Complexity",
            "discussion_vote": "35",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/hand-of-straights/discuss/135598/C%2B%2BJavaPython-O(MlogM)-Complexity"
        },
        {
            "discussion_title": "short and clear Python solution + B\u7ad9\u8bb2\u89e3",
            "discussion_vote": "14",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/hand-of-straights/discuss/135600/short-and-clear-Python-solution-%2B-B"
        },
        {
            "discussion_title": "Simple Java solution using priority queue",
            "discussion_vote": "11",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/hand-of-straights/discuss/136200/Simple-Java-solution-using-priority-queue"
        },
        {
            "discussion_title": "Short Java solution!",
            "discussion_vote": "9",
            "discussion_views": "756",
            "discussion_link": "https://leetcode.com/problems/hand-of-straights/discuss/135700/Short-Java-solution!"
        },
        {
            "discussion_title": "Python O(nlgn) simple solution with intuition",
            "discussion_vote": "9",
            "discussion_views": "520",
            "discussion_link": "https://leetcode.com/problems/hand-of-straights/discuss/135655/Python-O(nlgn)-simple-solution-with-intuition"
        }
    ],
    "847": [
        {
            "discussion_title": "Screencast of LeetCode Weekly Contest 87",
            "discussion_vote": "56",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/discuss/135599/Screencast-of-LeetCode-Weekly-Contest-87"
        },
        {
            "discussion_title": "Fast BFS Solution (46ms) -- Clear, Detailed Explanation Included",
            "discussion_vote": "28",
            "discussion_views": "4.0K",
            "discussion_link": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/discuss/135809/Fast-BFS-Solution-(46ms)-Clear-Detailed-Explanation-Included"
        },
        {
            "discussion_title": "Java DP Solution",
            "discussion_vote": "24",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/discuss/135686/Java-DP-Solution"
        },
        {
            "discussion_title": "Python 8 lines Heapq & BFS & Deque solutions",
            "discussion_vote": "8",
            "discussion_views": "658",
            "discussion_link": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/discuss/147123/Python-8-lines-Heapq-and-BFS-and-Deque-solutions"
        },
        {
            "discussion_title": "can't understand the description,what's the meaning of the given array[][]",
            "discussion_vote": "7",
            "discussion_views": "275",
            "discussion_link": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/discuss/135720/can't-understand-the-descriptionwhat's-the-meaning-of-the-given-array"
        }
    ],
    "848": [
        {
            "discussion_title": "[C++/Java/Python] Easy Understood",
            "discussion_vote": "13",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/shifting-letters/discuss/137906/C%2B%2BJavaPython-Easy-Understood"
        },
        {
            "discussion_title": "Java clean solution",
            "discussion_vote": "8",
            "discussion_views": "375",
            "discussion_link": "https://leetcode.com/problems/shifting-letters/discuss/138128/Java-clean-solution"
        },
        {
            "discussion_title": "Short and concise C++ solution, 3 lines",
            "discussion_vote": "2",
            "discussion_views": "215",
            "discussion_link": "https://leetcode.com/problems/shifting-letters/discuss/137963/Short-and-concise-C%2B%2B-solution-3-lines"
        },
        {
            "discussion_title": "C++ 2 lines, O(n)",
            "discussion_vote": "2",
            "discussion_views": "201",
            "discussion_link": "https://leetcode.com/problems/shifting-letters/discuss/137903/C%2B%2B-2-lines-O(n)"
        },
        {
            "discussion_title": "Linear One Pass Solution Beats 100% Best Solution and Clean. Explanation",
            "discussion_vote": "1",
            "discussion_views": "97",
            "discussion_link": "https://leetcode.com/problems/shifting-letters/discuss/159767/Linear-One-Pass-Solution-Beats-100-Best-Solution-and-Clean.-Explanation"
        }
    ],
    "849": [
        {
            "discussion_title": "[C++/Java] 1 Pass Solution",
            "discussion_vote": "39",
            "discussion_views": "4.6K",
            "discussion_link": "https://leetcode.com/problems/maximize-distance-to-closest-person/discuss/137912/C%2B%2BJava-1-Pass-Solution"
        },
        {
            "discussion_title": "Clean / One Pass / Two Pointers / Java Solution",
            "discussion_vote": "34",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/maximize-distance-to-closest-person/discuss/155564/Clean-One-Pass-Two-Pointers-Java-Solution"
        },
        {
            "discussion_title": "3 lines C++ one pass",
            "discussion_vote": "9",
            "discussion_views": "657",
            "discussion_link": "https://leetcode.com/problems/maximize-distance-to-closest-person/discuss/138550/3-lines-C%2B%2B-one-pass"
        },
        {
            "discussion_title": "java one pass easy understand",
            "discussion_vote": "9",
            "discussion_views": "977",
            "discussion_link": "https://leetcode.com/problems/maximize-distance-to-closest-person/discuss/137991/java-one-pass-easy-understand"
        },
        {
            "discussion_title": "Python and C++ Solution using two pointers, short and elegant, beats 98%",
            "discussion_vote": "5",
            "discussion_views": "660",
            "discussion_link": "https://leetcode.com/problems/maximize-distance-to-closest-person/discuss/148030/Python-and-C%2B%2B-Solution-using-two-pointers-short-and-elegant-beats-98"
        }
    ],
    "850": [
        {
            "discussion_title": "LeetCode Weekly Contest 88 screencast",
            "discussion_vote": "24",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area-ii/discuss/137980/LeetCode-Weekly-Contest-88-screencast"
        },
        {
            "discussion_title": "\u3010Top\u3011Java Solution with detailed explaination, check this one ! ",
            "discussion_vote": "23",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area-ii/discuss/139835/TopJava-Solution-with-detailed-explaination-check-this-one-!"
        },
        {
            "discussion_title": "[C++/Python] Discretization and O(NlogN)",
            "discussion_vote": "23",
            "discussion_views": "3.5K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area-ii/discuss/137914/C%2B%2BPython-Discretization-and-O(NlogN)"
        },
        {
            "discussion_title": "Java TreeMap solution inspired by Skyline and Meeting Room",
            "discussion_vote": "16",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area-ii/discuss/137941/Java-TreeMap-solution-inspired-by-Skyline-and-Meeting-Room"
        },
        {
            "discussion_title": "Clean Recursive Solution [Java]",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/rectangle-area-ii/discuss/138028/Clean-Recursive-Solution-Java"
        }
    ],
    "851": [
        {
            "discussion_title": "[C++/Java/Python] Concise DFS ",
            "discussion_vote": "21",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/loud-and-rich/discuss/137918/C%2B%2BJavaPython-Concise-DFS"
        },
        {
            "discussion_title": "Example is confusing",
            "discussion_vote": "17",
            "discussion_views": "897",
            "discussion_link": "https://leetcode.com/problems/loud-and-rich/discuss/137935/Example-is-confusing"
        },
        {
            "discussion_title": "DFS with memory",
            "discussion_vote": "3",
            "discussion_views": "349",
            "discussion_link": "https://leetcode.com/problems/loud-and-rich/discuss/138125/DFS-with-memory"
        },
        {
            "discussion_title": "C++ with topological sorting",
            "discussion_vote": "3",
            "discussion_views": "185",
            "discussion_link": "https://leetcode.com/problems/loud-and-rich/discuss/138088/C%2B%2B-with-topological-sorting"
        },
        {
            "discussion_title": "Java BFS",
            "discussion_vote": "1",
            "discussion_views": "313",
            "discussion_link": "https://leetcode.com/problems/loud-and-rich/discuss/137987/Java-BFS"
        }
    ],
    "852": [
        {
            "discussion_title": "[C++/Java/Python] Better than Binary Search",
            "discussion_vote": "23",
            "discussion_views": "4.8K",
            "discussion_link": "https://leetcode.com/problems/peak-index-in-a-mountain-array/discuss/139848/C%2B%2BJavaPython-Better-than-Binary-Search"
        },
        {
            "discussion_title": "Java O(n) and O(log(n)) code",
            "discussion_vote": "5",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/peak-index-in-a-mountain-array/discuss/139840/Java-O(n)-and-O(log(n))-code"
        },
        {
            "discussion_title": "Java - Basic Binary Search Solution",
            "discussion_vote": "3",
            "discussion_views": "498",
            "discussion_link": "https://leetcode.com/problems/peak-index-in-a-mountain-array/discuss/143892/Java-Basic-Binary-Search-Solution"
        },
        {
            "discussion_title": "Python & Javascript 1-liner",
            "discussion_vote": "3",
            "discussion_views": "376",
            "discussion_link": "https://leetcode.com/problems/peak-index-in-a-mountain-array/discuss/139847/Python-and-Javascript-1-liner"
        },
        {
            "discussion_title": "Python3 Binary Search",
            "discussion_vote": "2",
            "discussion_views": "503",
            "discussion_link": "https://leetcode.com/problems/peak-index-in-a-mountain-array/discuss/145986/Python3-Binary-Search"
        }
    ],
    "853": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "61",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/car-fleet/discuss/139850/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "Easy understanding JAVA TreeMap Solution with explanation & comment",
            "discussion_vote": "12",
            "discussion_views": "811",
            "discussion_link": "https://leetcode.com/problems/car-fleet/discuss/139999/Easy-understanding-JAVA-TreeMap-Solution-with-explanation-and-comment"
        },
        {
            "discussion_title": "Java 10 and 11 liner with comment, both time O(nlog(n)) space O(n)",
            "discussion_vote": "6",
            "discussion_views": "383",
            "discussion_link": "https://leetcode.com/problems/car-fleet/discuss/139991/Java-10-and-11-liner-with-comment-both-time-O(nlog(n))-space-O(n)"
        },
        {
            "discussion_title": "Solution without Map",
            "discussion_vote": "4",
            "discussion_views": "246",
            "discussion_link": "https://leetcode.com/problems/car-fleet/discuss/140819/Solution-without-Map"
        },
        {
            "discussion_title": "Java O(N) without sorting",
            "discussion_vote": "4",
            "discussion_views": "859",
            "discussion_link": "https://leetcode.com/problems/car-fleet/discuss/140782/Java-O(N)-without-sorting"
        }
    ],
    "854": [
        {
            "discussion_title": "JAVA BFS 32 ms clean/concise/explanation/whatever",
            "discussion_vote": "28",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/k-similar-strings/discuss/140099/JAVA-BFS-32-ms-cleanconciseexplanationwhatever"
        },
        {
            "discussion_title": "Java Backtracking with Memorization",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/k-similar-strings/discuss/139872/Java-Backtracking-with-Memorization"
        },
        {
            "discussion_title": "C++ 6ms Solution",
            "discussion_vote": "8",
            "discussion_views": "702",
            "discussion_link": "https://leetcode.com/problems/k-similar-strings/discuss/140299/C%2B%2B-6ms-Solution"
        },
        {
            "discussion_title": "C++ BFS solution",
            "discussion_vote": "8",
            "discussion_views": "867",
            "discussion_link": "https://leetcode.com/problems/k-similar-strings/discuss/139926/C%2B%2B-BFS-solution"
        },
        {
            "discussion_title": "Problem Statement Was WRONG",
            "discussion_vote": "6",
            "discussion_views": "697",
            "discussion_link": "https://leetcode.com/problems/k-similar-strings/discuss/139845/Problem-Statement-Was-WRONG"
        }
    ],
    "855": [
        {
            "discussion_title": "[Java] PriorityQueue with customized object. seat: O(logn), leave O(n) with explanation",
            "discussion_vote": "53",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/exam-room/discuss/148595/Java-PriorityQueue-with-customized-object.-seat%3A-O(logn)-leave-O(n)-with-explanation"
        },
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "27",
            "discussion_views": "5.2K",
            "discussion_link": "https://leetcode.com/problems/exam-room/discuss/139862/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "[Python] O(log n) time for both seat() and leave() with heapq and dicts - Detailed explanation",
            "discussion_vote": "22",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/exam-room/discuss/139941/Python-O(log-n)-time-for-both-seat()-and-leave()-with-heapq-and-dicts-Detailed-explanation"
        },
        {
            "discussion_title": "Java Solution based on treeset",
            "discussion_vote": "12",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/exam-room/discuss/139885/Java-Solution-based-on-treeset"
        },
        {
            "discussion_title": "C++ O(logn) seat() and O(logn) leave() with STL set and map",
            "discussion_vote": "11",
            "discussion_views": "926",
            "discussion_link": "https://leetcode.com/problems/exam-room/discuss/141583/C%2B%2B-O(logn)-seat()-and-O(logn)-leave()-with-STL-set-and-map"
        }
    ],
    "856": [
        {
            "discussion_title": "[C++/Java/Python] Concise O(1) Space",
            "discussion_vote": "58",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/score-of-parentheses/discuss/141777/C%2B%2BJavaPython-Concise-O(1)-Space"
        },
        {
            "discussion_title": "Java solution using Stack",
            "discussion_vote": "38",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/score-of-parentheses/discuss/141763/Java-solution-using-Stack"
        },
        {
            "discussion_title": "1-line Python",
            "discussion_vote": "28",
            "discussion_views": "826",
            "discussion_link": "https://leetcode.com/problems/score-of-parentheses/discuss/141778/1-line-Python"
        },
        {
            "discussion_title": "Python & Javascript // simple and readable // Stack solution",
            "discussion_vote": "11",
            "discussion_views": "401",
            "discussion_link": "https://leetcode.com/problems/score-of-parentheses/discuss/141828/Python-and-Javascript-simple-and-readable-Stack-solution"
        },
        {
            "discussion_title": "Java 8ms 11 lines recursion with explanation",
            "discussion_vote": "9",
            "discussion_views": "571",
            "discussion_link": "https://leetcode.com/problems/score-of-parentheses/discuss/141779/Java-8ms-11-lines-recursion-with-explanation"
        }
    ],
    "857": [
        {
            "discussion_title": "Detailed explanation O(NlogN)",
            "discussion_vote": "106",
            "discussion_views": "8.1K",
            "discussion_link": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/discuss/141768/Detailed-explanation-O(NlogN)"
        },
        {
            "discussion_title": "O(NlogN) C++ code using priority queue with explanation",
            "discussion_vote": "14",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/discuss/142209/O(NlogN)-C%2B%2B-code-using-priority-queue-with-explanation"
        },
        {
            "discussion_title": "N log N explanation, no code",
            "discussion_vote": "11",
            "discussion_views": "611",
            "discussion_link": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/discuss/177269/N-log-N-explanation-no-code"
        },
        {
            "discussion_title": "75ms Java with Explanations",
            "discussion_vote": "3",
            "discussion_views": "247",
            "discussion_link": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/discuss/185085/75ms-Java-with-Explanations"
        },
        {
            "discussion_title": "Detailed Plain English Explanation With Very Simple Readable Code ",
            "discussion_vote": "3",
            "discussion_views": "827",
            "discussion_link": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/discuss/171679/Detailed-Plain-English-Explanation-With-Very-Simple-Readable-Code"
        }
    ],
    "858": [
        {
            "discussion_title": "Java short solution with a sample drawing",
            "discussion_vote": "48",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/mirror-reflection/discuss/141765/Java-short-solution-with-a-sample-drawing"
        },
        {
            "discussion_title": "[C++/Java/Python] 1-line without using any package or \u2716\ufe0f\u2797%",
            "discussion_vote": "27",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/mirror-reflection/discuss/141773/C%2B%2BJavaPython-1-line-without-using-any-package-or"
        },
        {
            "discussion_title": "\u4e00\u770b\u5c31\u61c2",
            "discussion_vote": "25",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/mirror-reflection/discuss/142989/topic"
        },
        {
            "discussion_title": "The Most Straight Forward Solution.Pure Math.Only 13ms",
            "discussion_vote": "21",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/mirror-reflection/discuss/141790/The-Most-Straight-Forward-Solution.Pure-Math.Only-13ms"
        },
        {
            "discussion_title": "Java solution with an easy-to-understand explanation",
            "discussion_vote": "13",
            "discussion_views": "571",
            "discussion_link": "https://leetcode.com/problems/mirror-reflection/discuss/146336/Java-solution-with-an-easy-to-understand-explanation"
        }
    ],
    "859": [
        {
            "discussion_title": "Easy Understood",
            "discussion_vote": "55",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/buddy-strings/discuss/141780/Easy-Understood"
        },
        {
            "discussion_title": "Java O(1) space, O(n) time",
            "discussion_vote": "10",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/buddy-strings/discuss/141794/Java-O(1)-space-O(n)-time"
        },
        {
            "discussion_title": "Clear C++ Solution",
            "discussion_vote": "7",
            "discussion_views": "571",
            "discussion_link": "https://leetcode.com/problems/buddy-strings/discuss/142647/Clear-C%2B%2B-Solution"
        },
        {
            "discussion_title": "Very simple Python solution with detailed explanation [O(n) time, O(1) space with 40 ms runtime]",
            "discussion_vote": "5",
            "discussion_views": "638",
            "discussion_link": "https://leetcode.com/problems/buddy-strings/discuss/141935/Very-simple-Python-solution-with-detailed-explanation-O(n)-time-O(1)-space-with-40-ms-runtime"
        },
        {
            "discussion_title": "Javascript straightforward",
            "discussion_vote": "5",
            "discussion_views": "211",
            "discussion_link": "https://leetcode.com/problems/buddy-strings/discuss/141838/Javascript-straightforward"
        }
    ],
    "860": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "35",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/lemonade-change/discuss/143719/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "Python simple & readable",
            "discussion_vote": "9",
            "discussion_views": "372",
            "discussion_link": "https://leetcode.com/problems/lemonade-change/discuss/143750/Python-simple-and-readable"
        },
        {
            "discussion_title": "java easy undersand",
            "discussion_vote": "4",
            "discussion_views": "701",
            "discussion_link": "https://leetcode.com/problems/lemonade-change/discuss/143734/java-easy-undersand"
        },
        {
            "discussion_title": "Easy to understand java solution",
            "discussion_vote": "1",
            "discussion_views": "188",
            "discussion_link": "https://leetcode.com/problems/lemonade-change/discuss/148017/Easy-to-understand-java-solution"
        },
        {
            "discussion_title": "7ms Java solution with readable code and explanation",
            "discussion_vote": "1",
            "discussion_views": "175",
            "discussion_link": "https://leetcode.com/problems/lemonade-change/discuss/144224/7ms-Java-solution-with-readable-code-and-explanation"
        }
    ],
    "861": [
        {
            "discussion_title": "[C++/Java/Python] Easy and Concise",
            "discussion_vote": "57",
            "discussion_views": "3.7K",
            "discussion_link": "https://leetcode.com/problems/score-after-flipping-matrix/discuss/143722/C%2B%2BJavaPython-Easy-and-Concise"
        },
        {
            "discussion_title": "[C++,Java] From Intuition, Un-optimized code to Optimized Code with Detailed Explanation ",
            "discussion_vote": "30",
            "discussion_views": "931",
            "discussion_link": "https://leetcode.com/problems/score-after-flipping-matrix/discuss/143812/C%2B%2BJava-From-Intuition-Un-optimized-code-to-Optimized-Code-with-Detailed-Explanation"
        },
        {
            "discussion_title": "Java, two steps, O(MN)",
            "discussion_vote": "14",
            "discussion_views": "831",
            "discussion_link": "https://leetcode.com/problems/score-after-flipping-matrix/discuss/143783/Java-two-steps-O(MN)"
        },
        {
            "discussion_title": "Python O(N*M) greedy solution",
            "discussion_vote": "5",
            "discussion_views": "438",
            "discussion_link": "https://leetcode.com/problems/score-after-flipping-matrix/discuss/143724/Python-O(N*M)-greedy-solution"
        },
        {
            "discussion_title": "c++ easy understand Greedy method with explanation",
            "discussion_vote": "4",
            "discussion_views": "227",
            "discussion_link": "https://leetcode.com/problems/score-after-flipping-matrix/discuss/144125/c%2B%2B-easy-understand-Greedy-method-with-explanation"
        }
    ],
    "862": [
        {
            "discussion_title": "[C++/Java/Python] O(N) Using Deque",
            "discussion_vote": "132",
            "discussion_views": "7.3K",
            "discussion_link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/discuss/143726/C%2B%2BJavaPython-O(N)-Using-Deque"
        },
        {
            "discussion_title": "Simple Java Solution Using TreeMap",
            "discussion_vote": "11",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/discuss/143746/Simple-Java-Solution-Using-TreeMap"
        },
        {
            "discussion_title": "Python Simple & Readable // AC Heapq Solution w/ Detailed Explanation ",
            "discussion_vote": "8",
            "discussion_views": "703",
            "discussion_link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/discuss/143850/Python-Simple-and-Readable-AC-Heapq-Solution-w-Detailed-Explanation"
        },
        {
            "discussion_title": "Detailed intuition behind Deque solution",
            "discussion_vote": "6",
            "discussion_views": "135",
            "discussion_link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/discuss/189039/Detailed-intuition-behind-Deque-solution"
        },
        {
            "discussion_title": "A Java Deque Solution Time O(n) Space O(n)",
            "discussion_vote": "4",
            "discussion_views": "963",
            "discussion_link": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/discuss/143966/A-Java-Deque-Solution-Time-O(n)-Space-O(n)"
        }
    ],
    "863": [
        {
            "discussion_title": "JAVA Graph + BFS",
            "discussion_vote": "45",
            "discussion_views": "4.5K",
            "discussion_link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/discuss/143752/JAVA-Graph-%2B-BFS"
        },
        {
            "discussion_title": "Python DFS and BFS",
            "discussion_vote": "31",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/discuss/143729/Python-DFS-and-BFS"
        },
        {
            "discussion_title": "very easy to understand c++ solution.",
            "discussion_vote": "28",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/discuss/143775/very-easy-to-understand-c%2B%2B-solution."
        },
        {
            "discussion_title": "1ms beat 100% simple Java dfs using hashmap with explanation",
            "discussion_vote": "18",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/discuss/143798/1ms-beat-100-simple-Java-dfs-using-hashmap-with-explanation"
        },
        {
            "discussion_title": "Simple Solution without any extra data structure",
            "discussion_vote": "7",
            "discussion_views": "380",
            "discussion_link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/discuss/143778/Simple-Solution-without-any-extra-data-structure"
        }
    ],
    "864": [
        {
            "discussion_title": "Java BFS Solution",
            "discussion_vote": "32",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/shortest-path-to-get-all-keys/discuss/146878/Java-BFS-Solution"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 92 screencast",
            "discussion_vote": "14",
            "discussion_views": "859",
            "discussion_link": "https://leetcode.com/problems/shortest-path-to-get-all-keys/discuss/146823/LeetCode-Weekly-Contest-92-screencast"
        },
        {
            "discussion_title": "O(mn2^k) 500ms Python BFS Easy to Understand Solution",
            "discussion_vote": "11",
            "discussion_views": "685",
            "discussion_link": "https://leetcode.com/problems/shortest-path-to-get-all-keys/discuss/146856/O(mn2k)-500ms-Python-BFS-Easy-to-Understand-Solution"
        },
        {
            "discussion_title": "[C++] BFS with current key recorded visited map (12ms)",
            "discussion_vote": "8",
            "discussion_views": "831",
            "discussion_link": "https://leetcode.com/problems/shortest-path-to-get-all-keys/discuss/146941/C%2B%2B-BFS-with-current-key-recorded-visited-map-(12ms)"
        },
        {
            "discussion_title": "Python Heapq solution w/ memoization ",
            "discussion_vote": "4",
            "discussion_views": "239",
            "discussion_link": "https://leetcode.com/problems/shortest-path-to-get-all-keys/discuss/146990/Python-Heapq-solution-w-memoization"
        }
    ],
    "865": [
        {
            "discussion_title": "One pass",
            "discussion_vote": "45",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/discuss/146808/One-pass"
        },
        {
            "discussion_title": "Simple recursive Java Solution ",
            "discussion_vote": "23",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/discuss/146786/Simple-recursive-Java-Solution"
        },
        {
            "discussion_title": "Description of what the problem is asking is unclear",
            "discussion_vote": "19",
            "discussion_views": "335",
            "discussion_link": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/discuss/147393/Description-of-what-the-problem-is-asking-is-unclear"
        },
        {
            "discussion_title": "Short and concise C++ solution using DFS, 3~5 lines",
            "discussion_vote": "17",
            "discussion_views": "877",
            "discussion_link": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/discuss/146842/Short-and-concise-C%2B%2B-solution-using-DFS-3~5-lines"
        },
        {
            "discussion_title": "Unclear problem description.",
            "discussion_vote": "9",
            "discussion_views": "190",
            "discussion_link": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/discuss/156407/Unclear-problem-description."
        }
    ],
    "866": [
        {
            "discussion_title": "Search Palindrome with Even Digits",
            "discussion_vote": "53",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/prime-palindrome/discuss/146798/Search-Palindrome-with-Even-Digits"
        },
        {
            "discussion_title": "C++ O(1) 0ms",
            "discussion_vote": "18",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/prime-palindrome/discuss/146766/C%2B%2B-O(1)-0ms"
        },
        {
            "discussion_title": "Getting one over the system (O(1) solution in Java)",
            "discussion_vote": "12",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/prime-palindrome/discuss/146788/Getting-one-over-the-system-(O(1)-solution-in-Java)"
        },
        {
            "discussion_title": "Faster way to find Palindrome. Accepted C++ Solution.",
            "discussion_vote": "5",
            "discussion_views": "514",
            "discussion_link": "https://leetcode.com/problems/prime-palindrome/discuss/146930/Faster-way-to-find-Palindrome.-Accepted-C%2B%2B-Solution."
        },
        {
            "discussion_title": "Java solution 6ms",
            "discussion_vote": "4",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/prime-palindrome/discuss/146835/Java-solution-6ms"
        }
    ],
    "867": [
        {
            "discussion_title": "Python - 1 Liner",
            "discussion_vote": "30",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/transpose-matrix/discuss/146767/Python-1-Liner"
        },
        {
            "discussion_title": "Python self-explanatory 1 line solution",
            "discussion_vote": "14",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/transpose-matrix/discuss/146790/Python-self-explanatory-1-line-solution"
        },
        {
            "discussion_title": "[C++/Java/Python] Easy Understood",
            "discussion_vote": "7",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/transpose-matrix/discuss/146797/C%2B%2BJavaPython-Easy-Understood"
        },
        {
            "discussion_title": "Simple JAVA Solution",
            "discussion_vote": "3",
            "discussion_views": "595",
            "discussion_link": "https://leetcode.com/problems/transpose-matrix/discuss/158312/Simple-JAVA-Solution"
        },
        {
            "discussion_title": "Java Solution. ",
            "discussion_vote": "2",
            "discussion_views": "134",
            "discussion_link": "https://leetcode.com/problems/transpose-matrix/discuss/185864/Java-Solution."
        }
    ],
    "868": [
        {
            "discussion_title": "[C++/Java/Python] Dividing by 2",
            "discussion_vote": "27",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/binary-gap/discuss/149835/C%2B%2BJavaPython-Dividing-by-2"
        },
        {
            "discussion_title": "Who can tell me, what does \"distance\" means?",
            "discussion_vote": "11",
            "discussion_views": "719",
            "discussion_link": "https://leetcode.com/problems/binary-gap/discuss/150082/Who-can-tell-me-what-does-%22distance%22-means"
        },
        {
            "discussion_title": "Simple Java (10 ms)",
            "discussion_vote": "9",
            "discussion_views": "562",
            "discussion_link": "https://leetcode.com/problems/binary-gap/discuss/149945/Simple-Java-(10-ms)"
        },
        {
            "discussion_title": "python 1-line solution",
            "discussion_vote": "5",
            "discussion_views": "401",
            "discussion_link": "https://leetcode.com/problems/binary-gap/discuss/151143/python-1-line-solution"
        },
        {
            "discussion_title": "Python simple solution",
            "discussion_vote": "4",
            "discussion_views": "119",
            "discussion_link": "https://leetcode.com/problems/binary-gap/discuss/149834/Python-simple-solution"
        }
    ],
    "869": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "36",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/reordered-power-of-2/discuss/149843/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "JAVA Naive Backtracking 15 lines",
            "discussion_vote": "7",
            "discussion_views": "518",
            "discussion_link": "https://leetcode.com/problems/reordered-power-of-2/discuss/149825/JAVA-Naive-Backtracking-15-lines"
        },
        {
            "discussion_title": "Possibly fastest C++ solution using Multiset, 0ms runtime.",
            "discussion_vote": "4",
            "discussion_views": "270",
            "discussion_link": "https://leetcode.com/problems/reordered-power-of-2/discuss/150340/Possibly-fastest-C%2B%2B-solution-using-Multiset-0ms-runtime."
        },
        {
            "discussion_title": "One line python beats 70%",
            "discussion_vote": "3",
            "discussion_views": "90",
            "discussion_link": "https://leetcode.com/problems/reordered-power-of-2/discuss/172840/One-line-python-beats-70"
        },
        {
            "discussion_title": "Simple Java Solution Based on String Sorting",
            "discussion_vote": "3",
            "discussion_views": "162",
            "discussion_link": "https://leetcode.com/problems/reordered-power-of-2/discuss/151949/Simple-Java-Solution-Based-on-String-Sorting"
        }
    ],
    "870": [
        {
            "discussion_title": "JAVA Greedy 6 lines with Explanation",
            "discussion_vote": "41",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/advantage-shuffle/discuss/149822/JAVA-Greedy-6-lines-with-Explanation"
        },
        {
            "discussion_title": "Simple Java Solution with the idea of \u7530\u5fcc\u8d5b\u9a6c",
            "discussion_vote": "21",
            "discussion_views": "858",
            "discussion_link": "https://leetcode.com/problems/advantage-shuffle/discuss/154417/Simple-Java-Solution-with-the-idea-of"
        },
        {
            "discussion_title": "C++ 6 lines greedy, O(n log n)",
            "discussion_vote": "15",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/advantage-shuffle/discuss/149831/C%2B%2B-6-lines-greedy-O(n-log-n)"
        },
        {
            "discussion_title": "[Python] Greedy Solution Using Sort",
            "discussion_vote": "13",
            "discussion_views": "914",
            "discussion_link": "https://leetcode.com/problems/advantage-shuffle/discuss/149842/Python-Greedy-Solution-Using-Sort"
        },
        {
            "discussion_title": "[C++/Java] Greedy Solution Using Map",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/advantage-shuffle/discuss/149840/C%2B%2BJava-Greedy-Solution-Using-Map"
        }
    ],
    "871": [
        {
            "discussion_title": "DP O(N^2) and Priority Queue O(NlogN)",
            "discussion_vote": "39",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-refueling-stops/discuss/149839/DP-O(N2)-and-Priority-Queue-O(NlogN)"
        },
        {
            "discussion_title": "Simple Java Solution Using PriorityQueue O(nlogn)",
            "discussion_vote": "21",
            "discussion_views": "946",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-refueling-stops/discuss/149858/Simple-Java-Solution-Using-PriorityQueue-O(nlogn)"
        },
        {
            "discussion_title": "C++ DP solution Space complexity from O(n^2) to O(n).",
            "discussion_vote": "4",
            "discussion_views": "250",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-refueling-stops/discuss/151850/C%2B%2B-DP-solution-Space-complexity-from-O(n2)-to-O(n)."
        },
        {
            "discussion_title": "python O(NlogN) ",
            "discussion_vote": "4",
            "discussion_views": "224",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-refueling-stops/discuss/149941/python-O(NlogN)"
        },
        {
            "discussion_title": "O(n) Simple and Concise C++ solution using priority_queue, need no comment",
            "discussion_vote": "4",
            "discussion_views": "579",
            "discussion_link": "https://leetcode.com/problems/minimum-number-of-refueling-stops/discuss/149877/O(n)-Simple-and-Concise-C%2B%2B-solution-using-priority_queue-need-no-comment"
        }
    ],
    "872": [
        {
            "discussion_title": "[C++/Java/Python] O(logN) Space",
            "discussion_vote": "58",
            "discussion_views": "4.4K",
            "discussion_link": "https://leetcode.com/problems/leaf-similar-trees/discuss/152329/C%2B%2BJavaPython-O(logN)-Space"
        },
        {
            "discussion_title": "4 line Python Solution",
            "discussion_vote": "14",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/leaf-similar-trees/discuss/152873/4-line-Python-Solution"
        },
        {
            "discussion_title": "Simple 6 lines Java, StringBuilder + traverse with explanation",
            "discussion_vote": "9",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/leaf-similar-trees/discuss/152358/Simple-6-lines-Java-StringBuilder-%2B-traverse-with-explanation"
        },
        {
            "discussion_title": "C++ super easy 0ms short solution, beats 100%!",
            "discussion_vote": "4",
            "discussion_views": "575",
            "discussion_link": "https://leetcode.com/problems/leaf-similar-trees/discuss/153123/C%2B%2B-super-easy-0ms-short-solution-beats-100!"
        },
        {
            "discussion_title": "C++ solution based on hashing",
            "discussion_vote": "2",
            "discussion_views": "106",
            "discussion_link": "https://leetcode.com/problems/leaf-similar-trees/discuss/172794/C%2B%2B-solution-based-on-hashing"
        }
    ],
    "873": [
        {
            "discussion_title": "[C++/Java/Python] Check Pair",
            "discussion_vote": "45",
            "discussion_views": "3.3K",
            "discussion_link": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/discuss/152343/C%2B%2BJavaPython-Check-Pair"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 94 screencast",
            "discussion_vote": "20",
            "discussion_views": "916",
            "discussion_link": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/discuss/152373/LeetCode-Weekly-Contest-94-screencast"
        },
        {
            "discussion_title": "Java clean DP O(n^2) time O(n^2) space",
            "discussion_vote": "19",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/discuss/152332/Java-clean-DP-O(n2)-time-O(n2)-space"
        },
        {
            "discussion_title": "C++ DP solution",
            "discussion_vote": "10",
            "discussion_views": "485",
            "discussion_link": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/discuss/152537/C%2B%2B-DP-solution"
        },
        {
            "discussion_title": "Java HashMap Straightforward",
            "discussion_vote": "6",
            "discussion_views": "447",
            "discussion_link": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/discuss/152334/Java-HashMap-Straightforward"
        }
    ],
    "874": [
        {
            "discussion_title": "Maximum?! This is crazy!",
            "discussion_vote": "38",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/walking-robot-simulation/discuss/152322/Maximum!-This-is-crazy!"
        },
        {
            "discussion_title": "Logical Thinking with Clear Code",
            "discussion_vote": "13",
            "discussion_views": "485",
            "discussion_link": "https://leetcode.com/problems/walking-robot-simulation/discuss/155682/Logical-Thinking-with-Clear-Code"
        },
        {
            "discussion_title": "Python short & straightforward solution w/ explanation & statement is wrong in the question !!!",
            "discussion_vote": "5",
            "discussion_views": "649",
            "discussion_link": "https://leetcode.com/problems/walking-robot-simulation/discuss/152364/Python-short-and-straightforward-solution-w-explanation-and-statement-is-wrong-in-the-question-!!!"
        },
        {
            "discussion_title": "Any 1160(x) 1954(o)?",
            "discussion_vote": "5",
            "discussion_views": "422",
            "discussion_link": "https://leetcode.com/problems/walking-robot-simulation/discuss/152340/Any-1160(x)-1954(o)"
        },
        {
            "discussion_title": "Obstacle at origin",
            "discussion_vote": "3",
            "discussion_views": "100",
            "discussion_link": "https://leetcode.com/problems/walking-robot-simulation/discuss/166267/Obstacle-at-origin"
        }
    ],
    "875": [
        {
            "discussion_title": "Logical Thinking with Java Code ",
            "discussion_vote": "31",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/koko-eating-bananas/discuss/152506/Logical-Thinking-with-Java-Code"
        },
        {
            "discussion_title": "[C++/Java/Python] Binary Search",
            "discussion_vote": "15",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/koko-eating-bananas/discuss/152324/C%2B%2BJavaPython-Binary-Search"
        },
        {
            "discussion_title": "JAVA Concise Binary Search 10 lines with Explanation",
            "discussion_vote": "7",
            "discussion_views": "668",
            "discussion_link": "https://leetcode.com/problems/koko-eating-bananas/discuss/152308/JAVA-Concise-Binary-Search-10-lines-with-Explanation"
        },
        {
            "discussion_title": "Binary search with optimized runtime",
            "discussion_vote": "4",
            "discussion_views": "876",
            "discussion_link": "https://leetcode.com/problems/koko-eating-bananas/discuss/152338/Binary-search-with-optimized-runtime"
        },
        {
            "discussion_title": "python solution with Chinese explanation",
            "discussion_vote": "3",
            "discussion_views": "253",
            "discussion_link": "https://leetcode.com/problems/koko-eating-bananas/discuss/152808/python-solution-with-Chinese-explanation"
        }
    ],
    "876": [
        {
            "discussion_title": "[C++/Java/Python] Slow and Fast Pointers",
            "discussion_vote": "33",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/middle-of-the-linked-list/discuss/154619/C%2B%2BJavaPython-Slow-and-Fast-Pointers"
        },
        {
            "discussion_title": "Remember this pattern for problems that require middle finding in a Linked List.",
            "discussion_vote": "17",
            "discussion_views": "727",
            "discussion_link": "https://leetcode.com/problems/middle-of-the-linked-list/discuss/154763/Remember-this-pattern-for-problems-that-require-middle-finding-in-a-Linked-List."
        },
        {
            "discussion_title": "Python two pointer, extremely simple, with explaination",
            "discussion_vote": "11",
            "discussion_views": "752",
            "discussion_link": "https://leetcode.com/problems/middle-of-the-linked-list/discuss/154696/Python-two-pointer-extremely-simple-with-explaination"
        },
        {
            "discussion_title": "Java O(n) time & O(1) space solution without using fast/slow pointer",
            "discussion_vote": "3",
            "discussion_views": "315",
            "discussion_link": "https://leetcode.com/problems/middle-of-the-linked-list/discuss/155148/Java-O(n)-time-and-O(1)-space-solution-without-using-fastslow-pointer"
        },
        {
            "discussion_title": "[Java] 5 Liner with explanations",
            "discussion_vote": "3",
            "discussion_views": "415",
            "discussion_link": "https://leetcode.com/problems/middle-of-the-linked-list/discuss/154635/Java-5-Liner-with-explanations"
        }
    ],
    "877": [
        {
            "discussion_title": "[C++/Java/Python] DP or Just return true",
            "discussion_vote": "119",
            "discussion_views": "7.0K",
            "discussion_link": "https://leetcode.com/problems/stone-game/discuss/154610/C%2B%2BJavaPython-DP-or-Just-return-true"
        },
        {
            "discussion_title": "[Java] This is minimax + dp (fully detailed explanation + generalization + easy understand code)",
            "discussion_vote": "15",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/stone-game/discuss/154660/Java-This-is-minimax-%2B-dp-(fully-detailed-explanation-%2B-generalization-%2B-easy-understand-code)"
        },
        {
            "discussion_title": "Alex won't lose",
            "discussion_vote": "15",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/stone-game/discuss/154607/Alex-won't-lose"
        },
        {
            "discussion_title": "python solution using memorization with Chinese explanation",
            "discussion_vote": "7",
            "discussion_views": "581",
            "discussion_link": "https://leetcode.com/problems/stone-game/discuss/154647/python-solution-using-memorization-with-Chinese-explanation"
        },
        {
            "discussion_title": "Alex can take all piles with odd (even) indices, thus he always wins",
            "discussion_vote": "6",
            "discussion_views": "496",
            "discussion_link": "https://leetcode.com/problems/stone-game/discuss/154615/Alex-can-take-all-piles-with-odd-(even)-indices-thus-he-always-wins"
        }
    ],
    "878": [
        {
            "discussion_title": "[C++/Java/Python] Binary Search",
            "discussion_vote": "34",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/nth-magical-number/discuss/154613/C%2B%2BJavaPython-Binary-Search"
        },
        {
            "discussion_title": "o(1) Mathematical Solution without binary or brute force search",
            "discussion_vote": "7",
            "discussion_views": "752",
            "discussion_link": "https://leetcode.com/problems/nth-magical-number/discuss/154965/o(1)-Mathematical-Solution-without-binary-or-brute-force-search"
        },
        {
            "discussion_title": "Python using gcd and lcm, no search needed",
            "discussion_vote": "5",
            "discussion_views": "439",
            "discussion_link": "https://leetcode.com/problems/nth-magical-number/discuss/154687/Python-using-gcd-and-lcm-no-search-needed"
        },
        {
            "discussion_title": "Python leverage gcd and lcm to search",
            "discussion_vote": "3",
            "discussion_views": "236",
            "discussion_link": "https://leetcode.com/problems/nth-magical-number/discuss/154650/Python-leverage-gcd-and-lcm-to-search"
        },
        {
            "discussion_title": "Python simple & readable binary search solution",
            "discussion_vote": "1",
            "discussion_views": "84",
            "discussion_link": "https://leetcode.com/problems/nth-magical-number/discuss/158818/Python-simple-and-readable-binary-search-solution"
        }
    ],
    "879": [
        {
            "discussion_title": "[C++/Java/Python] DP",
            "discussion_vote": "41",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/profitable-schemes/discuss/154617/C%2B%2BJavaPython-DP"
        },
        {
            "discussion_title": "Java original 3d to 2d DP solution",
            "discussion_vote": "16",
            "discussion_views": "564",
            "discussion_link": "https://leetcode.com/problems/profitable-schemes/discuss/157099/Java-original-3d-to-2d-DP-solution"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 95 screencast",
            "discussion_vote": "13",
            "discussion_views": "910",
            "discussion_link": "https://leetcode.com/problems/profitable-schemes/discuss/154616/LeetCode-Weekly-Contest-95-screencast"
        },
        {
            "discussion_title": "C++ O(PGn) top-down DP solution",
            "discussion_vote": "9",
            "discussion_views": "852",
            "discussion_link": "https://leetcode.com/problems/profitable-schemes/discuss/154636/C%2B%2B-O(PGn)-top-down-DP-solution"
        },
        {
            "discussion_title": "Simple DP O(PGN)",
            "discussion_vote": "5",
            "discussion_views": "661",
            "discussion_link": "https://leetcode.com/problems/profitable-schemes/discuss/154653/Simple-DP-O(PGN)"
        }
    ],
    "880": [
        {
            "discussion_title": "[C++/Python] O(N) Time O(1) Space",
            "discussion_vote": "40",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/decoded-string-at-index/discuss/156747/C%2B%2BPython-O(N)-Time-O(1)-Space"
        },
        {
            "discussion_title": "Easy to understand Java Solution",
            "discussion_vote": "14",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/decoded-string-at-index/discuss/156720/Easy-to-understand-Java-Solution"
        },
        {
            "discussion_title": "C++ simple recursion",
            "discussion_vote": "6",
            "discussion_views": "715",
            "discussion_link": "https://leetcode.com/problems/decoded-string-at-index/discuss/156734/C%2B%2B-simple-recursion"
        },
        {
            "discussion_title": "Logical Thinking with Clear Code",
            "discussion_vote": "5",
            "discussion_views": "258",
            "discussion_link": "https://leetcode.com/problems/decoded-string-at-index/discuss/157390/Logical-Thinking-with-Clear-Code"
        },
        {
            "discussion_title": "15 lines clear code",
            "discussion_vote": "5",
            "discussion_views": "410",
            "discussion_link": "https://leetcode.com/problems/decoded-string-at-index/discuss/157156/15-lines-clear-code"
        }
    ],
    "881": [
        {
            "discussion_title": "6 lines [Java] O(nlogn) code, sorting + greedy, with greedy algorithm proof. ",
            "discussion_vote": "17",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/boats-to-save-people/discuss/156855/6-lines-Java-O(nlogn)-code-sorting-%2B-greedy-with-greedy-algorithm-proof."
        },
        {
            "discussion_title": "[C++/Java/Python] Two Pointers",
            "discussion_vote": "12",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/boats-to-save-people/discuss/156740/C%2B%2BJavaPython-Two-Pointers"
        },
        {
            "discussion_title": "Python short 2 pointer solution & some thoughts",
            "discussion_vote": "6",
            "discussion_views": "445",
            "discussion_link": "https://leetcode.com/problems/boats-to-save-people/discuss/156748/Python-short-2-pointer-solution-and-some-thoughts"
        },
        {
            "discussion_title": "[Java] O(N(people)) + O(limit) solution",
            "discussion_vote": "3",
            "discussion_views": "150",
            "discussion_link": "https://leetcode.com/problems/boats-to-save-people/discuss/166068/Java-O(N(people))-%2B-O(limit)-solution"
        },
        {
            "discussion_title": "What if each boat carries at most K people (instead of 2 people) at the same time",
            "discussion_vote": "3",
            "discussion_views": "135",
            "discussion_link": "https://leetcode.com/problems/boats-to-save-people/discuss/157289/What-if-each-boat-carries-at-most-K-people-(instead-of-2-people)-at-the-same-time"
        }
    ],
    "882": [
        {
            "discussion_title": "Java Dijkstra Solution",
            "discussion_vote": "23",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/discuss/156777/Java-Dijkstra-Solution"
        },
        {
            "discussion_title": "[C++/Java/Python] Dijkstra + Priority Queue",
            "discussion_vote": "15",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/discuss/156739/C%2B%2BJavaPython-Dijkstra-%2B-Priority-Queue"
        },
        {
            "discussion_title": "god, the description of this problem just confuses me!!",
            "discussion_vote": "8",
            "discussion_views": "422",
            "discussion_link": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/discuss/156867/god-the-description-of-this-problem-just-confuses-me!!"
        },
        {
            "discussion_title": "Logical Thinking with Clear Code",
            "discussion_vote": "6",
            "discussion_views": "156",
            "discussion_link": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/discuss/157252/Logical-Thinking-with-Clear-Code"
        },
        {
            "discussion_title": "Indecipherable description",
            "discussion_vote": "5",
            "discussion_views": "156",
            "discussion_link": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/discuss/157093/Indecipherable-description"
        }
    ],
    "883": [
        {
            "discussion_title": "Please change the description of the problem",
            "discussion_vote": "49",
            "discussion_views": "693",
            "discussion_link": "https://leetcode.com/problems/projection-area-of-3d-shapes/discuss/160272/Please-change-the-description-of-the-problem"
        },
        {
            "discussion_title": "i don't even understand the description",
            "discussion_vote": "33",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/projection-area-of-3d-shapes/discuss/156833/i-don't-even-understand-the-description"
        },
        {
            "discussion_title": "11 line 1 pass [Java] code and  explanation of the problem, time O(N ^ 2) space O(1).",
            "discussion_vote": "16",
            "discussion_views": "759",
            "discussion_link": "https://leetcode.com/problems/projection-area-of-3d-shapes/discuss/156771/11-line-1-pass-Java-code-and-explanation-of-the-problem-time-O(N-2)-space-O(1)."
        },
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "10",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/projection-area-of-3d-shapes/discuss/156726/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "It drove me nuts. What the hell is it talking about...",
            "discussion_vote": "8",
            "discussion_views": "283",
            "discussion_link": "https://leetcode.com/problems/projection-area-of-3d-shapes/discuss/164508/It-drove-me-nuts.-What-the-hell-is-it-talking-about..."
        }
    ],
    "884": [
        {
            "discussion_title": "[C++/Java/Python] Easy Solution with Explanation",
            "discussion_vote": "32",
            "discussion_views": "2.5K",
            "discussion_link": "https://leetcode.com/problems/uncommon-words-from-two-sentences/discuss/158967/C%2B%2BJavaPython-Easy-Solution-with-Explanation"
        },
        {
            "discussion_title": "[Java] 3 liner and 5 liner, using HashMap and HashSets, respectively. ",
            "discussion_vote": "6",
            "discussion_views": "582",
            "discussion_link": "https://leetcode.com/problems/uncommon-words-from-two-sentences/discuss/158981/Java-3-liner-and-5-liner-using-HashMap-and-HashSets-respectively."
        },
        {
            "discussion_title": "C++ 100% with unordered_map",
            "discussion_vote": "2",
            "discussion_views": "107",
            "discussion_link": "https://leetcode.com/problems/uncommon-words-from-two-sentences/discuss/179088/C%2B%2B-100-with-unordered_map"
        },
        {
            "discussion_title": "two C++ solutions",
            "discussion_vote": "2",
            "discussion_views": "141",
            "discussion_link": "https://leetcode.com/problems/uncommon-words-from-two-sentences/discuss/170078/two-C%2B%2B-solutions"
        },
        {
            "discussion_title": "[C# solution] 2 lines of code, beat 100% submission running time",
            "discussion_vote": "2",
            "discussion_views": "56",
            "discussion_link": "https://leetcode.com/problems/uncommon-words-from-two-sentences/discuss/162311/C-solution-2-lines-of-code-beat-100-submission-running-time"
        }
    ],
    "885": [
        {
            "discussion_title": "[C++/Java/Python] 1,1,2,2,3,3 Steps",
            "discussion_vote": "35",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-iii/discuss/158970/C%2B%2BJavaPython-112233-Steps"
        },
        {
            "discussion_title": "Java 15 lines concise solution with comments",
            "discussion_vote": "16",
            "discussion_views": "754",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-iii/discuss/158977/Java-15-lines-concise-solution-with-comments"
        },
        {
            "discussion_title": "[Python] Sort All Coordinates",
            "discussion_vote": "10",
            "discussion_views": "256",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-iii/discuss/158971/Python-Sort-All-Coordinates"
        },
        {
            "discussion_title": "Simple East to Understand Java solution ",
            "discussion_vote": "6",
            "discussion_views": "145",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-iii/discuss/163370/Simple-East-to-Understand-Java-solution"
        },
        {
            "discussion_title": "JAVA Simulation 17 lines with line-by-line Explanation",
            "discussion_vote": "3",
            "discussion_views": "217",
            "discussion_link": "https://leetcode.com/problems/spiral-matrix-iii/discuss/158954/JAVA-Simulation-17-lines-with-line-by-line-Explanation"
        }
    ],
    "886": [
        {
            "discussion_title": "Java DFS solution",
            "discussion_vote": "15",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/possible-bipartition/discuss/158957/Java-DFS-solution"
        },
        {
            "discussion_title": "java graph ",
            "discussion_vote": "5",
            "discussion_views": "970",
            "discussion_link": "https://leetcode.com/problems/possible-bipartition/discuss/159085/java-graph"
        },
        {
            "discussion_title": "[Python] Decide if a graph is bipartite by checking the existence of odd cycles.",
            "discussion_vote": "3",
            "discussion_views": "276",
            "discussion_link": "https://leetcode.com/problems/possible-bipartition/discuss/160371/Python-Decide-if-a-graph-is-bipartite-by-checking-the-existence-of-odd-cycles."
        },
        {
            "discussion_title": "Python DFS with explanation",
            "discussion_vote": "2",
            "discussion_views": "694",
            "discussion_link": "https://leetcode.com/problems/possible-bipartition/discuss/159009/Python-DFS-with-explanation"
        },
        {
            "discussion_title": "Graph Bipartite problem + DFS",
            "discussion_vote": "1",
            "discussion_views": "737",
            "discussion_link": "https://leetcode.com/problems/possible-bipartition/discuss/158965/Graph-Bipartite-problem-%2B-DFS"
        }
    ],
    "887": [
        {
            "discussion_title": "[C++/Java/Python] 2D and 1D DP, O(KlogN)",
            "discussion_vote": "79",
            "discussion_views": "4.3K",
            "discussion_link": "https://leetcode.com/problems/super-egg-drop/discuss/158974/C%2B%2BJavaPython-2D-and-1D-DP-O(KlogN)"
        },
        {
            "discussion_title": "Python DP from kn^2 to knlogn to kn",
            "discussion_vote": "16",
            "discussion_views": "917",
            "discussion_link": "https://leetcode.com/problems/super-egg-drop/discuss/159079/Python-DP-from-kn2-to-knlogn-to-kn"
        },
        {
            "discussion_title": "Java DP solution from O(KN^2) to O(KNlogN)",
            "discussion_vote": "13",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/super-egg-drop/discuss/159055/Java-DP-solution-from-O(KN2)-to-O(KNlogN)"
        },
        {
            "discussion_title": "easy to understand",
            "discussion_vote": "12",
            "discussion_views": "940",
            "discussion_link": "https://leetcode.com/problems/super-egg-drop/discuss/159508/easy-to-understand"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 97 screencast",
            "discussion_vote": "8",
            "discussion_views": "840",
            "discussion_link": "https://leetcode.com/problems/super-egg-drop/discuss/158969/LeetCode-Weekly-Contest-97-screencast"
        }
    ],
    "888": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "22",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/fair-candy-swap/discuss/161269/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "Java 2 solutions clear explanation with illustration",
            "discussion_vote": "9",
            "discussion_views": "615",
            "discussion_link": "https://leetcode.com/problems/fair-candy-swap/discuss/161316/Java-2-solutions-clear-explanation-with-illustration"
        },
        {
            "discussion_title": "Python simple and quick solution without loop",
            "discussion_vote": "4",
            "discussion_views": "230",
            "discussion_link": "https://leetcode.com/problems/fair-candy-swap/discuss/175595/Python-simple-and-quick-solution-without-loop"
        },
        {
            "discussion_title": "Python solution using set (similar to TwoSum concept)",
            "discussion_vote": "4",
            "discussion_views": "397",
            "discussion_link": "https://leetcode.com/problems/fair-candy-swap/discuss/161309/Python-solution-using-set-(similar-to-TwoSum-concept)"
        },
        {
            "discussion_title": "Python simple solution",
            "discussion_vote": "3",
            "discussion_views": "342",
            "discussion_link": "https://leetcode.com/problems/fair-candy-swap/discuss/161305/Python-simple-solution"
        }
    ],
    "889": [
        {
            "discussion_title": "[C++/Java/Python] One Pass, Real O(N)",
            "discussion_vote": "63",
            "discussion_views": "4.1K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/discuss/161268/C%2B%2BJavaPython-One-Pass-Real-O(N)"
        },
        {
            "discussion_title": "Logical Thinking with Code Beats 99.89%",
            "discussion_vote": "38",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/discuss/161372/Logical-Thinking-with-Code-Beats-99.89"
        },
        {
            "discussion_title": "C++ O(N) recursive solution",
            "discussion_vote": "20",
            "discussion_views": "1.5K",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/discuss/161286/C%2B%2B-O(N)-recursive-solution"
        },
        {
            "discussion_title": "Clean Java O(N)",
            "discussion_vote": "9",
            "discussion_views": "836",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/discuss/161281/Clean-Java-O(N)"
        },
        {
            "discussion_title": "Easy Python Recursive Solution with Explanation",
            "discussion_vote": "7",
            "discussion_views": "558",
            "discussion_link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/discuss/161651/Easy-Python-Recursive-Solution-with-Explanation"
        }
    ],
    "890": [
        {
            "discussion_title": "[C++/Java/Python] Normalise Word",
            "discussion_vote": "40",
            "discussion_views": "3.0K",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-pattern/discuss/161288/C%2B%2BJavaPython-Normalise-Word"
        },
        {
            "discussion_title": "Short python isomorphism solution",
            "discussion_vote": "9",
            "discussion_views": "512",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-pattern/discuss/161775/Short-python-isomorphism-solution"
        },
        {
            "discussion_title": "JAVA 3ms Clear Code",
            "discussion_vote": "9",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-pattern/discuss/161266/JAVA-3ms-Clear-Code"
        },
        {
            "discussion_title": "Java two maps solution",
            "discussion_vote": "4",
            "discussion_views": "618",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-pattern/discuss/161376/Java-two-maps-solution"
        },
        {
            "discussion_title": "Python double-dictionary simplest logics beat 99%",
            "discussion_vote": "2",
            "discussion_views": "170",
            "discussion_link": "https://leetcode.com/problems/find-and-replace-pattern/discuss/176623/Python-double-dictionary-simplest-logics-beat-99"
        }
    ],
    "891": [
        {
            "discussion_title": "[C++/Java/1-line Python] Sort and One Pass",
            "discussion_vote": "85",
            "discussion_views": "3.6K",
            "discussion_link": "https://leetcode.com/problems/sum-of-subsequence-widths/discuss/161267/C%2B%2BJava1-line-Python-Sort-and-One-Pass"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 98 screencast",
            "discussion_vote": "9",
            "discussion_views": "540",
            "discussion_link": "https://leetcode.com/problems/sum-of-subsequence-widths/discuss/161327/LeetCode-Weekly-Contest-98-screencast"
        },
        {
            "discussion_title": "C++ solution, O(N log N) sort + O(N) calculate",
            "discussion_vote": "5",
            "discussion_views": "423",
            "discussion_link": "https://leetcode.com/problems/sum-of-subsequence-widths/discuss/161263/C%2B%2B-solution-O(N-log-N)-sort-%2B-O(N)-calculate"
        },
        {
            "discussion_title": "pythonic O(nlogn) sorting",
            "discussion_vote": "4",
            "discussion_views": "288",
            "discussion_link": "https://leetcode.com/problems/sum-of-subsequence-widths/discuss/161318/pythonic-O(nlogn)-sorting"
        },
        {
            "discussion_title": "O(nlogn) solution",
            "discussion_vote": "2",
            "discussion_views": "353",
            "discussion_link": "https://leetcode.com/problems/sum-of-subsequence-widths/discuss/162318/O(nlogn)-solution"
        }
    ],
    "892": [
        {
            "discussion_title": "[C++/Java/1-line Python] Minus Hidden Area",
            "discussion_vote": "44",
            "discussion_views": "1.6K",
            "discussion_link": "https://leetcode.com/problems/surface-area-of-3d-shapes/discuss/163414/C%2B%2BJava1-line-Python-Minus-Hidden-Area"
        },
        {
            "discussion_title": "Java simple solution",
            "discussion_vote": "5",
            "discussion_views": "484",
            "discussion_link": "https://leetcode.com/problems/surface-area-of-3d-shapes/discuss/163468/Java-simple-solution"
        },
        {
            "discussion_title": "Difficulty should be Medium not Easy",
            "discussion_vote": "3",
            "discussion_views": "133",
            "discussion_link": "https://leetcode.com/problems/surface-area-of-3d-shapes/discuss/163483/Difficulty-should-be-Medium-not-Easy"
        },
        {
            "discussion_title": "Java solution",
            "discussion_vote": "2",
            "discussion_views": "114",
            "discussion_link": "https://leetcode.com/problems/surface-area-of-3d-shapes/discuss/174132/Java-solution"
        },
        {
            "discussion_title": "Java Solution with Explanation",
            "discussion_vote": "2",
            "discussion_views": "165",
            "discussion_link": "https://leetcode.com/problems/surface-area-of-3d-shapes/discuss/163451/Java-Solution-with-Explanation"
        }
    ],
    "893": [
        {
            "discussion_title": "Java Concise Set Solution",
            "discussion_vote": "28",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/groups-of-special-equivalent-strings/discuss/163413/Java-Concise-Set-Solution"
        },
        {
            "discussion_title": "Misleading description during the contest",
            "discussion_vote": "18",
            "discussion_views": "963",
            "discussion_link": "https://leetcode.com/problems/groups-of-special-equivalent-strings/discuss/163421/Misleading-description-during-the-contest"
        },
        {
            "discussion_title": "Python 1-liner",
            "discussion_vote": "13",
            "discussion_views": "715",
            "discussion_link": "https://leetcode.com/problems/groups-of-special-equivalent-strings/discuss/163547/Python-1-liner"
        },
        {
            "discussion_title": "Python extremely simple solution",
            "discussion_vote": "9",
            "discussion_views": "499",
            "discussion_link": "https://leetcode.com/problems/groups-of-special-equivalent-strings/discuss/163471/Python-extremely-simple-solution"
        },
        {
            "discussion_title": "C++ Simple Solution",
            "discussion_vote": "8",
            "discussion_views": "800",
            "discussion_link": "https://leetcode.com/problems/groups-of-special-equivalent-strings/discuss/163412/C%2B%2B-Simple-Solution"
        }
    ],
    "894": [
        {
            "discussion_title": "Java Recursive Solution with Explanation",
            "discussion_vote": "35",
            "discussion_views": "3.2K",
            "discussion_link": "https://leetcode.com/problems/all-possible-full-binary-trees/discuss/163433/Java-Recursive-Solution-with-Explanation"
        },
        {
            "discussion_title": "C++  solution, easy to understand, and use chinese,:)",
            "discussion_vote": "13",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/all-possible-full-binary-trees/discuss/164134/C%2B%2B-solution-easy-to-understand-and-use-chinese%3A)"
        },
        {
            "discussion_title": "c++ recursive and iterative solutions. Doesn't create Frankenstein trees or leak memory",
            "discussion_vote": "12",
            "discussion_views": "644",
            "discussion_link": "https://leetcode.com/problems/all-possible-full-binary-trees/discuss/167402/c%2B%2B-recursive-and-iterative-solutions.-Doesn't-create-Frankenstein-trees-or-leak-memory"
        },
        {
            "discussion_title": "Java, recursive, intuitive",
            "discussion_vote": "8",
            "discussion_views": "756",
            "discussion_link": "https://leetcode.com/problems/all-possible-full-binary-trees/discuss/163467/Java-recursive-intuitive"
        },
        {
            "discussion_title": "Simple Python recursive solution.",
            "discussion_vote": "8",
            "discussion_views": "725",
            "discussion_link": "https://leetcode.com/problems/all-possible-full-binary-trees/discuss/163429/Simple-Python-recursive-solution."
        }
    ],
    "895": [
        {
            "discussion_title": "[C++/Java/Python] O(1)",
            "discussion_vote": "65",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/maximum-frequency-stack/discuss/163410/C%2B%2BJavaPython-O(1)"
        },
        {
            "discussion_title": "Python Simple PriorityQueue",
            "discussion_vote": "11",
            "discussion_views": "518",
            "discussion_link": "https://leetcode.com/problems/maximum-frequency-stack/discuss/163435/Python-Simple-PriorityQueue"
        },
        {
            "discussion_title": "JAVA O(1) solution easy understand using bucket sort",
            "discussion_vote": "10",
            "discussion_views": "471",
            "discussion_link": "https://leetcode.com/problems/maximum-frequency-stack/discuss/163453/JAVA-O(1)-solution-easy-understand-using-bucket-sort"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 99 screencast",
            "discussion_vote": "6",
            "discussion_views": "225",
            "discussion_link": "https://leetcode.com/problems/maximum-frequency-stack/discuss/163423/LeetCode-Weekly-Contest-99-screencast"
        },
        {
            "discussion_title": "Java Priority Queue easy understand",
            "discussion_vote": "5",
            "discussion_views": "453",
            "discussion_link": "https://leetcode.com/problems/maximum-frequency-stack/discuss/163416/Java-Priority-Queue-easy-understand"
        }
    ],
    "896": [
        {
            "discussion_title": "[C++/Java/Python] One Pass O(N)",
            "discussion_vote": "32",
            "discussion_views": "2.6K",
            "discussion_link": "https://leetcode.com/problems/monotonic-array/discuss/165889/C%2B%2BJavaPython-One-Pass-O(N)"
        },
        {
            "discussion_title": "Python Solution, Easy to Understand",
            "discussion_vote": "9",
            "discussion_views": "306",
            "discussion_link": "https://leetcode.com/problems/monotonic-array/discuss/165960/Python-Solution-Easy-to-Understand"
        },
        {
            "discussion_title": "JAVA Tricky Solution",
            "discussion_vote": "7",
            "discussion_views": "793",
            "discussion_link": "https://leetcode.com/problems/monotonic-array/discuss/165917/JAVA-Tricky-Solution"
        },
        {
            "discussion_title": "1-liner C++",
            "discussion_vote": "5",
            "discussion_views": "323",
            "discussion_link": "https://leetcode.com/problems/monotonic-array/discuss/165899/1-liner-C%2B%2B"
        },
        {
            "discussion_title": "[Java] 1 pass 7 lines straight forward code.",
            "discussion_vote": "4",
            "discussion_views": "404",
            "discussion_link": "https://leetcode.com/problems/monotonic-array/discuss/165866/Java-1-pass-7-lines-straight-forward-code."
        }
    ],
    "897": [
        {
            "discussion_title": "[C++/Java/Python] Self-Explained, 5-line, O(N)",
            "discussion_vote": "45",
            "discussion_views": "4.2K",
            "discussion_link": "https://leetcode.com/problems/increasing-order-search-tree/discuss/165885/C%2B%2BJavaPython-Self-Explained-5-line-O(N)"
        },
        {
            "discussion_title": "Can someone explain this test case?",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/increasing-order-search-tree/discuss/165876/Can-someone-explain-this-test-case"
        },
        {
            "discussion_title": "Java Simple InOrder Traversal- with Explanation",
            "discussion_vote": "11",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/increasing-order-search-tree/discuss/165870/Java-Simple-InOrder-Traversal-with-Explanation"
        },
        {
            "discussion_title": "6-line python O(n) solution.",
            "discussion_vote": "6",
            "discussion_views": "315",
            "discussion_link": "https://leetcode.com/problems/increasing-order-search-tree/discuss/165888/6-line-python-O(n)-solution."
        },
        {
            "discussion_title": "Inorder traversal",
            "discussion_vote": "5",
            "discussion_views": "602",
            "discussion_link": "https://leetcode.com/problems/increasing-order-search-tree/discuss/165941/Inorder-traversal"
        }
    ],
    "898": [
        {
            "discussion_title": "[C++/Java/Python] O(30N)",
            "discussion_vote": "52",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/bitwise-ors-of-subarrays/discuss/165881/C%2B%2BJavaPython-O(30N)"
        },
        {
            "discussion_title": "C++ O(kN) solution",
            "discussion_vote": "36",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/bitwise-ors-of-subarrays/discuss/165859/C%2B%2B-O(kN)-solution"
        },
        {
            "discussion_title": "[Python] Dynamic programming solution with indepth explanation of intuition.",
            "discussion_vote": "21",
            "discussion_views": "884",
            "discussion_link": "https://leetcode.com/problems/bitwise-ors-of-subarrays/discuss/165933/Python-Dynamic-programming-solution-with-indepth-explanation-of-intuition."
        },
        {
            "discussion_title": "C++ simplest, fastest ;) (224 ms)",
            "discussion_vote": "6",
            "discussion_views": "388",
            "discussion_link": "https://leetcode.com/problems/bitwise-ors-of-subarrays/discuss/166832/C%2B%2B-simplest-fastest-)-(224-ms)"
        },
        {
            "discussion_title": "The exactly same code can pass now, so sad",
            "discussion_vote": "2",
            "discussion_views": "327",
            "discussion_link": "https://leetcode.com/problems/bitwise-ors-of-subarrays/discuss/165937/The-exactly-same-code-can-pass-now-so-sad"
        }
    ],
    "899": [
        {
            "discussion_title": "[C++/Java/Python] Sort String or Rotate String",
            "discussion_vote": "33",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/orderly-queue/discuss/165878/C%2B%2BJavaPython-Sort-String-or-Rotate-String"
        },
        {
            "discussion_title": "K>1 is bubblesort",
            "discussion_vote": "17",
            "discussion_views": "611",
            "discussion_link": "https://leetcode.com/problems/orderly-queue/discuss/165862/Kgreater1-is-bubblesort"
        },
        {
            "discussion_title": "[C++] Solution Sort/Rotate",
            "discussion_vote": "10",
            "discussion_views": "338",
            "discussion_link": "https://leetcode.com/problems/orderly-queue/discuss/165907/C%2B%2B-Solution-SortRotate"
        },
        {
            "discussion_title": "When k > 1 you can reorder any way you like [Proof]",
            "discussion_vote": "7",
            "discussion_views": "273",
            "discussion_link": "https://leetcode.com/problems/orderly-queue/discuss/165915/When-k-greater-1-you-can-reorder-any-way-you-like-Proof"
        },
        {
            "discussion_title": "Java Simple Solution, 12 ms",
            "discussion_vote": "3",
            "discussion_views": "395",
            "discussion_link": "https://leetcode.com/problems/orderly-queue/discuss/165857/Java-Simple-Solution-12-ms"
        }
    ],
    "900": [
        {
            "discussion_title": "Java Straightforward Solution, O(n) time, O(1) space",
            "discussion_vote": "15",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/rle-iterator/discuss/168294/Java-Straightforward-Solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "[Java] straightforward code with comment -- O(n) time and O(1) space",
            "discussion_vote": "2",
            "discussion_views": "376",
            "discussion_link": "https://leetcode.com/problems/rle-iterator/discuss/168286/Java-straightforward-code-with-comment-O(n)-time-and-O(1)-space"
        },
        {
            "discussion_title": "Python simple solution beats 95% python codes - O(n)",
            "discussion_vote": "1",
            "discussion_views": "51",
            "discussion_link": "https://leetcode.com/problems/rle-iterator/discuss/191547/Python-simple-solution-beats-95-python-codes-O(n)"
        },
        {
            "discussion_title": "C interface error, RLEIterator* rLEIteratorCreate(int* A)  missing length for C.",
            "discussion_vote": "1",
            "discussion_views": "80",
            "discussion_link": "https://leetcode.com/problems/rle-iterator/discuss/169168/C-interface-error-RLEIterator*-rLEIteratorCreate(int*-A)-missing-length-for-C."
        },
        {
            "discussion_title": "Python3 beats 100%",
            "discussion_vote": "0",
            "discussion_views": "15",
            "discussion_link": "https://leetcode.com/problems/rle-iterator/discuss/195426/Python3-beats-100"
        }
    ],
    "901": [
        {
            "discussion_title": "[C++/Java/Python] O(1)",
            "discussion_vote": "33",
            "discussion_views": "3.1K",
            "discussion_link": "https://leetcode.com/problems/online-stock-span/discuss/168311/C%2B%2BJavaPython-O(1)"
        },
        {
            "discussion_title": "Simple C++ solution with stack O(n), with explanation",
            "discussion_vote": "5",
            "discussion_views": "328",
            "discussion_link": "https://leetcode.com/problems/online-stock-span/discuss/168366/Simple-C%2B%2B-solution-with-stack-O(n)-with-explanation"
        },
        {
            "discussion_title": "Short Java Solution",
            "discussion_vote": "4",
            "discussion_views": "415",
            "discussion_link": "https://leetcode.com/problems/online-stock-span/discuss/168308/Short-Java-Solution"
        },
        {
            "discussion_title": "Java short solution using list with explanation",
            "discussion_vote": "3",
            "discussion_views": "336",
            "discussion_link": "https://leetcode.com/problems/online-stock-span/discuss/168288/Java-short-solution-using-list-with-explanation"
        },
        {
            "discussion_title": "Simple Python solution with comment",
            "discussion_vote": "1",
            "discussion_views": "50",
            "discussion_link": "https://leetcode.com/problems/online-stock-span/discuss/168392/Simple-Python-solution-with-comment"
        }
    ],
    "902": [
        {
            "discussion_title": "Python O(logN)",
            "discussion_vote": "17",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/discuss/168279/Python-O(logN)"
        },
        {
            "discussion_title": "C++ O(logN) Clear code with explanation",
            "discussion_vote": "14",
            "discussion_views": "569",
            "discussion_link": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/discuss/168439/C%2B%2B-O(logN)-Clear-code-with-explanation"
        },
        {
            "discussion_title": "Java Solution with explanation",
            "discussion_vote": "8",
            "discussion_views": "501",
            "discussion_link": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/discuss/168313/Java-Solution-with-explanation"
        },
        {
            "discussion_title": "My straightforward self-explanatory Python solution",
            "discussion_vote": "5",
            "discussion_views": "97",
            "discussion_link": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/discuss/168440/My-straightforward-self-explanatory-Python-solution"
        },
        {
            "discussion_title": "Simple C++ Solution ( 0 ms, O(logN) ). With line by line explanation",
            "discussion_vote": "5",
            "discussion_views": "305",
            "discussion_link": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/discuss/168345/Simple-C%2B%2B-Solution-(-0-ms-O(logN)-).-With-line-by-line-explanation"
        }
    ],
    "903": [
        {
            "discussion_title": "[C++/Java/Python] DP Solution O(N^2) ",
            "discussion_vote": "58",
            "discussion_views": "2.7K",
            "discussion_link": "https://leetcode.com/problems/valid-permutations-for-di-sequence/discuss/168278/C%2B%2BJavaPython-DP-Solution-O(N2)"
        },
        {
            "discussion_title": "Share my O(N^3) => O(N^2) C++ DP solution. Including the thoughts of improvement.",
            "discussion_vote": "13",
            "discussion_views": "929",
            "discussion_link": "https://leetcode.com/problems/valid-permutations-for-di-sequence/discuss/168289/Share-my-O(N3)-greater-O(N2)-C%2B%2B-DP-solution.-Including-the-thoughts-of-improvement."
        },
        {
            "discussion_title": "Top-down with Memo -> Bottom-up DP -> N^3 DP -> N^2 DP -> O(N) space",
            "discussion_vote": "10",
            "discussion_views": "616",
            "discussion_link": "https://leetcode.com/problems/valid-permutations-for-di-sequence/discuss/168612/Top-down-with-Memo-greater-Bottom-up-DP-greater-N3-DP-greater-N2-DP-greater-O(N)-space"
        },
        {
            "discussion_title": "Python O(N^3) O(N) space DP solution with explanation",
            "discussion_vote": "3",
            "discussion_views": "67",
            "discussion_link": "https://leetcode.com/problems/valid-permutations-for-di-sequence/discuss/186571/Python-O(N3)-O(N)-space-DP-solution-with-explanation"
        },
        {
            "discussion_title": "[Visualization] Key to the DP solution: imagine cutting a piece of paper and separating the halves",
            "discussion_vote": "2",
            "discussion_views": "319",
            "discussion_link": "https://leetcode.com/problems/valid-permutations-for-di-sequence/discuss/169126/Visualization-Key-to-the-DP-solution%3A-imagine-cutting-a-piece-of-paper-and-separating-the-halves"
        }
    ],
    "904": [
        {
            "discussion_title": "Another poorly worded question",
            "discussion_vote": "68",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/fruit-into-baskets/discuss/170765/Another-poorly-worded-question"
        },
        {
            "discussion_title": "Problem: Longest Subarray With 2 Elements",
            "discussion_vote": "48",
            "discussion_views": "4.9K",
            "discussion_link": "https://leetcode.com/problems/fruit-into-baskets/discuss/170745/Problem%3A-Longest-Subarray-With-2-Elements"
        },
        {
            "discussion_title": "Sliding Window",
            "discussion_vote": "41",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/fruit-into-baskets/discuss/170740/Sliding-Window"
        },
        {
            "discussion_title": "what the fuck?what is meaning?I really cann't understand",
            "discussion_vote": "22",
            "discussion_views": "866",
            "discussion_link": "https://leetcode.com/problems/fruit-into-baskets/discuss/170733/what-the-fuckwhat-is-meaningI-really-cann't-understand"
        },
        {
            "discussion_title": "Java - Longest Subarray with atmost 2 Distinct elements",
            "discussion_vote": "12",
            "discussion_views": "728",
            "discussion_link": "https://leetcode.com/problems/fruit-into-baskets/discuss/170808/Java-Longest-Subarray-with-atmost-2-Distinct-elements"
        }
    ],
    "905": [
        {
            "discussion_title": "[C++/Java] In Place Swap",
            "discussion_vote": "16",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity/discuss/170734/C%2B%2BJava-In-Place-Swap"
        },
        {
            "discussion_title": "Very simple C++/Python/Java O(n) soln (Avoid in-place swapping as the input is passed as reference)",
            "discussion_vote": "12",
            "discussion_views": "918",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity/discuss/170760/Very-simple-C%2B%2BPythonJava-O(n)-soln-(Avoid-in-place-swapping-as-the-input-is-passed-as-reference)"
        },
        {
            "discussion_title": "My Simple Java Solution",
            "discussion_vote": "7",
            "discussion_views": "486",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity/discuss/172801/My-Simple-Java-Solution"
        },
        {
            "discussion_title": "Python 2 pointer in place swap, beats 99%",
            "discussion_vote": "7",
            "discussion_views": "842",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity/discuss/171606/Python-2-pointer-in-place-swap-beats-99"
        },
        {
            "discussion_title": "One line JavaScript. ",
            "discussion_vote": "4",
            "discussion_views": "177",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity/discuss/171388/One-line-JavaScript."
        }
    ],
    "906": [
        {
            "discussion_title": "Java building the next palindrome",
            "discussion_vote": "15",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/super-palindromes/discuss/170774/Java-building-the-next-palindrome"
        },
        {
            "discussion_title": "no more this type questions for contest!",
            "discussion_vote": "15",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/super-palindromes/discuss/170728/no-more-this-type-questions-for-contest!"
        },
        {
            "discussion_title": "Python super easy to understand, 10^5 complexity, no cheating",
            "discussion_vote": "10",
            "discussion_views": "851",
            "discussion_link": "https://leetcode.com/problems/super-palindromes/discuss/170742/Python-super-easy-to-understand-105-complexity-no-cheating"
        },
        {
            "discussion_title": "Python AC, bfs, detail explanation",
            "discussion_vote": "5",
            "discussion_views": "174",
            "discussion_link": "https://leetcode.com/problems/super-palindromes/discuss/171450/Python-AC-bfs-detail-explanation"
        },
        {
            "discussion_title": "[c++] straightforward backtracking solution",
            "discussion_vote": "4",
            "discussion_views": "213",
            "discussion_link": "https://leetcode.com/problems/super-palindromes/discuss/171467/c%2B%2B-straightforward-backtracking-solution"
        }
    ],
    "907": [
        {
            "discussion_title": "[C++/Java/Python] Stack Solution",
            "discussion_vote": "99",
            "discussion_views": "5.9K",
            "discussion_link": "https://leetcode.com/problems/sum-of-subarray-minimums/discuss/170750/C%2B%2BJavaPython-Stack-Solution"
        },
        {
            "discussion_title": "stack solution with very  detailed explanation step by step",
            "discussion_vote": "60",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/sum-of-subarray-minimums/discuss/178876/stack-solution-with-very-detailed-explanation-step-by-step"
        },
        {
            "discussion_title": "Python Simple Stack O(n) Solution - 10 lines ",
            "discussion_vote": "32",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/sum-of-subarray-minimums/discuss/170776/Python-Simple-Stack-O(n)-Solution-10-lines"
        },
        {
            "discussion_title": "Java O(n) Building Preprocessed Scope Array with Explanation",
            "discussion_vote": "18",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/sum-of-subarray-minimums/discuss/170727/Java-O(n)-Building-Preprocessed-Scope-Array-with-Explanation"
        },
        {
            "discussion_title": "One stack solution",
            "discussion_vote": "9",
            "discussion_views": "528",
            "discussion_link": "https://leetcode.com/problems/sum-of-subarray-minimums/discuss/170857/One-stack-solution"
        }
    ],
    "908": [
        {
            "discussion_title": "Very confusing question!",
            "discussion_vote": "14",
            "discussion_views": "486",
            "discussion_link": "https://leetcode.com/problems/smallest-range-i/discuss/178344/Very-confusing-question!"
        },
        {
            "discussion_title": "[C++/Java/Python] Check Max - Min",
            "discussion_vote": "9",
            "discussion_views": "936",
            "discussion_link": "https://leetcode.com/problems/smallest-range-i/discuss/173367/C%2B%2BJavaPython-Check-Max-Min"
        },
        {
            "discussion_title": " [Java] Simple Single Pass Solution",
            "discussion_vote": "3",
            "discussion_views": "241",
            "discussion_link": "https://leetcode.com/problems/smallest-range-i/discuss/173399/Java-Simple-Single-Pass-Solution"
        },
        {
            "discussion_title": "C++ 1-liner",
            "discussion_vote": "2",
            "discussion_views": "232",
            "discussion_link": "https://leetcode.com/problems/smallest-range-i/discuss/173512/C%2B%2B-1-liner"
        },
        {
            "discussion_title": "Java easy to understand solution",
            "discussion_vote": "2",
            "discussion_views": "425",
            "discussion_link": "https://leetcode.com/problems/smallest-range-i/discuss/173406/Java-easy-to-understand-solution"
        }
    ],
    "909": [
        {
            "discussion_title": "Diagram and BFS",
            "discussion_vote": "26",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/snakes-and-ladders/discuss/173378/Diagram-and-BFS"
        },
        {
            "discussion_title": "Change to 1D array then BFS",
            "discussion_vote": "14",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/snakes-and-ladders/discuss/173403/Change-to-1D-array-then-BFS"
        },
        {
            "discussion_title": "Java concise solution easy to understand",
            "discussion_vote": "8",
            "discussion_views": "357",
            "discussion_link": "https://leetcode.com/problems/snakes-and-ladders/discuss/173682/Java-concise-solution-easy-to-understand"
        },
        {
            "discussion_title": "Dude... it is literally 1-6 steps, not an example of 1-n steps when n = 6",
            "discussion_vote": "5",
            "discussion_views": "562",
            "discussion_link": "https://leetcode.com/problems/snakes-and-ladders/discuss/173368/Dude...-it-is-literally-1-6-steps-not-an-example-of-1-n-steps-when-n-6"
        },
        {
            "discussion_title": "How does this input gives 2?",
            "discussion_vote": "2",
            "discussion_views": "65",
            "discussion_link": "https://leetcode.com/problems/snakes-and-ladders/discuss/179227/How-does-this-input-gives-2"
        }
    ],
    "910": [
        {
            "discussion_title": "[C++/Java/Python] Add 0 or 2 * K",
            "discussion_vote": "41",
            "discussion_views": "2.8K",
            "discussion_link": "https://leetcode.com/problems/smallest-range-ii/discuss/173377/C%2B%2BJavaPython-Add-0-or-2-*-K"
        },
        {
            "discussion_title": "simple C++ solution with explanation",
            "discussion_vote": "27",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/smallest-range-ii/discuss/173389/simple-C%2B%2B-solution-with-explanation"
        },
        {
            "discussion_title": "c++, O(n) time solution! Take the challenge! With very, very, detail description and comments",
            "discussion_vote": "13",
            "discussion_views": "839",
            "discussion_link": "https://leetcode.com/problems/smallest-range-ii/discuss/174928/c%2B%2B-O(n)-time-solution!-Take-the-challenge!-With-very-very-detail-description-and-comments"
        },
        {
            "discussion_title": "Java Solution with the Picture to explain it",
            "discussion_vote": "6",
            "discussion_views": "515",
            "discussion_link": "https://leetcode.com/problems/smallest-range-ii/discuss/173505/Java-Solution-with-the-Picture-to-explain-it"
        },
        {
            "discussion_title": "JAVA solution very easy to understand - [sliding window]",
            "discussion_vote": "3",
            "discussion_views": "507",
            "discussion_link": "https://leetcode.com/problems/smallest-range-ii/discuss/173471/JAVA-solution-very-easy-to-understand-sliding-window"
        }
    ],
    "911": [
        {
            "discussion_title": "[C++/Java/Python] Binary Search in Times",
            "discussion_vote": "24",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/online-election/discuss/173382/C%2B%2BJavaPython-Binary-Search-in-Times"
        },
        {
            "discussion_title": "Anyone else just find this question really confusing?",
            "discussion_vote": "21",
            "discussion_views": "222",
            "discussion_link": "https://leetcode.com/problems/online-election/discuss/180972/Anyone-else-just-find-this-question-really-confusing"
        },
        {
            "discussion_title": "[Java] two methods with comment- using TreeMap and binary search, respectively",
            "discussion_vote": "8",
            "discussion_views": "577",
            "discussion_link": "https://leetcode.com/problems/online-election/discuss/173387/Java-two-methods-with-comment-using-TreeMap-and-binary-search-respectively"
        },
        {
            "discussion_title": "Python readable short bisect solution",
            "discussion_vote": "5",
            "discussion_views": "175",
            "discussion_link": "https://leetcode.com/problems/online-election/discuss/173407/Python-readable-short-bisect-solution"
        },
        {
            "discussion_title": "[Java] TreeMap: O(NlogN) + O(logN)  and Binary Search: O(N) + O(logN)",
            "discussion_vote": "2",
            "discussion_views": "165",
            "discussion_link": "https://leetcode.com/problems/online-election/discuss/176378/Java-TreeMap%3A-O(NlogN)-%2B-O(logN)-and-Binary-Search%3A-O(N)-%2B-O(logN)"
        }
    ],
    "913": [
        {
            "discussion_title": "Most of the DFS solutions are WRONG, check this case",
            "discussion_vote": "18",
            "discussion_views": "2.2K",
            "discussion_link": "https://leetcode.com/problems/cat-and-mouse/discuss/176177/Most-of-the-DFS-solutions-are-WRONG-check-this-case"
        },
        {
            "discussion_title": "Perfect Wrong DFS/DP code explained in detail (Revised)",
            "discussion_vote": "8",
            "discussion_views": "752",
            "discussion_link": "https://leetcode.com/problems/cat-and-mouse/discuss/176268/Perfect-Wrong-DFSDP-code-explained-in-detail-(Revised)"
        },
        {
            "discussion_title": "5ms Java solution with brief comment ",
            "discussion_vote": "4",
            "discussion_views": "232",
            "discussion_link": "https://leetcode.com/problems/cat-and-mouse/discuss/181681/5ms-Java-solution-with-brief-comment"
        },
        {
            "discussion_title": "So confusing the last case, can't believe it!",
            "discussion_vote": "4",
            "discussion_views": "530",
            "discussion_link": "https://leetcode.com/problems/cat-and-mouse/discuss/176038/So-confusing-the-last-case-can't-believe-it!"
        },
        {
            "discussion_title": "share my thoughts and code,so confused by the last case",
            "discussion_vote": "3",
            "discussion_views": "423",
            "discussion_link": "https://leetcode.com/problems/cat-and-mouse/discuss/175959/share-my-thoughts-and-codeso-confused-by-the-last-case"
        }
    ],
    "914": [
        {
            "discussion_title": "[C++/Java/Python] Greatest Common Divisor",
            "discussion_vote": "34",
            "discussion_views": "2.3K",
            "discussion_link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/discuss/175845/C%2B%2BJavaPython-Greatest-Common-Divisor"
        },
        {
            "discussion_title": "c++ solutions using binary method for gcd and the power of stl. 3 lines if you use __gcd",
            "discussion_vote": "1",
            "discussion_views": "171",
            "discussion_link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/discuss/176744/c%2B%2B-solutions-using-binary-method-for-gcd-and-the-power-of-stl.-3-lines-if-you-use-__gcd"
        },
        {
            "discussion_title": "Need Updated Cases - Bad Code Passed [9/29/2018]",
            "discussion_vote": "1",
            "discussion_views": "78",
            "discussion_link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/discuss/175876/Need-Updated-Cases-Bad-Code-Passed-9292018"
        },
        {
            "discussion_title": "Map Plus GCD solution",
            "discussion_vote": "0",
            "discussion_views": "2",
            "discussion_link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/discuss/197903/Map-Plus-GCD-solution"
        },
        {
            "discussion_title": "Java GCD",
            "discussion_vote": "0",
            "discussion_views": "2",
            "discussion_link": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/discuss/197477/Java-GCD"
        }
    ],
    "915": [
        {
            "discussion_title": "Java, one pass, 7 lines",
            "discussion_vote": "27",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/discuss/175945/Java-one-pass-7-lines"
        },
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "7",
            "discussion_views": "997",
            "discussion_link": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/discuss/175849/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "Explained - Python simple O(N) time O(1) space",
            "discussion_vote": "6",
            "discussion_views": "222",
            "discussion_link": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/discuss/175904/Explained-Python-simple-O(N)-time-O(1)-space"
        },
        {
            "discussion_title": "JAVA EASIEST SIMPLEST",
            "discussion_vote": "6",
            "discussion_views": "335",
            "discussion_link": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/discuss/175842/JAVA-EASIEST-SIMPLEST"
        },
        {
            "discussion_title": "O(n) One Pass Solution",
            "discussion_vote": "4",
            "discussion_views": "136",
            "discussion_link": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/discuss/175907/O(n)-One-Pass-Solution"
        }
    ],
    "916": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "33",
            "discussion_views": "2.1K",
            "discussion_link": "https://leetcode.com/problems/word-subsets/discuss/175854/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "[Java] 14 line clean code - count the most frequent char of words in B",
            "discussion_vote": "5",
            "discussion_views": "521",
            "discussion_link": "https://leetcode.com/problems/word-subsets/discuss/175850/Java-14-line-clean-code-count-the-most-frequent-char-of-words-in-B"
        },
        {
            "discussion_title": "[16ms] Fastest Solution - Prime Number Subset Step in O(1) (Detailed Explanation)",
            "discussion_vote": "4",
            "discussion_views": "255",
            "discussion_link": "https://leetcode.com/problems/word-subsets/discuss/176066/16ms-Fastest-Solution-Prime-Number-Subset-Step-in-O(1)-(Detailed-Explanation)"
        },
        {
            "discussion_title": "My Python solution. Beats 98.4%.",
            "discussion_vote": "1",
            "discussion_views": "92",
            "discussion_link": "https://leetcode.com/problems/word-subsets/discuss/188451/My-Python-solution.-Beats-98.4."
        },
        {
            "discussion_title": "Cpp easy understand solution O(max(na,nb)*strLen)",
            "discussion_vote": "1",
            "discussion_views": "47",
            "discussion_link": "https://leetcode.com/problems/word-subsets/discuss/178069/Cpp-easy-understand-solution-O(max(nanb)*strLen)"
        }
    ],
    "917": [
        {
            "discussion_title": "[C++/Java/Python] Two Pointers",
            "discussion_vote": "9",
            "discussion_views": "961",
            "discussion_link": "https://leetcode.com/problems/reverse-only-letters/discuss/178419/C%2B%2BJavaPython-Two-Pointers"
        },
        {
            "discussion_title": "[Java] 5 line clean code - very simple logic",
            "discussion_vote": "5",
            "discussion_views": "277",
            "discussion_link": "https://leetcode.com/problems/reverse-only-letters/discuss/178563/Java-5-line-clean-code-very-simple-logic"
        },
        {
            "discussion_title": "Java Two Pointers",
            "discussion_vote": "3",
            "discussion_views": "260",
            "discussion_link": "https://leetcode.com/problems/reverse-only-letters/discuss/178470/Java-Two-Pointers"
        },
        {
            "discussion_title": "My 2-liner Python stack solution ",
            "discussion_vote": "2",
            "discussion_views": "173",
            "discussion_link": "https://leetcode.com/problems/reverse-only-letters/discuss/179013/My-2-liner-Python-stack-solution"
        },
        {
            "discussion_title": "Java 6ms simple solution",
            "discussion_vote": "1",
            "discussion_views": "35",
            "discussion_link": "https://leetcode.com/problems/reverse-only-letters/discuss/191180/Java-6ms-simple-solution"
        }
    ],
    "918": [
        {
            "discussion_title": "[C++/Java/Python] One Pass",
            "discussion_vote": "134",
            "discussion_views": "2.9K",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-circular-subarray/discuss/178422/C%2B%2BJavaPython-One-Pass"
        },
        {
            "discussion_title": "C++ single pass O(N) linear time O(1) constant space",
            "discussion_vote": "7",
            "discussion_views": "374",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-circular-subarray/discuss/178517/C%2B%2B-single-pass-O(N)-linear-time-O(1)-constant-space"
        },
        {
            "discussion_title": "C++ O(N) solution",
            "discussion_vote": "7",
            "discussion_views": "442",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-circular-subarray/discuss/178435/C%2B%2B-O(N)-solution"
        },
        {
            "discussion_title": "JAVA ONE PASS, O(n) with very detailed chinese explanation",
            "discussion_vote": "5",
            "discussion_views": "468",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-circular-subarray/discuss/178444/JAVA-ONE-PASS-O(n)-with-very-detailed-chinese-explanation"
        },
        {
            "discussion_title": "Short Java Solution!!!",
            "discussion_vote": "2",
            "discussion_views": "201",
            "discussion_link": "https://leetcode.com/problems/maximum-sum-circular-subarray/discuss/178497/Short-Java-Solution!!!"
        }
    ],
    "919": [
        {
            "discussion_title": "[C++/Java/Python] O(1) Insert",
            "discussion_vote": "30",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/complete-binary-tree-inserter/discuss/178424/C%2B%2BJavaPython-O(1)-Insert"
        },
        {
            "discussion_title": "[Java] BFS straightforward code, two methods, Initialization and insert time O(1), respectively.",
            "discussion_vote": "9",
            "discussion_views": "499",
            "discussion_link": "https://leetcode.com/problems/complete-binary-tree-inserter/discuss/178427/Java-BFS-straightforward-code-two-methods-Initialization-and-insert-time-O(1)-respectively."
        },
        {
            "discussion_title": "JavaScript ALWAYS get a runtime error even do nothing changes to template",
            "discussion_vote": "5",
            "discussion_views": "139",
            "discussion_link": "https://leetcode.com/problems/complete-binary-tree-inserter/discuss/178431/JavaScript-ALWAYS-get-a-runtime-error-even-do-nothing-changes-to-template"
        },
        {
            "discussion_title": "Java Solution: O(1) Insert VS. O(1) Pre-process Trade Off",
            "discussion_vote": "3",
            "discussion_views": "133",
            "discussion_link": "https://leetcode.com/problems/complete-binary-tree-inserter/discuss/178528/Java-Solution%3A-O(1)-Insert-VS.-O(1)-Pre-process-Trade-Off"
        },
        {
            "discussion_title": "c++ 12 ms using queue",
            "discussion_vote": "1",
            "discussion_views": "31",
            "discussion_link": "https://leetcode.com/problems/complete-binary-tree-inserter/discuss/192380/c%2B%2B-12-ms-using-queue"
        }
    ],
    "920": [
        {
            "discussion_title": "[C++/Java/Python] DP Solution",
            "discussion_vote": "32",
            "discussion_views": "2.4K",
            "discussion_link": "https://leetcode.com/problems/number-of-music-playlists/discuss/178415/C%2B%2BJavaPython-DP-Solution"
        },
        {
            "discussion_title": "DP solution that is Easy to understand",
            "discussion_vote": "11",
            "discussion_views": "423",
            "discussion_link": "https://leetcode.com/problems/number-of-music-playlists/discuss/180338/DP-solution-that-is-Easy-to-understand"
        },
        {
            "discussion_title": "[C++] Straight forward DP, with explanation",
            "discussion_vote": "10",
            "discussion_views": "598",
            "discussion_link": "https://leetcode.com/problems/number-of-music-playlists/discuss/178423/C%2B%2B-Straight-forward-DP-with-explanation"
        },
        {
            "discussion_title": "[Python3] A math solution O((N - K) * log(L - K))",
            "discussion_vote": "4",
            "discussion_views": "382",
            "discussion_link": "https://leetcode.com/problems/number-of-music-playlists/discuss/178514/Python3-A-math-solution-O((N-K)-*-log(L-K))"
        },
        {
            "discussion_title": "Java dp solution (I think the description of the problem could be clearer)",
            "discussion_vote": "4",
            "discussion_views": "264",
            "discussion_link": "https://leetcode.com/problems/number-of-music-playlists/discuss/178503/Java-dp-solution-(I-think-the-description-of-the-problem-could-be-clearer)"
        }
    ],
    "921": [
        {
            "discussion_title": "[Java] two one pass 7 liners - space O(n) and O(1), respectively",
            "discussion_vote": "11",
            "discussion_views": "828",
            "discussion_link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/discuss/181086/Java-two-one-pass-7-liners-space-O(n)-and-O(1)-respectively"
        },
        {
            "discussion_title": "[C++/Java/Python] Straight Forward One Pass",
            "discussion_vote": "7",
            "discussion_views": "476",
            "discussion_link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/discuss/181132/C%2B%2BJavaPython-Straight-Forward-One-Pass"
        },
        {
            "discussion_title": "Python classic valid paranthesis solution",
            "discussion_vote": "5",
            "discussion_views": "175",
            "discussion_link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/discuss/181264/Python-classic-valid-paranthesis-solution"
        },
        {
            "discussion_title": "[Java] Easy to understand Stack Solution (8ms) ",
            "discussion_vote": "4",
            "discussion_views": "82",
            "discussion_link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/discuss/182799/Java-Easy-to-understand-Stack-Solution-(8ms)"
        },
        {
            "discussion_title": "Python 3-line mathematically optimal solution with explanation, one-pass O(n) time O(1) space",
            "discussion_vote": "3",
            "discussion_views": "96",
            "discussion_link": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/discuss/181245/Python-3-line-mathematically-optimal-solution-with-explanation-one-pass-O(n)-time-O(1)-space"
        }
    ],
    "922": [
        {
            "discussion_title": "Java two pointer one pass inplace",
            "discussion_vote": "13",
            "discussion_views": "645",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity-ii/discuss/181160/Java-two-pointer-one-pass-inplace"
        },
        {
            "discussion_title": "Python easy 2-liner",
            "discussion_vote": "6",
            "discussion_views": "494",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity-ii/discuss/181261/Python-easy-2-liner"
        },
        {
            "discussion_title": "C++ 5 lines, two pointers + 2-liner bonus",
            "discussion_vote": "6",
            "discussion_views": "521",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity-ii/discuss/181158/C%2B%2B-5-lines-two-pointers-%2B-2-liner-bonus"
        },
        {
            "discussion_title": "[Java] Two pointers inplace O(n) time simple & straightforward",
            "discussion_vote": "5",
            "discussion_views": "298",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity-ii/discuss/181500/Java-Two-pointers-inplace-O(n)-time-simple-and-straightforward"
        },
        {
            "discussion_title": "[Java] simple code - swap odd and even indices elements.",
            "discussion_vote": "4",
            "discussion_views": "455",
            "discussion_link": "https://leetcode.com/problems/sort-array-by-parity-ii/discuss/181075/Java-simple-code-swap-odd-and-even-indices-elements."
        }
    ],
    "923": [
        {
            "discussion_title": "[C++/Java/Python] O(101^2)",
            "discussion_vote": "43",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/3sum-with-multiplicity/discuss/181131/C%2B%2BJavaPython-O(1012)"
        },
        {
            "discussion_title": "10 lines Super Super Easy Java Solution",
            "discussion_vote": "31",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/3sum-with-multiplicity/discuss/181128/10-lines-Super-Super-Easy-Java-Solution"
        },
        {
            "discussion_title": "Knapsack O(n * target) or Straightforward O(n^2)",
            "discussion_vote": "10",
            "discussion_views": "437",
            "discussion_link": "https://leetcode.com/problems/3sum-with-multiplicity/discuss/181125/Knapsack-O(n-*-target)-or-Straightforward-O(n2)"
        },
        {
            "discussion_title": "[Java] O(n^2) code - Sort and Match.",
            "discussion_vote": "6",
            "discussion_views": "366",
            "discussion_link": "https://leetcode.com/problems/3sum-with-multiplicity/discuss/181098/Java-O(n2)-code-Sort-and-Match."
        },
        {
            "discussion_title": "DP, python",
            "discussion_vote": "5",
            "discussion_views": "240",
            "discussion_link": "https://leetcode.com/problems/3sum-with-multiplicity/discuss/181089/DP-python"
        }
    ],
    "924": [
        {
            "discussion_title": "[Python] Union Found",
            "discussion_vote": "12",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread/discuss/181129/Python-Union-Found"
        },
        {
            "discussion_title": "Python short DFS solution",
            "discussion_vote": "5",
            "discussion_views": "347",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread/discuss/181723/Python-short-DFS-solution"
        },
        {
            "discussion_title": "How to explain this test case?",
            "discussion_vote": "5",
            "discussion_views": "372",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread/discuss/181140/How-to-explain-this-test-case"
        },
        {
            "discussion_title": "Brute force or Union Find",
            "discussion_vote": "5",
            "discussion_views": "341",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread/discuss/181100/Brute-force-or-Union-Find"
        },
        {
            "discussion_title": "C++ Union Find With Explanation",
            "discussion_vote": "4",
            "discussion_views": "298",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread/discuss/181138/C%2B%2B-Union-Find-With-Explanation"
        }
    ],
    "925": [
        {
            "discussion_title": "[C++/Java/Python] Two Pointers",
            "discussion_vote": "15",
            "discussion_views": "628",
            "discussion_link": "https://leetcode.com/problems/long-pressed-name/discuss/183994/C%2B%2BJavaPython-Two-Pointers"
        },
        {
            "discussion_title": "Java one pass solution 4ms with O(1) extra space",
            "discussion_vote": "11",
            "discussion_views": "454",
            "discussion_link": "https://leetcode.com/problems/long-pressed-name/discuss/184488/Java-one-pass-solution-4ms-with-O(1)-extra-space"
        },
        {
            "discussion_title": "C++ 2 lines accepted and 5 lines accurate",
            "discussion_vote": "7",
            "discussion_views": "371",
            "discussion_link": "https://leetcode.com/problems/long-pressed-name/discuss/183929/C%2B%2B-2-lines-accepted-and-5-lines-accurate"
        },
        {
            "discussion_title": "Java Simple Solution -3 ms",
            "discussion_vote": "3",
            "discussion_views": "47",
            "discussion_link": "https://leetcode.com/problems/long-pressed-name/discuss/184726/Java-Simple-Solution-3-ms"
        },
        {
            "discussion_title": "Short Java Solution",
            "discussion_vote": "3",
            "discussion_views": "175",
            "discussion_link": "https://leetcode.com/problems/long-pressed-name/discuss/183965/Short-Java-Solution"
        }
    ],
    "926": [
        {
            "discussion_title": "Prefix-Suffix Java O(N) One Pass Solution - Space O(1)",
            "discussion_vote": "27",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/flip-string-to-monotone-increasing/discuss/183896/Prefix-Suffix-Java-O(N)-One-Pass-Solution-Space-O(1)"
        },
        {
            "discussion_title": "C++/Java 4 lines O(n) | O(1), DP",
            "discussion_vote": "21",
            "discussion_views": "1.0K",
            "discussion_link": "https://leetcode.com/problems/flip-string-to-monotone-increasing/discuss/183851/C%2B%2BJava-4-lines-O(n)-or-O(1)-DP"
        },
        {
            "discussion_title": "Java DP solution O(n) time O(1) space",
            "discussion_vote": "14",
            "discussion_views": "645",
            "discussion_link": "https://leetcode.com/problems/flip-string-to-monotone-increasing/discuss/183855/Java-DP-solution-O(n)-time-O(1)-space"
        },
        {
            "discussion_title": "python O(n) time O(1) space solution with explanation(with extra Chinese explanation)",
            "discussion_vote": "8",
            "discussion_views": "231",
            "discussion_link": "https://leetcode.com/problems/flip-string-to-monotone-increasing/discuss/184110/python-O(n)-time-O(1)-space-solution-with-explanation(with-extra-Chinese-explanation)"
        },
        {
            "discussion_title": "C++ one-pass DP solution, 0ms O(n) | O(1), one line, with explaination.",
            "discussion_vote": "7",
            "discussion_views": "153",
            "discussion_link": "https://leetcode.com/problems/flip-string-to-monotone-increasing/discuss/189751/C%2B%2B-one-pass-DP-solution-0ms-O(n)-or-O(1)-one-line-with-explaination."
        }
    ],
    "927": [
        {
            "discussion_title": "[C++] O(n) time, O(1) space, 12 ms with explanation & comments",
            "discussion_vote": "16",
            "discussion_views": "936",
            "discussion_link": "https://leetcode.com/problems/three-equal-parts/discuss/183922/C%2B%2B-O(n)-time-O(1)-space-12-ms-with-explanation-and-comments"
        },
        {
            "discussion_title": "Java O(n) Solution",
            "discussion_vote": "8",
            "discussion_views": "625",
            "discussion_link": "https://leetcode.com/problems/three-equal-parts/discuss/183902/Java-O(n)-Solution"
        },
        {
            "discussion_title": "[C++] O(N) time O(N) space, 40ms, 14 lines, 2 loops, easy understand with explanation",
            "discussion_vote": "6",
            "discussion_views": "153",
            "discussion_link": "https://leetcode.com/problems/three-equal-parts/discuss/183991/C%2B%2B-O(N)-time-O(N)-space-40ms-14-lines-2-loops-easy-understand-with-explanation"
        },
        {
            "discussion_title": "JAVA 50ms with my thinking process",
            "discussion_vote": "3",
            "discussion_views": "208",
            "discussion_link": "https://leetcode.com/problems/three-equal-parts/discuss/183895/JAVA-50ms-with-my-thinking-process"
        },
        {
            "discussion_title": "Java 10ms solution with O(n) time and O(1)space",
            "discussion_vote": "2",
            "discussion_views": "103",
            "discussion_link": "https://leetcode.com/problems/three-equal-parts/discuss/184580/Java-10ms-solution-with-O(n)-time-and-O(1)space"
        }
    ],
    "928": [
        {
            "discussion_title": "python solution with my thinking process (with extra Chinese explanation)",
            "discussion_vote": "11",
            "discussion_views": "520",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread-ii/discuss/184129/python-solution-with-my-thinking-process-(with-extra-Chinese-explanation)"
        },
        {
            "discussion_title": "\u5206\u4eab\u4e00\u4e2a\u8be6\u7ec6\u4e2d\u6587C++\u8bb2\u89e3",
            "discussion_vote": "6",
            "discussion_views": "124",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread-ii/discuss/187715/C%2B%2B"
        },
        {
            "discussion_title": "Short Python DFS solution w/ short explanation ~290 ms",
            "discussion_vote": "4",
            "discussion_views": "253",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread-ii/discuss/184112/Short-Python-DFS-solution-w-short-explanation-~290-ms"
        },
        {
            "discussion_title": "Java (42ms) using Union Find Set and Brute Force with explaination",
            "discussion_vote": "4",
            "discussion_views": "513",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread-ii/discuss/183860/Java-(42ms)-using-Union-Find-Set-and-Brute-Force-with-explaination"
        },
        {
            "discussion_title": "java bfs without copy graph",
            "discussion_vote": "1",
            "discussion_views": "62",
            "discussion_link": "https://leetcode.com/problems/minimize-malware-spread-ii/discuss/184734/java-bfs-without-copy-graph"
        }
    ],
    "929": [
        {
            "discussion_title": "[Java] 7 liner with comment.",
            "discussion_vote": "8",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/unique-email-addresses/discuss/186798/Java-7-liner-with-comment."
        },
        {
            "discussion_title": "python solution",
            "discussion_vote": "4",
            "discussion_views": "398",
            "discussion_link": "https://leetcode.com/problems/unique-email-addresses/discuss/187527/python-solution"
        },
        {
            "discussion_title": "Concise C++",
            "discussion_vote": "4",
            "discussion_views": "347",
            "discussion_link": "https://leetcode.com/problems/unique-email-addresses/discuss/186655/Concise-C%2B%2B"
        },
        {
            "discussion_title": "[Java] Clean O(n*maxStringLen) with and without split()",
            "discussion_vote": "2",
            "discussion_views": "734",
            "discussion_link": "https://leetcode.com/problems/unique-email-addresses/discuss/186645/Java-Clean-O(n*maxStringLen)-with-and-without-split()"
        },
        {
            "discussion_title": "python solution beat 91%",
            "discussion_vote": "1",
            "discussion_views": "5",
            "discussion_link": "https://leetcode.com/problems/unique-email-addresses/discuss/197936/python-solution-beat-91"
        }
    ],
    "930": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "36",
            "discussion_views": "2.0K",
            "discussion_link": "https://leetcode.com/problems/binary-subarrays-with-sum/discuss/186683/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "[Java] Clean Solution 2 Sum + Prefix Sum Caching",
            "discussion_vote": "18",
            "discussion_views": "744",
            "discussion_link": "https://leetcode.com/problems/binary-subarrays-with-sum/discuss/186647/Java-Clean-Solution-2-Sum-%2B-Prefix-Sum-Caching"
        },
        {
            "discussion_title": "Java O(N) Time O(N) Space, counting contiguous zeros",
            "discussion_vote": "7",
            "discussion_views": "427",
            "discussion_link": "https://leetcode.com/problems/binary-subarrays-with-sum/discuss/186693/Java-O(N)-Time-O(N)-Space-counting-contiguous-zeros"
        },
        {
            "discussion_title": "3 ways to solve this kind of problem.",
            "discussion_vote": "6",
            "discussion_views": "398",
            "discussion_link": "https://leetcode.com/problems/binary-subarrays-with-sum/discuss/187005/3-ways-to-solve-this-kind-of-problem."
        },
        {
            "discussion_title": "Python easy & short",
            "discussion_vote": "1",
            "discussion_views": "125",
            "discussion_link": "https://leetcode.com/problems/binary-subarrays-with-sum/discuss/186850/Python-easy-and-short"
        }
    ],
    "931": [
        {
            "discussion_title": "Java DP solution, with graph illustrated explanations",
            "discussion_vote": "8",
            "discussion_views": "808",
            "discussion_link": "https://leetcode.com/problems/minimum-falling-path-sum/discuss/186689/Java-DP-solution-with-graph-illustrated-explanations"
        },
        {
            "discussion_title": "C++/Java 4 lines DP",
            "discussion_vote": "6",
            "discussion_views": "669",
            "discussion_link": "https://leetcode.com/problems/minimum-falling-path-sum/discuss/186666/C%2B%2BJava-4-lines-DP"
        },
        {
            "discussion_title": "[Java] two clean DP codes - input modified and not, Time O(n ^ 2), space O(1) & O(n)",
            "discussion_vote": "1",
            "discussion_views": "343",
            "discussion_link": "https://leetcode.com/problems/minimum-falling-path-sum/discuss/186651/Java-two-clean-DP-codes-input-modified-and-not-Time-O(n-2)-space-O(1)-and-O(n)"
        },
        {
            "discussion_title": "C 4ms DP Solution With Explanation",
            "discussion_vote": "0",
            "discussion_views": "13",
            "discussion_link": "https://leetcode.com/problems/minimum-falling-path-sum/discuss/196646/C-4ms-DP-Solution-With-Explanation"
        },
        {
            "discussion_title": "Golang DP Solution",
            "discussion_vote": "0",
            "discussion_views": "7",
            "discussion_link": "https://leetcode.com/problems/minimum-falling-path-sum/discuss/196581/Golang-DP-Solution"
        }
    ],
    "932": [
        {
            "discussion_title": "[C++/Java/Python] Odd + Even Pattern, O(N)",
            "discussion_vote": "101",
            "discussion_views": "3.4K",
            "discussion_link": "https://leetcode.com/problems/beautiful-array/discuss/186679/C%2B%2BJavaPython-Odd-%2B-Even-Pattern-O(N)"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 108 screencast (only record 10 mins)",
            "discussion_vote": "15",
            "discussion_views": "974",
            "discussion_link": "https://leetcode.com/problems/beautiful-array/discuss/186727/LeetCode-Weekly-Contest-108-screencast-(only-record-10-mins)"
        },
        {
            "discussion_title": "Python 1-line solutions",
            "discussion_vote": "10",
            "discussion_views": "1.2K",
            "discussion_link": "https://leetcode.com/problems/beautiful-array/discuss/186680/Python-1-line-solutions"
        },
        {
            "discussion_title": "[3 solutions] 4 lines in Python (Divide & Conquer) + DP (Top-down and bottom-up)",
            "discussion_vote": "10",
            "discussion_views": "636",
            "discussion_link": "https://leetcode.com/problems/beautiful-array/discuss/186661/3-solutions-4-lines-in-Python-(Divide-and-Conquer)-%2B-DP-(Top-down-and-bottom-up)"
        },
        {
            "discussion_title": "[JavaScript] How I understand the solution (with verification of the solution)",
            "discussion_vote": "7",
            "discussion_views": "188",
            "discussion_link": "https://leetcode.com/problems/beautiful-array/discuss/186901/JavaScript-How-I-understand-the-solution-(with-verification-of-the-solution)"
        }
    ],
    "933": [
        {
            "discussion_title": "[Java] Three solutions: TreeMap , TreeSet, ArrayList; All time O(logN).",
            "discussion_vote": "9",
            "discussion_views": "905",
            "discussion_link": "https://leetcode.com/problems/number-of-recent-calls/discuss/189239/Java-Three-solutions%3A-TreeMap-TreeSet-ArrayList-All-time-O(logN)."
        },
        {
            "discussion_title": "C++ Easy and Clean solution using queue",
            "discussion_vote": "4",
            "discussion_views": "423",
            "discussion_link": "https://leetcode.com/problems/number-of-recent-calls/discuss/189334/C%2B%2B-Easy-and-Clean-solution-using-queue"
        },
        {
            "discussion_title": "Python straightforward solution",
            "discussion_vote": "3",
            "discussion_views": "303",
            "discussion_link": "https://leetcode.com/problems/number-of-recent-calls/discuss/189425/Python-straightforward-solution"
        },
        {
            "discussion_title": "Simple JavaScript solution (3 lines)",
            "discussion_vote": "3",
            "discussion_views": "107",
            "discussion_link": "https://leetcode.com/problems/number-of-recent-calls/discuss/189291/Simple-JavaScript-solution-(3-lines)"
        },
        {
            "discussion_title": "[Java] Array + binary search, 111 ms, O(log(3000)) time, O(logN) space",
            "discussion_vote": "2",
            "discussion_views": "47",
            "discussion_link": "https://leetcode.com/problems/number-of-recent-calls/discuss/192324/Java-Array-%2B-binary-search-111-ms-O(log(3000))-time-O(logN)-space"
        }
    ],
    "934": [
        {
            "discussion_title": "C++ BFS Island Expansion + UF Bonus",
            "discussion_vote": "26",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/shortest-bridge/discuss/189293/C%2B%2B-BFS-Island-Expansion-%2B-UF-Bonus"
        },
        {
            "discussion_title": "Python concise DFS & BFS in 1 solution",
            "discussion_vote": "15",
            "discussion_views": "539",
            "discussion_link": "https://leetcode.com/problems/shortest-bridge/discuss/189440/Python-concise-DFS-and-BFS-in-1-solution"
        },
        {
            "discussion_title": "Java DFS find the island -> BFS expand the island",
            "discussion_vote": "12",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/shortest-bridge/discuss/189321/Java-DFS-find-the-island-greater-BFS-expand-the-island"
        },
        {
            "discussion_title": "Java DFS+BFS, traverse the 2D array once",
            "discussion_vote": "8",
            "discussion_views": "373",
            "discussion_link": "https://leetcode.com/problems/shortest-bridge/discuss/189315/Java-DFS%2BBFS-traverse-the-2D-array-once"
        },
        {
            "discussion_title": "Java extremely easy to understand with comment (bfs to find answer and dfs to paint the matrix)",
            "discussion_vote": "4",
            "discussion_views": "163",
            "discussion_link": "https://leetcode.com/problems/shortest-bridge/discuss/190421/Java-extremely-easy-to-understand-with-comment-(bfs-to-find-answer-and-dfs-to-paint-the-matrix)"
        }
    ],
    "935": [
        {
            "discussion_title": "O(logN)",
            "discussion_vote": "31",
            "discussion_views": "1.7K",
            "discussion_link": "https://leetcode.com/problems/knight-dialer/discuss/189252/O(logN)"
        },
        {
            "discussion_title": "[Java] Top Down Memo DP O(N)",
            "discussion_vote": "18",
            "discussion_views": "924",
            "discussion_link": "https://leetcode.com/problems/knight-dialer/discuss/189271/Java-Top-Down-Memo-DP-O(N)"
        },
        {
            "discussion_title": "O(n) time O(1) space DP solution + Google interview question writeup",
            "discussion_vote": "12",
            "discussion_views": "513",
            "discussion_link": "https://leetcode.com/problems/knight-dialer/discuss/189287/O(n)-time-O(1)-space-DP-solution-%2B-Google-interview-question-writeup"
        },
        {
            "discussion_title": "How to solve this problem explained for noobs!!!",
            "discussion_vote": "6",
            "discussion_views": "249",
            "discussion_link": "https://leetcode.com/problems/knight-dialer/discuss/190787/How-to-solve-this-problem-explained-for-noobs!!!"
        },
        {
            "discussion_title": "C++ 5 lines DP",
            "discussion_vote": "6",
            "discussion_views": "408",
            "discussion_link": "https://leetcode.com/problems/knight-dialer/discuss/189251/C%2B%2B-5-lines-DP"
        }
    ],
    "936": [
        {
            "discussion_title": "[C++] Reverse Operation, 30 ms, better than DFS",
            "discussion_vote": "13",
            "discussion_views": "1.1K",
            "discussion_link": "https://leetcode.com/problems/stamping-the-sequence/discuss/189258/C%2B%2B-Reverse-Operation-30-ms-better-than-DFS"
        },
        {
            "discussion_title": "C++ simple greedy",
            "discussion_vote": "7",
            "discussion_views": "260",
            "discussion_link": "https://leetcode.com/problems/stamping-the-sequence/discuss/189576/C%2B%2B-simple-greedy"
        },
        {
            "discussion_title": "Python AC greedy simple solution for everyone ~200 ms",
            "discussion_vote": "7",
            "discussion_views": "229",
            "discussion_link": "https://leetcode.com/problems/stamping-the-sequence/discuss/189469/Python-AC-greedy-simple-solution-for-everyone-~200-ms"
        },
        {
            "discussion_title": "Useless screencast (only 1 min, for promoting my YouTube channel)",
            "discussion_vote": "6",
            "discussion_views": "366",
            "discussion_link": "https://leetcode.com/problems/stamping-the-sequence/discuss/189343/Useless-screencast-(only-1-min-for-promoting-my-YouTube-channel)"
        },
        {
            "discussion_title": "Python Solutions",
            "discussion_vote": "6",
            "discussion_views": "745",
            "discussion_link": "https://leetcode.com/problems/stamping-the-sequence/discuss/189254/Python-Solutions"
        }
    ],
    "937": [
        {
            "discussion_title": "Python 1-liner",
            "discussion_vote": "9",
            "discussion_views": "498",
            "discussion_link": "https://leetcode.com/problems/reorder-log-files/discuss/192144/Python-1-liner"
        },
        {
            "discussion_title": "C++ stable_sort easy to understand",
            "discussion_vote": "4",
            "discussion_views": "152",
            "discussion_link": "https://leetcode.com/problems/reorder-log-files/discuss/193656/C%2B%2B-stable_sort-easy-to-understand"
        },
        {
            "discussion_title": "Java - Nothing Fancy, 15 lines, 5ms, all clear.",
            "discussion_vote": "2",
            "discussion_views": "206",
            "discussion_link": "https://leetcode.com/problems/reorder-log-files/discuss/193872/Java-Nothing-Fancy-15-lines-5ms-all-clear."
        },
        {
            "discussion_title": "few lines C++ version, 8ms",
            "discussion_vote": "1",
            "discussion_views": "74",
            "discussion_link": "https://leetcode.com/problems/reorder-log-files/discuss/193485/few-lines-C%2B%2B-version-8ms"
        },
        {
            "discussion_title": "C++ stable_sort and lambdas",
            "discussion_vote": "1",
            "discussion_views": "91",
            "discussion_link": "https://leetcode.com/problems/reorder-log-files/discuss/192953/C%2B%2B-stable_sort-and-lambdas"
        }
    ],
    "938": [
        {
            "discussion_title": "[Java] 3 recursive methods with comment.",
            "discussion_vote": "10",
            "discussion_views": "705",
            "discussion_link": "https://leetcode.com/problems/range-sum-of-bst/discuss/192019/Java-3-recursive-methods-with-comment."
        },
        {
            "discussion_title": "Python 1-liner",
            "discussion_vote": "4",
            "discussion_views": "283",
            "discussion_link": "https://leetcode.com/problems/range-sum-of-bst/discuss/192148/Python-1-liner"
        },
        {
            "discussion_title": "Jave easy to understand 2ms solution (tree pruning)",
            "discussion_vote": "3",
            "discussion_views": "86",
            "discussion_link": "https://leetcode.com/problems/range-sum-of-bst/discuss/193674/Jave-easy-to-understand-2ms-solution-(tree-pruning)"
        },
        {
            "discussion_title": "Medium??? I don't think so",
            "discussion_vote": "2",
            "discussion_views": "176",
            "discussion_link": "https://leetcode.com/problems/range-sum-of-bst/discuss/194047/Medium-I-don't-think-so"
        },
        {
            "discussion_title": "Python3 | Easy to understand | InOrder Traversal",
            "discussion_vote": "2",
            "discussion_views": "111",
            "discussion_link": "https://leetcode.com/problems/range-sum-of-bst/discuss/193235/Python3-or-Easy-to-understand-or-InOrder-Traversal"
        }
    ],
    "939": [
        {
            "discussion_title": "Java N^2 Hashmap",
            "discussion_vote": "42",
            "discussion_views": "1.4K",
            "discussion_link": "https://leetcode.com/problems/minimum-area-rectangle/discuss/192025/Java-N2-Hashmap"
        },
        {
            "discussion_title": "Python O(N^1.5), 80ms",
            "discussion_vote": "21",
            "discussion_views": "1.3K",
            "discussion_link": "https://leetcode.com/problems/minimum-area-rectangle/discuss/192021/Python-O(N1.5)-80ms"
        },
        {
            "discussion_title": "C++ hash-map + set intersection 56 ms",
            "discussion_vote": "5",
            "discussion_views": "477",
            "discussion_link": "https://leetcode.com/problems/minimum-area-rectangle/discuss/192026/C%2B%2B-hash-map-%2B-set-intersection-56-ms"
        },
        {
            "discussion_title": "Simple AF JAVA solution, with explanation O(n2)",
            "discussion_vote": "3",
            "discussion_views": "209",
            "discussion_link": "https://leetcode.com/problems/minimum-area-rectangle/discuss/192759/Simple-AF-JAVA-solution-with-explanation-O(n2)"
        },
        {
            "discussion_title": "Python straightforward & concise",
            "discussion_vote": "3",
            "discussion_views": "132",
            "discussion_link": "https://leetcode.com/problems/minimum-area-rectangle/discuss/192257/Python-straightforward-and-concise"
        }
    ],
    "940": [
        {
            "discussion_title": "[C++/Java/Python] 4 lines O(N) Time, O(1) Space",
            "discussion_vote": "58",
            "discussion_views": "1.8K",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences-ii/discuss/192017/C%2B%2BJavaPython-4-lines-O(N)-Time-O(1)-Space"
        },
        {
            "discussion_title": "Java DP O(N^2) time -> O(N) time -> O(1) space",
            "discussion_vote": "19",
            "discussion_views": "833",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences-ii/discuss/192030/Java-DP-O(N2)-time-greater-O(N)-time-greater-O(1)-space"
        },
        {
            "discussion_title": "C++ O(n) | O (n) Geeks4Geeks improved to O(n) | O(1)",
            "discussion_vote": "8",
            "discussion_views": "342",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences-ii/discuss/192095/C%2B%2B-O(n)-or-O-(n)-Geeks4Geeks-improved-to-O(n)-or-O(1)"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 110 screencast (rank 26)",
            "discussion_vote": "6",
            "discussion_views": "286",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences-ii/discuss/192092/LeetCode-Weekly-Contest-110-screencast-(rank-26)"
        },
        {
            "discussion_title": "python solution with Chinese explanation showing my thinking process",
            "discussion_vote": "3",
            "discussion_views": "123",
            "discussion_link": "https://leetcode.com/problems/distinct-subsequences-ii/discuss/192282/python-solution-with-Chinese-explanation-showing-my-thinking-process"
        }
    ],
    "941": [
        {
            "discussion_title": "[C++/Java/Python] Climb Mountain",
            "discussion_vote": "37",
            "discussion_views": "774",
            "discussion_link": "https://leetcode.com/problems/valid-mountain-array/discuss/194900/C%2B%2BJavaPython-Climb-Mountain"
        },
        {
            "discussion_title": "C++ Track Peak",
            "discussion_vote": "3",
            "discussion_views": "101",
            "discussion_link": "https://leetcode.com/problems/valid-mountain-array/discuss/194941/C%2B%2B-Track-Peak"
        },
        {
            "discussion_title": "Python 2-liner",
            "discussion_vote": "2",
            "discussion_views": "107",
            "discussion_link": "https://leetcode.com/problems/valid-mountain-array/discuss/195114/Python-2-liner"
        },
        {
            "discussion_title": "Concise C++",
            "discussion_vote": "1",
            "discussion_views": "60",
            "discussion_link": "https://leetcode.com/problems/valid-mountain-array/discuss/195385/Concise-C%2B%2B"
        },
        {
            "discussion_title": "the 'stupid' but fast(3ms) method :)",
            "discussion_vote": "0",
            "discussion_views": "31",
            "discussion_link": "https://leetcode.com/problems/valid-mountain-array/discuss/197009/the-'stupid'-but-fast(3ms)-method-%3A)"
        }
    ],
    "942": [
        {
            "discussion_title": "[C++/Java/Python] Straight Forward",
            "discussion_vote": "14",
            "discussion_views": "797",
            "discussion_link": "https://leetcode.com/problems/di-string-match/discuss/194904/C%2B%2BJavaPython-Straight-Forward"
        },
        {
            "discussion_title": "C++ 5 lines high-low pointers",
            "discussion_vote": "6",
            "discussion_views": "325",
            "discussion_link": "https://leetcode.com/problems/di-string-match/discuss/194906/C%2B%2B-5-lines-high-low-pointers"
        },
        {
            "discussion_title": "Python 5-liner easy to understand",
            "discussion_vote": "3",
            "discussion_views": "97",
            "discussion_link": "https://leetcode.com/problems/di-string-match/discuss/195137/Python-5-liner-easy-to-understand"
        },
        {
            "discussion_title": "Probably the easiest java solution",
            "discussion_vote": "2",
            "discussion_views": "211",
            "discussion_link": "https://leetcode.com/problems/di-string-match/discuss/194937/Probably-the-easiest-java-solution"
        },
        {
            "discussion_title": "C++,implement, simple and straightforward, beats 99%",
            "discussion_vote": "1",
            "discussion_views": "24",
            "discussion_link": "https://leetcode.com/problems/di-string-match/discuss/197397/C%2B%2Bimplement-simple-and-straightforward-beats-99"
        }
    ],
    "943": [
        {
            "discussion_title": "Travelling Salesman Problem",
            "discussion_vote": "40",
            "discussion_views": "1.9K",
            "discussion_link": "https://leetcode.com/problems/find-the-shortest-superstring/discuss/194932/Travelling-Salesman-Problem"
        },
        {
            "discussion_title": "LeetCode Weekly Contest 111 screencast (rank 12)",
            "discussion_vote": "12",
            "discussion_views": "940",
            "discussion_link": "https://leetcode.com/problems/find-the-shortest-superstring/discuss/194947/LeetCode-Weekly-Contest-111-screencast-(rank-12)"
        },
        {
            "discussion_title": "Greedy solution is WRONG. If your greedy solution gets AC it only means you are LUCKY enough.",
            "discussion_vote": "10",
            "discussion_views": "462",
            "discussion_link": "https://leetcode.com/problems/find-the-shortest-superstring/discuss/195040/Greedy-solution-is-WRONG.-If-your-greedy-solution-gets-AC-it-only-means-you-are-LUCKY-enough."
        },
        {
            "discussion_title": "is this an interview level problem or not?",
            "discussion_vote": "9",
            "discussion_views": "822",
            "discussion_link": "https://leetcode.com/problems/find-the-shortest-superstring/discuss/195021/is-this-an-interview-level-problem-or-not"
        },
        {
            "discussion_title": "Python AC concise solution ~132 ms",
            "discussion_vote": "3",
            "discussion_views": "164",
            "discussion_link": "https://leetcode.com/problems/find-the-shortest-superstring/discuss/195203/Python-AC-concise-solution-~132-ms"
        }
    ],
    "944": [
        {
            "discussion_title": "Really bad example in the description",
            "discussion_vote": "17",
            "discussion_views": "591",
            "discussion_link": "https://leetcode.com/problems/delete-columns-to-make-sorted/discuss/194939/Really-bad-example-in-the-description"
        },
        {
            "discussion_title": "Why this problem is medium?",
            "discussion_vote": "7",
            "discussion_views": "670",
            "discussion_link": "https://leetcode.com/problems/delete-columns-to-make-sorted/discuss/194934/Why-this-problem-is-medium"
        },
        {
            "discussion_title": "C++ brute force O(n * m)",
            "discussion_vote": "5",
            "discussion_views": "233",
            "discussion_link": "https://leetcode.com/problems/delete-columns-to-make-sorted/discuss/194916/C%2B%2B-brute-force-O(n-*-m)"
        },
        {
            "discussion_title": "Python, Count Unsorted Columns",
            "discussion_vote": "4",
            "discussion_views": "381",
            "discussion_link": "https://leetcode.com/problems/delete-columns-to-make-sorted/discuss/194919/Python-Count-Unsorted-Columns"
        },
        {
            "discussion_title": "Python easy 1-liner O(n * m)",
            "discussion_vote": "2",
            "discussion_views": "117",
            "discussion_link": "https://leetcode.com/problems/delete-columns-to-make-sorted/discuss/195128/Python-easy-1-liner-O(n-*-m)"
        }
    ]
}